FORMAT: 1A
HOST: http://api.jcpenney.com


# JCPenney REST APIs

The JCPenney REST APIs provide programmatic access to our digital e-commerce platform resources. By utilising one of the five different APIs, developers can get information on the following:

* Catalog
* Account
* Order
* Stores
* Opt-in

Each API supports the JSON response format.

### Questions?
Please contact api-dl@jcp.com with any questions or comments.



# Group Catalog
This document explains the functionalities exposed by Catalog REST API. Catalog consists of departments, categories and products. At the top level of the hierarchy is a department. Each department contains sub categories underneath it, and each category can contain either sub categories or products. Consumers can either browse through the catalog or search the catalog.
Consumers can view detailed information about the product along with inventory and price information for a specific store or online channel. The API also provides list of recommended products for a given product and ability for user to view and add reviews to a given product.

## Departments [/departments]
Departments are the root elements in the catalog. Categories are assigned to a department and can be used to form the catalog navigational hierarchy.

### Department list [GET]
Retrieves all active/available departments in the catalog.

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Department[]')

    + Body

            [
                {
                    "id": "dept20000011",
                    "url": "http://api.jcpenney.com/v2/departments/dept20000011",
                    "name": "for the home",
                    "clearance": false
                },
                {
                    "id": "dept20000012",
                    "url": "http://api.jcpenney.com/v2/departments/dept20000012",
                    "name": "bed & bath",
                    "clearance": false
                },
                {
                    "id": "dept20022800026",
                    "url": "http://api.jcpenney.com/v2/departments/dept20022800026",
                    "name": "window",
                    "clearance": false
                },
                {
                    "id": "dept20000013",
                    "url": "http://api.jcpenney.com/v2/departments/dept20000013",
                    "name": "women",
                    "clearance": false
                },
                {
                    "id": "dept20000014",
                    "url": "http://api.jcpenney.com/v2/departments/dept20000014",
                    "name": "men",
                    "clearance": false
                },
                {
                    "id": "dept20021210041",
                    "url": "http://api.jcpenney.com/v2/departments/dept20021210041",
                    "name": "clearance",
                    "clearance": true
                }
            ]

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of departments",
                "type": "array",
                "items": {
                    "title": "Department",
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the department."
                        },
                        "url": {
                            "type": "URL",
                            "description": "URL to retrieve the department information."
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the department."
                        },
                        "clearance": {
                            "type": "boolean",
                            "description": "Indicates whether the department is a clearance department",
                            "default": false
                        },
                        "image": {
                            "type": "URL",
                            "description": "URL to the image assigned to the department."
                        },
                        "highResolutionImage": {
                            "type": "URL",
                            "description": "URL to the highResolutionImage assigned to the department."
                        }
                    },
                    "required": [
                        "id",
                        "url",
                        "name",
                        "clearance"
                    ]
                }
            }

+ Response 500


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



## Department [/departments/{departmentId}]
The department resource provides complete information about the department and also provides information about the categories assigned to the department.
An active department has at least one category assigned to it.

### Get a department [GET]
Retrieves a single department resource matching the department id passed in the request URL.

+ Parameters
    + departmentId (required, String, `dept20000013`) ... Unique identifier for the department.

+ Response 200


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Department')

    + Body

            {
                "id": "dept20000013",
                "name": "women",
                "clearance": false,
                "categories": [
                    {
                        "id": "cat20000013",
                        "url": "http://api.jcpenney.com/v2/categories/cat20000013",
                        "name": "SHOP SPECIAL SIZES",
                        "clearance": false,
                        "brand": false,
                        "header": true
                    },
                    {
                        "id": "cat2000014",
                        "url": "http://api.jcpenney.com/v2/categories/cat2000014",
                        "name": "SHOP CLOTHING",
                        "clearance": false,
                        "brand": false,
                        "header": true
                    },
                    {
                        "id": "cat2000015",
                        "url": "http://api.jcpenney.com/v2/categories/cat2000015",
                        "name": "SHOP ACCESSORIES",
                        "clearance": false,
                        "brand": false,
                        "header": true
                    },
                    {
                        "id": "cat2000016",
                        "url": "http://api.jcpenney.com/v2/categories/cat2000016",
                        "name": "SHOP BRANDS",
                        "clearance": false,
                        "brand": false,
                        "header": true
                    },
                    {
                        "id": "cat2000017",
                        "url": "http://api.jcpenney.com/v2/categories/cat2000017",
                        "name": "EXPLORE SHOPS",
                        "clearance": false,
                        "brand": false,
                        "header": true
                    },
                    {
                        "id": "cat2000018",
                        "url": "http://api.jcpenney.com/v2/categories/cat2000018",
                        "name": "SHOP SALE & CLEARANCE",
                        "clearance": false,
                        "brand": false,
                        "header": true
                    }
                ]
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "title": "Department",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the department."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the department."
                    },
                    "clearance": {
                        "type": "boolean",
                        "description": "Indicates whether the department is a clearance department.",
                        "default": false
                    },
                    "image": {
                        "type": "URL",
                        "description": "URL to the image assigned to the department."
                    },
                    "highResolutionImage": {
                        "type": "URL",
                        "description": "URL to the highResolutionImage assigned to the department."
                    },
                    "categories": {
                        "type": "array",
                        "title": "Categories set",
                        "items": {
                            "type": "object",
                            "title": "Category",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier of the category."
                                },
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve the sub-categories assigned to the category."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the category."
                                },
                                "clearance": {
                                    "type": "boolean",
                                    "description": "Indicates whether the category is a clearance category.",
                                    "default": false
                                },
                                "brand": {
                                    "type": "boolean",
                                    "description": "Indicates whether the category is a brand category.",
                                    "default": false
                                },
                                "header": {
                                    "type": "boolean",
                                    "description": "Indicates whether the category is a Header category.",
                                    "default": false
                                },
                                "image": {
                                    "type": "URL",
                                    "description": "URL to the image assigned to the category."
                                },
                                "highResolutionImage": {
                                    "type": "URL",
                                    "description": "URL to the highResolutionImage assigned to the category."
                                }
                            },
                            "required": [
                                "id",
                                "url",
                                "name",
                                "clearance",
                                "brand",
                                "Header"
                            ]
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "clearance"
                ]
            }



+ Response 404


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_DEPARTMENT_NOTFOUND",
                "errorMessage": "Department not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errrorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


## Category [/categories/{categoryId}]
A category represents a navigational node in the catalog hierarchy. A category can contain categories or products.

There are three types of categories clearance categories, header categories and brand categories. The type of category is represented by the corresponding boolean field.
It is possible for a category to belong to more than one category type.

### Get a category [GET]
Retrieve category resource matching the category id passed in the requested URL.

+ Parameters

    + categoryId (required, String, `cat100240031`) ... Unique identifier of category.

+ Response 200


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Category')

    + Body

            {
                "id": "cat20000013",
                "name": "SHOP SPECIAL SIZES",
                "clearance": false,
                "brand": false,
                "header": true,
                "categories": [
                    {
                        "id": "cat100240005",
                        "url": "http://api.jcpenney.com/v2/categories/cat100240005",
                        "name": "plus size",
                        "clearance": false,
                        "brand": false,
                        "header": false
                    },
                    {
                        "id": "cat100250027",
                        "url": "http://api.jcpenney.com/v2/categories/cat100250027",
                        "name": "petites",
                        "clearance": false,
                        "brand": false,
                        "header": false
                    },
                    {
                        "id": "cat100250030",
                        "url": "http://api.jcpenney.com/v2/categories/cat100250030",
                        "name": "talls",
                        "clearance": false,
                        "brand": false,
                        "header": false
                    },
                    {
                        "id": "cat100250032",
                        "url": "http://api.jcpenney.com/v2/categories/cat100250032",
                        "name": "maternity",
                        "clearance": false,
                        "brand": false,
                        "header": false
                    }
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Categories",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the category."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the category."
                    },
                    "clearance": {
                        "type": "boolean",
                        "description": "Indicates whether the category is a clearance category.",
                        "default": false
                    },
                    "brand": {
                        "type": "boolean",
                        "description": "Indicates whether the category represents a brand.",
                        "default": false
                    },
                    "header": {
                        "type": "boolean",
                        "description": "Indicates whether the category is a header category.",
                        "default": false
                    },
                    "image": {
                        "type": "URL",
                        "description": "URL to the image assigned to the category."
                    },
                    "highResolutionImage": {
                        "type": "URL",
                        "description": "URL to the high resolution image associated to the category."
                    },
                    "categories": {
                        "type": "array",
                        "title": "Set of categories",
                        "items": {
                            "type": "object",
                            "title": "Category",
                             "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier of the category."
                                },
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve the sub-categories or products assigned to the category."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the category."
                                },
                                "clearance": {
                                    "type": "boolean",
                                    "description": "Indicates whether the category is a clearance category.",
                                    "default": false
                                },
                                "brand": {
                                    "type": "boolean",
                                    "description": "Indicates whether the category is a brand category.",
                                    "default": false
                                },
                                "header": {
                                    "type": "boolean",
                                    "description": "Indicates whether the ctaegory is a header category.",
                                    "default": false
                                },
                                "image": {
                                    "type": "boolean",
                                    "description": "URL to the image assigned to the category."
                                },
                                "highResolutionImage": {
                                    "type": "URL",
                                    "description": "URL to the high resolution image associated to the category."
                                }
                            },
                            "required": [
                                "id",
                                "url",
                                "name",
                                "clearance",
                                "brand",
                                "header"
                            ]
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "clearance",
                    "brand",
                    "header"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_CATEGORY_NOTFOUND",
                "errorMessage": "Category not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



## Products [/categories/{categoryId}/products{?filters,page,pageSize,sortBy}]
A category can contain one or more products. It returns a list of products that belongs to the given category along with facet information, sort options and pagination.

Note: Prices provided in the response always represent Online price for the product.

### Get products in a category. [GET]
Retrieves the products in a category.

+ Parameters

    + categoryId (required, String, `cat100240031`) ... Unique identifier of category.
    + page (optional, Integer, `2`) ... Used for pagination of products.
    + pageSize (optional, Integer, `24`) ... Min 24 Max 96. default: 24. Used to indicate the number of products to be retrieved. If the number of products requested is more than the number of products assigned to the category then all the products in the category are returned.
    + sortBy (optional, String, `pricehightolow`) ... one of ('featured', 'pricehightolow', 'pricelowtohigh', 'ratingshightolow', 'ratingslowtohigh'). default: 'featured'. Used for sorting the products.
    + filters (optional, String, `1234`) ... Used for facet navigation of products.

+ Request

            Example: http://api.jcpenney.com/v2/categories/cat100240031/products?filters=600000&page=2&pageSize=24&sortBy=featured

    + Headers

            X-Currency: String ... (optional, String, `USD`)


+ Response 200


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Products')

    + Body

            {
                "id": "cat100210008",
                "name": "dresses",
                "clearance": false,
                "brand": false,
                "header": false,
                "products": [
                    {
                        "id": "pp5003200163",
                        "url": "http://api.jcpenney.com/v2/products/pp5003200163",
                        "name": "9 & Co.® Ruffle-Front Dress",
                        "isNew": false,
                        "rating": 0,
                        "reviewCount": 0,
                        "images": [
                            {
                                "url": "http://zoom.jcpenney.com/is/image/DP0905201317011659M.tif",
                                "swatchUrl": "http://zoom.jcpenney.com/is/image/DP0905201317011659M.tif",
                                "type": "PRIMARY",
                                "altText": "9 & Co.® Ruffle-Front Dress"
                            }
                        ],
                        "prices": [
                            {
                                "type": "ORIGINAL",
                                "min": 70,
                                "max": 70
                            },
                            {
                                "type": "SALE",
                                "min": 27.99,
                                "max": 27.99
                            }
                        ]
                    },
                    {
                        "id": "pp5003230750",
                        "url": "http://api.jcpenney.com/v2/products/pp5003230750",
                        "name": "Studio 1® Sweater Dress",
                        "isNew": false,
                        "rating": 4.7,
                        "reviewCount": 3,
                        "images": [
                            {
                                "url": "http://zoom.jcpenney.com/is/image/DP1030201318275736C.tif",
                                "swatchUrl": "http://www.jcpenney.com/dotcom/images/DP0925201317032943S.jpg",
                                "type": "PRIMARY",
                                "altText": "Black/Ivory"
                            },
                            {
                                "url": "http://zoom.jcpenney.com/is/image/DP0925201317032993M.tif",
                                "swatchUrl": "http://www.jcpenney.com/dotcom/images/DP0925201317032694S.jpg",
                                "type": "SWATCH",
                                "altText": "Black/grey/Ivory"
                            },
                            {
                                "url": "http://zoom.jcpenney.com/is/image/DP0925201317032993M.tif",
                                "swatchUrl": "http://www.jcpenney.com/dotcom/images/DP0925201317032444S.jpg",
                                "type": "SWATCH",
                                "altText": "Drk Grey/grey/ivor"
                            }
                        ],
                        "prices": [
                            {
                                "type": "ORIGINAL",
                                "min": 50,
                                "max": 50
                            },
                            {
                                "type": "SALE",
                                "min": 19.99,
                                "max": 19.99
                            }
                        ]
                    },
                    {
                        "id": "pp5003460186",
                        "url": "http://api.jcpenney.com/v2/products/pp5003460186",
                        "name": "R&K Originals® Belted V-Neck Sweater Dress",
                        "isNew": true,
                        "rating": 0,
                        "reviewCount": 0,
                        "images": [
                            {
                                "url": "http://zoom.jcpenney.com/is/image/DP1018201317020918M.tif",
                                "swatchUrl": "http://www.jcpenney.com/dotcom/images/DP1021201317025786S.jpg",
                                "type": "PRIMARY",
                                "altText": "Cherry"
                            },
                            {
                                "url": "http://zoom.jcpenney.com/is/image/DP1018201317020918M.tif",
                                "swatchUrl": "http://www.jcpenney.com/dotcom/images/DP1021201317030536S.jpg",
                                "type": "SWATCH",
                                "altText": "Grey"
                            }
                        ],
                        "prices": [
                            {
                                "type": "ORIGINAL",
                                "min": 60,
                                "max": 60
                            },
                            {
                                "type": "SALE",
                                "min": 29.99,
                                "max": 29.99
                            }
                        ]
                    }
                ],
                "filters": [
                    {
                        "id": "600000",
                        "name": "CATEGORIES",
                        "type": "DEFAULT",
                        "values": [
                            {
                                "id": "100250202",
                                "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?sortBy=featured&page=1&pageSize=24&filters=100250202",
                                "name": "$40 & under",
                                "count": 321,
                                "selected": false,
                                "available": true
                            },
                            {
                                "id": "100250208",
                                "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?sortBy=featured&page=1&pageSize=24&filters=100250208",
                                "name": "bridal dresses",
                                "count": 30,
                                "selected": false,
                                "available": true
                            }
                        ]
                    },
                    {
                        "id": "29",
                        "name": "SIZE RANGE",
                        "type": "DEFAULT",
                        "values": [
                            {
                                "id": "1724",
                                "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?sortBy=featured&page=1&pageSize=24&filters=1724",
                                "name": "juniors",
                                "count": 288,
                                "selected": false,
                                "available": true
                            }
                        ]
                    }
                ],
                "pages": [
                    {
                        "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?pageNum=1&pageSize=24",
                        "number": 1,
                        "selected": true
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?pageNum=2&pageSize=24",
                        "number": 2,
                        "selected": false
                    }
                ],
                "sortOptions": [
                    {
                        "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?pageNum=1&pageSize=24&sortBy=featured",
                        "name": "featured",
                        "selected": true,
                        "order": 1
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?pageNum=1&pageSize=24&sortBy=pricehightolow",
                        "name": "price high - low",
                        "selected": false,
                        "order": 2
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?pageNum=1&pageSize=24&sortBy=pricelowtohigh",
                        "name": "price low - high",
                        "selected": false,
                        "order": 3
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/categories/cat100210008/products?pageNum=1&pageSize=24&sortBy=ratingshightolow",
                        "name": "ratings high - low",
                        "selected": false,
                        "order": 4
                    }
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Products",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the category."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the category."
                    },
                    "clearance": {
                        "type": "boolean",
                        "description": "Indicates whether the category is a clearance category.",
                        "default": false
                    },
                    "brand": {
                        "type": "boolean",
                        "description": "Indicates whether the category is a brand.",
                        "default": false
                    },
                    "header": {
                        "type": "boolean",
                        "description": "Indicates whether the category is a Header category.",
                        "default": false
                    },
                    "image": {
                        "type": "URL",
                        "description": "URL to the image assigned to the category."
                    },
                    "highResolutionImage": {
                        "type": "URL",
                        "description": "URL to the highResolutionImage assigned to the category."
                    },
                    "count": {
                        "type": "long",
                        "description": "Number of products in the category."
                    },
                    "products": {
                        "title": "List of products",
                        "type": "array",
                        "description": "Array of products",
                        "items": {
                            "title": "Product",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier of the product."
                                },
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve the product detail information."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the product."
                                },
                                "isNew": {
                                    "type": "boolean",
                                    "description": "Indicates that the product is a new product.",
                                    "default": false
                                },
                                "rating": {
                                    "type": "double",
                                    "description": "Average rating of the product.",
                                    "default": 0
                                },
                                "reviewCount": {
                                    "type": "integer",
                                    "description": "Number of reviews for the product",
                                    "default": 0
                                },
                                "images": {
                                    "title": "List of images for the product",
                                    "type": "array",
                                    "items": {
                                        "title": "Image",
                                        "type": "object",
                                        "properties": {
                                            "url": {
                                                "type": "URL",
                                                "description": "URL to the product image."
                                            },
                                            "swatchUrl": {
                                                "type": "URL",
                                                "description": "URL to the swatch image for the product."
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "PRIMARY",
                                                    "ALTERNATE",
                                                    "SWATCH"
                                                ],
                                                "description": "Indicates the type of product image."
                                            },
                                            "altText": {
                                                "type": "string",
                                                "description": "Alternate text for the image."
                                            }
                                        },
                                        "required": [
                                            "url",
                                            "type"
                                        ]
                                    }
                                },
                                "prices": {
                                    "title": "Array of prices for the product.",
                                    "type": "array",
                                    "items": {
                                        "title": "Price",
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "ORIGINAL",
                                                    "SALE",
                                                    "CLEARANCE",
                                                    "MSRP"
                                                ],
                                                "description": "Indicates the type of price."
                                            },
                                            "min": {
                                                "type": "double",
                                                "description": "minimum price amount for the product.",
                                                "default": 0
                                            },
                                            "max": {
                                                "type": "double",
                                                "description": "maximum price amount for the product.",
                                                "default": 0
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "min",
                                            "max"
                                        ]
                                    }
                                },
                                "messages": {
                                    "title": "List of messages for the product",
                                    "type": "array",
                                    "items": {
                                        "title": "Message",
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "CHANNEL_MESSAGING",
                                                    "PROMOTION",
                                                    "TRUCK_DELIVERY"
                                                ],
                                                "description": "Indicates the type of message."
                                            },
                                            "title": {
                                                "type": "string",
                                                "description": "Title of the message"
                                            },
                                            "text": {
                                                "type": "string",
                                                "description": "Detail description of the message."
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "title",
                                            "text"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "id",
                                "url",
                                "name",
                                "isNew",
                                "rating",
                                "reviewCount",
                                "prices"
                            ]
                        }
                    },
                    "filters": {
                        "title": "Set of filters for facet navigation of products",
                        "type": "array",
                        "items": {
                            "title": "Filter",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "unique identifier for the filter."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name of the filter."
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "DEFAULT",
                                        "RANGE",
                                        "PRICE_RANGE"
                                    ],
                                    "description": "Indicates the type of filter."
                                },
                                "values": {
                                    "title": "List of filter values which can be applied.",
                                    "type": "array",
                                    "items": {
                                        "title": "FilterValue",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Unique identifier for the filter value."
                                            },
                                            "url": {
                                                "type": "URL",
                                                "description": "URL to be used to apply the filter."
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "name of the filter value"
                                            },
                                            "image": {
                                                "type": "URL",
                                                "description": "URL to the image assigned to the dimension value."
                                            },
                                            "count": {
                                                "type": "integer",
                                                "description": "Count of products for which the filter value is applicable.",
                                                "default": 0
                                            },
                                            "selected": {
                                                "type": "boolean",
                                                "description": "Indicates whether the current filter value is selected for the product.",
                                                "default": false
                                            },
                                            "available": {
                                                "type": "boolean",
                                                "description": "Indicates whether the current filter value is available for selection.",
                                                "default": true
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "url",
                                            "name",
                                            "image",
                                            "count",
                                            "selected",
                                            "available"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "type",
                                "values"
                            ]
                        }
                    },
                    "pages": {
                        "title": "Set of pages for supporting pagination",
                        "type": "object",
                        "items": {
                            "title": "page",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to be used to retrieve the products in the required page."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Page number",
                                    "default": 1
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates if the current page object is selected.",
                                    "default": false
                                }
                            },
                            "required": [
                                "url",
                                "number",
                                "selected"
                            ]
                        }
                    },
                    "sortOptions": {
                        "title": "List of sort options applicable to the products.",
                        "type": "array",
                        "items": {
                            "title": "SortOption",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to be used to retrieve the products sorted in a particular order."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the sort option."
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates if the sort option is selected.",
                                    "default": false
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "order of the sort option to be displayed.",
                                    "default": 1
                                }
                            },
                            "required": [
                                "url",
                                "name",
                                "selected",
                                "order"
                            ]
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "clearance",
                    "brand",
                    "Header"
                ]
            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            Request contains an invalid page.

            {
                "errorCode": "SRV_PAGE_INVALID",
                "errorMessage": "Page number provided is not applicable to the current request."
            }

            Request contains invalid page size.

            {
                "errorCode": "SRV_PAGESIZE_INVALID",
                "Page size provided is invalid. Only value between 24 and 96 is allowed."
            }

            Request contains invalid sort option.

            {
                "errorCode": "SRV_SORTBY_INVALID",
                "errorMessage": "Sort by value provided is invalid. SortBy value should be one of: [featured, pricehightolow, pricelowtohigh, ratingshightolow]."
            }

            Request contains an invalid filter value.

            {
                "errorCode": "SRV_FILTER_INVALID",
                "errorMessage": "The filter value provided is not applicable to the current request."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_CATEGORY_NOTFOUND",
                "errorMessage": "Category not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')


    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


## Product [/products/{productId}{?page,pageSize,storeNumber,storeAddress}]

Catalog contains different types of products such as:

- Regular products : Products with LOT/SKU/COLOR Options
- Single lot, single sku : Product with no LOT/SKU/COLOR options
- Ensemble : Product containing group of Products
- Products with Service agreements and warranties : Product contains service agreements and warranties. When such a product is added the product and the service agreement can be added to the cart/favorites.
- Products with variable data : Products such as monogram products, hemming products, gift cards, made to measure products.

### Get a product [GET]

Retrieves the product resource matching the product id passed in the requested URL.


+ Parameters

    + productId (required, String, `pp5002310768`) ... Unique identifier of the Product for which details are required.
    + page (optional, string, `1`) ... Page Number for which the store information is to be retrieved.
    + pageSize (optional, string, `24`) ... Min 24 Max 96. default: 24. Number of store results to be retrieved.
    + storeNumber (optional, string, `2795`) ... JCPenney store number for which pricing and inventory of nearby stores is to be retrieved.
    + storeAddress (optional, string, `19406/plano,texas/32.767,-117.17`) ... zip code/city state/longitude latitude for which pricing and inventory in near by JCPenney stores is to be retrieved.

+ Request


    + Headers

            X-Currency: String ... (optional, String, `USD`)

+ Response 200


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Product')

    + Body

            The examples below are cases when the sku selection has been completed.
            Some of the parameters such as skuId are not provided when sku selection is inprogress.

            **Response for a regular product**.

            {
                "id": "pp5002770550",
                "name": "Grecian Wrap Dress",
                "isNew": false,
                "rating": 0,
                "reviewCount": "0",
                "type": "REGULAR",
                "description": "<p>Wrap yourself in the Grecian-inspired draping of our fabulously flattering dress.</p>\r\n",
                "recommedationsUrl": "http://api.jcpenney.com/v2/products/pp5002770550/recommendations",
                "skuId": "22906380042",
                "inventory": {
                    "status": "AVAILABLE_LOW",
                    "message": "limited stock available"
                },
                "images": [
                    {
                        "url": "http://zoom.jcpenney.com/is/image/DP0424201317003965M.tif",
                        "type": "PRIMARY",
                        "altText": "Grecian Wrap Dress"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/DP0424201317003965M.tif",
                        "type": "ALTERNATE",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/DP0424201317003965M.tif",
                        "altText": "Grecian Wrap Dress"
                    }
                ],
                "prices": [
                    {
                        "max": 80,
                        "min": 80,
                        "type": "ORIGINAL"
                    },
                    {
                        "max": 39.99,
                        "min": 39.99,
                        "type": "CLEARANCE"
                    }
                ],
                "options": [
                    {
                        "name": "SIZE",
                        "type": "SKU_OPTION",
                        "optionValues": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002770550?SIZE=4",
                                "selected": false,
                                "available": false,
                                "value": "4"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002770550?SIZE=6",
                                "selected": false,
                                "available": false,
                                "value": 6
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002770550?SIZE=8",
                                "selected": true,
                                "available": true,
                                "value": 8
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002770550?SIZE=10",
                                "selected": false,
                                "available": false,
                                "value": 10
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002770550?SIZE=12",
                                "selected": false,
                                "available": false,
                                "value": 12
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002770550?SIZE=14",
                                "selected": false,
                                "available": false,
                                "value": 14
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002770550?SIZE=16",
                                "selected": false,
                                "available": false,
                                "value": 16
                            }
                        ]
                    },
                    {
                        "name": "COLOR",
                        "type": "COLOR_OPTION",
                        "optionValues": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002770550?SIZE=8&COLOR=Soc.cerise",
                                "selected": true,
                                "available": true,
                                "value": "Soc.cerise",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/DP0424201317003987S.jpg",
                                    "type": "SWATCH",
                                    "altText": "Soc.cerise"
                                }
                            }
                        ]
                    }
                ]
            }

            **Response for a product with service agreement**.
            Note: The response also holds good for a single lot single sku product.

            {
                "id": "1845342",
                "name": "Hoover® Carpet Cleaning Steam Vacuum",
                "isNew": false,
                "rating": 3.86,
                "reviewCount": 7,
                "reviewsURL": "http://api.jcpenney.com/v2/products/1845342/reviews",
                "type": "REGULAR",
                "description": "<p>\r\n\tSteamVac TurboPower carpet cleaner with SpinScrub gives your carpets and floors professional-looking results whenever you want without having to rent.</p>\r\n",
                "recommendationsURL": "http://api.jcpenney.com/v2/products/1845342/recommendations",
                "skuId": "86930540018",
                "inventory": {
                    "status": "AVAILABLE",
                    "message": "Available"
                },
                "images": [
                    {
                        "url": "http://zoom.jcpenney.com/is/image/0900631b818648d3M.tif",
                        "type": "PRIMARY",
                        "altText": "Hoover%C2%AE+Carpet+Cleaning+Steam+Vacuum"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/0900631b818648d3M.tif",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/0900631b818648d3M.tif",
                        "type": "ALTERNATE",
                        "altText": "Hoover%C2%AE+Carpet+Cleaning+Steam+Vacuum"
                    }
                ],
                "prices": [
                    {
                        "max": 120,
                        "min": 120,
                        "type": "ORIGINAL"
                    },
                    {
                        "max": 120,
                        "min": 120,
                        "type": "DEFAULT"
                    }
                ],
                "serviceAgreements": [
                    {
                        "name": "1YR SVS PLAN POS",
                        "data": "Your new floor care appliance is a real labor saver.  It works hard so you don�t have to!  Relax, it's easy to keep it working hard for you.  Just add a Purchase Protection Plan.The original product warranty covers parts and labor for 24 months (2 Years) from the date of purchase.Your new floor care appliance works hard so you don�t have to! Keep it running smoothly with a Purchase Protection Plan! Protect yourself against unexpected failures and expensive repairs.  The Purchase Protection Plan takes over when the manufacturer�s warranty ends providing 12 months of additional coverage.  If anything goes wrong with your new floor care product during the term of coverage, we�ll replace it. Simple as that! No hassles! No additional charges! No kidding!",
                        "selected": false,
                        "itemId": "86991460000",
                        "url": "http://api.jcpenney.com/v2/products/1845342?COLOR=Black&SERVICE_AGREEMENT=true",
                        "prices": [
                            {
                                "max": 11,
                                "min": 11,
                                "type": "ORIGINAL"
                            },
                            {
                                "max": 11,
                                "min": 11,
                                "type": "DEFAULT"
                            }
                        ]
                    }
                ],
                "warranties": [
                    {
                        "title": "REPAIR: CARRY-IN                        LABOR: 2 Y",
                        "description": "N5998                                                            N5998Sub 869                                                               Jun 2006                                                                                      Full Two Year Warranty                                                    (Domestic use)                                                                                                  Your HOOVER® appliance is warranted in normal household use, in       accordance with the Owner's Manual against original defects in        material and workmanship for a period of two full years from          date of purchase. This warranty provides, at no cost to you, all      labor and parts to place this appliance in correct operating          condition during the warranted period. This warranty applies          when the appliance is purchased in the United States including        its territories and possessions, or in Canada or from a U. S.         Military Exchange. Appliances purchased elsewhere are covered by      a limited one year warranty which covers the cost of parts only.      This warranty does not apply if the appliance is used in a            commercial or rental application.                                     \n                                                                      This warranty only applies when the product is in use in the          country or territory in which it is purchased.                                                                                              Warranty service can only be obtained by presenting the               appliance to one of the following authorized warranty service         outlets. Proof of purchase will be required before service is         rendered.                                                                                                                                   1. Hoover Sales and Service Centers                                                                                                         2. Hoover Authorized Warranty Service Dealers (Depots)                                                                                      For an automated referral of authorized service outlets in the        U.S.A., phone 1-800-944-9200 OR visit Hoover on-line at               www.hoover.com                                                                                                                              This warranty does not cover pick up, delivery, or house calls;       \nhowever, if you mail your appliance to a Hoover Sales and             Service Center for warranty service, transportation will be paid      one way.                                                                                                                                    While this warranty gives you specific legal rights, you may          also have other rights which vary from state to state.                                                                                      If further assistance is needed, or if there are questions            concerning this warranty or the availability of warranty service      outlets, phone the Hoover Consumer Response Center, Phone 1-330-      499-9499.                                                                                                                                   In Canada, contact Hoover Canada, Burlington, Ontario L7R 4A8,        1-800-263-6376. 21                                                                                                                          Fill in and Save                                                      For your records, enter the model number and serial numbers in        the spaces provided. These numbers are located on the data label      \nPage - 2                                                        N5998                                                                       on the underside of the main body of the cleaner.                     Model No. ____________________________                                Serial No. _____________________________                              Save your sales receipt and attach it to this manual. Proof of        date of purchase may be required for warranty service of your         cleaner
                        "referenceNumber": "warrN5998",
                        "selected": true
                    }
                ]
            }

            **Response for an ensemble product**

            {
                "id": "14355e7",
                "name": "Kirsch® Valance Rod",
                "isNew": false,
                "rating": 0,
                "reviewCount": 0,
                "type": "ENSEMBLE",
                "description": "<p>\r\n\tUse a valance rod to add a topper treatment to your draperies. Valance rods are specially designed to project farther from the wall so they will not interfere with draperies.</p>\r\n",
                "recommendationsURL": "http://api.jcpenney.com/v2/products/14355e7/recommendations",
                "images": [
                    {
                        "url": "http://zoom.jcpenney.com/is/image/0900631b80bf855aM.TIF",
                        "type": "PRIMARY",
                        "altText": "Kirsch%C2%AE+Valance+Rod"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/0900631b80bf855aM.TIF",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/0900631b80bf855aM.TIF",
                        "type": "ALTERNATE",
                        "altText": "Kirsch%C2%AE+Valance+Rod"
                    }
                ],
                "prices": [
                    {
                        "max": 35,
                        "min": 13,
                        "type": "ORIGINAL"
                    },
                    {
                        "max": 35,
                        "min": 13,
                        "type": "DEFAULT"
                    }
                ]
            }

            **Response for an EOB Lot**

            {
                "type": "FURNITURE",
                "name": "SPENCER FL RL/SL",
                "isNew": false,
                "rating": 0,
                "reviewCount": 0,
                "prices": [
                    {
                        "max": 220,
                        "min": 220,
                        "type": "ORIGINAL"
                    },
                    {
                        "max": 130,
                        "min": 130,
                        "type": "SALE"
                    }
                ],
                "skuId": "79059560109"
            }

            **Response for a monogram product**

            {
                "id": "pp5002720035",
                "name": "Stafford® Essentials Broadcloth Dress Shirt - Big & Tall",
                "isNew": false,
                "rating": 4.62,
                "reviewCount": 112,
                "reviewsURL": "http://api.jcpenney.com/v2/products/pp5002720035/reviews",
                "skuId": "53180980315",
                "type": "REGULAR",
                "description": " Stafford® Essentials Everyday dress shirt is a wardrobe staple featuring our commitment to quality and wearability.",
                "recommendationsURL": "http://api.jcpenney.com/v2/products/pp5002720035/recommendations",
                "images": [
                    {
                        "url": "http://zoom.jcpenney.com/is/image/DP0410201317020493M.tif",
                        "type": "PRIMARY",
                        "altText": "Stafford%C2%AE+Essentials+Broadcloth+Dress+Shirt+-+Big+%26+Tall"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81ce5a5bM",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81ce5a5bM",
                        "type": "ALTERNATE",
                        "altText": "Stafford%C2%AE+Essentials+Broadcloth+Dress+Shirt+-+Big+%26+Tall"
                    }
                ],
                "prices": [
                    {
                        "max": 40,
                        "min": 40,
                        "type": "ORIGINAL"
                    },
                    {
                        "max": 19.99,
                        "min": 19.99,
                        "type": "SALE"
                    }
                ],
                "vdata": {
                    "footerNote": "For the styles 1, 4, and 5 (3 ltrs), the Last Name Initial is placed in the center of the monogram personalization entries will appear exactly as they are",
                    "type": "MONOGRAM",
                    "vdataOptions": [
                        {
                            "title": "TYPE (MONO/PERSONLZ)",
                            "maxRange": 1,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "PERSONALIZATION TYPE - MUST BE 3 OR 4 (SHIRTS)                        ",
                                    "regularExpression": "[34]"
                                }
                            ],
                            "description": "3=MONOGRAM; 4=PERSONALIZE  (L/S SHIRTS)",
                            "values": [
                                {
                                    "name": "3 - INITIALS",
                                    "value": "3",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3",
                                    "selected": true
                                },
                                {
                                    "name": "4 - NAME",
                                    "value": "4",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=4",
                                    "selected": false
                                }
                            ]
                        },
                        {
                            "title": "THREAD COLOR",
                            "maxRange": 1,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "ALPHABETIC - MUST CONTAIN ALPHA CHARACTERS ONLY                       ",
                                    "regularExpression": "[a-zA-Z]+"
                                }
                            ],
                            "image": {
                                "url": "http://http://www.jcpenney.com/mobile/images/vdata_color_swatch_row.gif",
                                "altText": "THREAD COLOR"
                            },
                            "description": "REFERENCE LIST OF COLORS",
                            "values": [
                                {
                                    "name": "K",
                                    "value": "K",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K",
                                    "selected": true
                                }
                            ]
                        },
                        {
                            "title": "POSITION / LOCATION",
                            "maxRange": 1,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "PLACEMENT - MUST BE L FOR LEFT CUFF, R FOR RIGHT CUFF, OR P FOR POCKET",
                                    "regularExpression": "[LRP]"
                                }
                            ],
                            "description": "L=LEFT CUFF,  R=RIGHT CUFF, OR P=POCKET",
                            "values": [
                                {
                                    "name": "LEFT CUFF",
                                    "value": "L",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L",
                                    "selected": true
                                },
                                {
                                    "name": "RIGHT CUFF",
                                    "value": "R",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=R",
                                    "selected": false
                                },
                                {
                                    "name": "POCKET",
                                    "value": "P",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=P",
                                    "selected": false
                                }
                            ]
                        },
                        {
                            "title": "STYLE NUMBER",
                            "maxRange": 2,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "LETTER STYLE - MUST BE 1 THRU 11                                      ",
                                    "regularExpression": "[1-9]|1[01]|14"
                                }
                            ],
                            "image": {
                                "url": "http://http://www.jcpenney.com/mobile/images/vdata_style_swatch_row.gif",
                                "altText": "STYLE NUMBER"
                            },
                            "description": "PERSONALIZE=6,7,14 /MONOGRAMS =1,2,3,4,5,8,9,10,11",
                            "values": [
                                {
                                    "name": "STYLE 1 IS 2/3 INITIALS",
                                    "value": "1",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=1",
                                    "selected": true
                                },
                                {
                                    "name": "STYLE 10 IS 2/3 INITIALS",
                                    "value": "10",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=10",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 11 IS 3 INITIALS",
                                    "value": "11",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=11",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 14 IS FOR A NAME",
                                    "value": "14",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=14",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 2 IS 3 INITIALS",
                                    "value": "2",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=2",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 3 IS 3 INITIALS",
                                    "value": "3",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=3",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 4 IS 2/3 INITIALS",
                                    "value": "4",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=4",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 5 IS 2/3 INITIALS",
                                    "value": "5",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=5",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 6 IS FOR A NAME",
                                    "value": "6",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=6",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 7 IS FOR A NAME",
                                    "value": "7",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=7",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 8 IS FOR A SINGLE INITIAL",
                                    "value": "8",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=8",
                                    "selected": false
                                },
                                {
                                    "name": "STYLE 9 IS 3 INITIALS",
                                    "value": "9",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=9",
                                    "selected": false
                                }
                            ]
                        },
                        {
                            "title": "FIRST NAME INITIAL",
                            "maxRange": 1,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "ALPHABETIC - MUST CONTAIN ALPHA CHARACTERS ONLY                       ",
                                    "regularExpression": "[a-zA-Z]+"
                                },
                                {
                                    "description": "OPTIONAL - INPUT FIELD DOES NOT REQUIRE ENTRY BY THE CSR              ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "FIRST NAME INITAL FOR MONO(STYLES1,2,3,4,5,9,10,11",
                            "values": [
                                {
                                    "name": "A",
                                    "value": "A",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=1&FIRST%20NAME%20INITIAL=A",
                                    "selected": true
                                }
                            ]
                        },
                        {
                            "title": "MIDDLE NAME INITIAL",
                            "maxRange": 1,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "ALPHABETIC - MUST CONTAIN ALPHA CHARACTERS ONLY                       ",
                                    "regularExpression": "[a-zA-Z]+"
                                },
                                {
                                    "description": "OPTIONAL - INPUT FIELD DOES NOT REQUIRE ENTRY BY THE CSR              ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "MDLE NAME INITAL FOR MONO(STYLES 1,2,3,4,5,9,10,11",
                            "values": [
                                {
                                    "name": "L",
                                    "value": "L",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=1&FIRST%20NAME%20INITIAL=A&MIDDLE%20NAME%20INITIAL=L",
                                    "selected": true
                                }
                            ]
                        },
                        {
                            "title": "LAST NAME INITIAL",
                            "maxRange": 1,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "ALPHABETIC - MUST CONTAIN ALPHA CHARACTERS ONLY                       ",
                                    "regularExpression": "[a-zA-Z]+"
                                },
                                {
                                    "description": "OPTIONAL - INPUT FIELD DOES NOT REQUIRE ENTRY BY THE CSR              ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "SINGLE/LAST NAME INITIAL(STYLES1,2,3,4,5,8,9,10,11",
                            "values": [
                                {
                                    "name": "P",
                                    "value": "P",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002720035?TYPE%20(MONO/PERSONLZ)=3&THREAD%20COLOR=K&POSITION%20/%20LOCATION=L&STYLE%20NUMBER=1&FIRST%20NAME%20INITIAL=A&MIDDLE%20NAME%20INITIAL=L&LAST%20NAME%20INITIAL=P",
                                    "selected": true
                                }
                            ]
                        }
                    ]
                },
                "options": [
                    {
                        "type": "SIZE_RANGE",
                        "name": "SIZE RANGE",
                        "values": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall",
                                "selected": true,
                                "available": true,
                                "value": "Extra Tall"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Big",
                                "selected": false,
                                "available": true,
                                "value": "Big"
                            }
                        ]
                    },
                    {
                        "type": "SKU_OPTION",
                        "name": "NECK SIZE",
                        "values": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16",
                                "selected": true,
                                "available": true,
                                "value": "16"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16.5",
                                "selected": false,
                                "available": true,
                                "value": "16.5"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=17",
                                "selected": false,
                                "available": true,
                                "value": "17"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=17.5",
                                "selected": false,
                                "available": true,
                                "value": "17.5"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=18",
                                "selected": false,
                                "available": true,
                                "value": "18"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=18.5",
                                "selected": false,
                                "available": true,
                                "value": "18.5"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=19",
                                "selected": false,
                                "available": true,
                                "value": "19"
                            }
                        ]
                    },
                    {
                        "type": "SKU_OPTION",
                        "name": "SLEEVE",
                        "values": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16&SLEEVE=35-36",
                                "selected": true,
                                "available": true,
                                "value": "35-36"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16&SLEEVE=36-37",
                                "selected": false,
                                "available": false,
                                "value": "36-37"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16&SLEEVE=37-38",
                                "selected": false,
                                "available": true,
                                "value": "37-38"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16&SLEEVE=38-39",
                                "selected": false,
                                "available": true,
                                "value": "38-39"
                            }
                        ]
                    },
                    {
                        "name": "SKU_OPTION",
                        "displayText": "COLOR",
                        "optionValues": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16&SLEEVE=35-36&COLOR=Black",
                                "selected": true,
                                "available": true,
                                "value": "Black",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/0900631b81cf057eS.jpg",
                                    "type": "SWATCH",
                                    "altText": "Black"
                                }
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16&SLEEVE=35-36&COLOR=Blooming%20Blue",
                                "selected": false,
                                "available": true,
                                "value": "Blooming Blue",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/0900631b81ce5a1aS.jpg",
                                    "type": "SWATCH",
                                    "altText": "Blooming Blue"
                                }
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16&SLEEVE=35-36&COLOR=Rock%20Gray",
                                "selected": false,
                                "available": true,
                                "value": "Rock Gray",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/0900631b81ce5a1fS.jpg",
                                    "type": "SWATCH",
                                    "altText": "Rock Gray"
                                }
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002720035?SIZE_RANGE=Extra%20Tall&NECK%20SIZE=16&SLEEVE=35-36&COLOR=White",
                                "selected": false,
                                "available": true,
                                "value": "White",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/0900631b81ce5a20S.jpg",
                                    "type": "SWATCH",
                                    "altText": "White"
                                }
                            }
                        ]
                    }
                ]
            }

            **Response for a gift card product**

            {
                "id": "1cd63e5",
                "name": "$200 Love Always Gift Card",
                "isNew": false,
                "rating": 0,
                "reviewCount": 0,
                "skuId": "95004590000",
                "type": "GIFTCARD",
                "description": "<p>\r\n\tCelebrate love and happiness. Purchase Gift Cards in any combination you wish.</p>\r\n",
                "recommendationsURL": "http://api.jcpenney.com/v2/products/1cd63e5/recommendations",
                "images": [
                    {
                        "url": "http://zoom.jcpenney.com/is/image/DP0716201212010572M.tif",
                        "type": "PRIMARY",
                        "altText": "%24200+Love+Always+Gift+Card"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81cda42dM",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81cda42dM",
                        "type": "ALTERNATE",
                        "altText": "%24200+Love+Always+Gift+Card"
                    }
                ],
                "prices": [
                    {
                        "max": 200,
                        "min": 200,
                        "type": "ORIGINAL"
                    },
                    {
                        "max": 200,
                        "min": 200,
                        "type": "DEFAULT"
                    }
                ],
                "vdata": {
                    "type": "GIFTCARD",
                    "vdataOptions": [
                        {
                            "title": "TO",
                            "maxRange": 27,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "NO CHECKS - NO EDIT RULES APPLY TO THE INPUT FIELD                    ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "NAME OF GIFT CARD RECIPIENT OR DASH - IF BLANK",
                            "values": [
                                {
                                    "name": "Testing",
                                    "value": "Testing",
                                    "url": "http://api.jcpenney.com/v2/products/1cd63e5?TO=Testing",
                                    "selected": true
                                }
                            ]
                        },
                        {
                            "title": "FROM",
                            "maxRange": 27,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "NO CHECKS - NO EDIT RULES APPLY TO THE INPUT FIELD                    ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "NAME OF GIFT CARD GIVER OR DASH - IF BLANK",
                            "values": [
                                {
                                    "name": "Testing",
                                    "value": "Testing",
                                    "url": "http://api.jcpenney.com/v2/products/1cd63e5?FROM=Testing",
                                    "selected": true
                                }
                            ]
                        }
                    ]
                },
                "inventory": {
                    "status": "AVAILABLE",
                    "message": "Available"
                }
            }

            **Response for a hemming product**

            {
                "id": "pp5002690041",
                "name": "Stafford® Essentials Wool Tuxedo Pants – Portly",
                "isNew": false,
                "rating": 0,
                "reviewCount": 0,
                "type": "REGULAR",
                "description": "<p>These wool tuxedo pants mean you&#39;re always ready for special occasions.</p>\r\n",
                "skuId": "55379720018",
                "recommendationsURL": "http://api.jcpenney.com/v2/products/pp5002690041/recommendations",
                "images": [
                    {
                        "url": "http://zoom.jcpenney.com/is/image/0900631b81696fceM.tif",
                        "type": "PRIMARY",
                        "altText": "Stafford%C2%AE+Essentials+Wool+Tuxedo+Pants%C2%A0%E2%80%93%C2%A0Portly"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81e57ae0M",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81e57ae0M",
                        "type": "ALTERNATE",
                        "altText": "Stafford%C2%AE+Essentials+Wool+Tuxedo+Pants%C2%A0%E2%80%93%C2%A0Portly"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81696fceM",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81696fceM",
                        "type": "ALTERNATE",
                        "altText": "Stafford%C2%AE+Essentials+Wool+Tuxedo+Pants%C2%A0%E2%80%93%C2%A0Portly"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81696fcdM",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81696fcdM",
                        "type": "ALTERNATE",
                        "altText": "Stafford%C2%AE+Essentials+Wool+Tuxedo+Pants%C2%A0%E2%80%93%C2%A0Portly"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81696fccM",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/ImageCatalog/0900631b81696fccM",
                        "type": "ALTERNATE",
                        "altText": "Stafford%C2%AE+Essentials+Wool+Tuxedo+Pants%C2%A0%E2%80%93%C2%A0Portly"
                    }
                ],
                "prices": [
                    {
                        "max": 90,
                        "min": 90,
                        "type": "ORIGINAL"
                    },
                    {
                        "max": 44.99,
                        "min": 44.99,
                        "type": "SALE"
                    }
                ],
                "options": [
                    {
                        "type": "SKU_OPTION",
                        "name": "WAIST",
                        "values": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=40",
                                "selected": true,
                                "available": true,
                                "value": "40"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=42",
                                "selected": false,
                                "available": true,
                                "value": "42"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=44",
                                "selected": false,
                                "available": true,
                                "value": "44"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=46",
                                "selected": false,
                                "available": true,
                                "value": "46"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=48",
                                "selected": false,
                                "available": true,
                                "value": "48"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=50",
                                "selected": false,
                                "available": true,
                                "value": "50"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=52",
                                "selected": false,
                                "available": true,
                                "value": "52"
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=54",
                                "selected": false,
                                "available": true,
                                "value": "54"
                            }
                        ]
                    },
                    {
                        "type": "SKU_OPTION",
                        "name": "INSEAM",
                        "values": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=40&INSEAM=Unfinished",
                                "selected": true,
                                "available": true,
                                "value": "Unfinished"
                            }
                        ]
                    },
                    {
                        "type": "COLOR_OPTION",
                        "name": "COLOR",
                        "values": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/pp5002690041?WAIST=40&INSEAM=Unfinished&COLOR=Black",
                                "selected": true,
                                "available": true,
                                "value": "Black",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/0900631b80c1a612S.jpg",
                                    "type": "SWATCH",
                                    "altText": "Black"
                                }
                            }
                        ]
                    }
                ],
                "vdata": {
                    "type": "HEMMING",
                    "vdataOptions": [
                        {
                            "title": "TAILOR-MADE INSEAM",
                            "maxRange": 1,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "TAYLORING - H=HEM; C=CUFF; U=UNFINISHED                               ",
                                    "regularExpression": "[HCU]"
                                }
                            ],
                            "description": "KEY ONLY: H=HEMMED, C=CUFFED OR U=UNFIN   (PORTLY)",
                            "values": [
                                {
                                    "name": "HEM",
                                    "value": "H",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002690041?TAILOR-MADE%20INSEAM=H",
                                    "selected": "true"
                                },
                                {
                                    "name": "CUFF",
                                    "value": "C",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002690041?TAILOR-MADE%20INSEAM=C",
                                    "selected": "false"
                                },
                                {
                                    "name": "UNFINISHED",
                                    "value": "U",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002690041?TAILOR-MADE%20INSEAM=U",
                                    "selected": "false"
                                }
                            ]
                        },
                        {
                            "title": "HEMMED INSEAM",
                            "maxRange": 2,
                            "minRange": 2,
                            "minValue": 28,
                            "maxValue": 34,
                            "rules": [
                                {
                                    "description": "MIN-MAX WIDTH(LENGTH) - REQUIRES MIN-MAX WIDTH OR LENGTH FOR SETUP    ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "KEY 28-34 WHEN H = HEMMED IS SELECTED",
                            "values": [
                                {
                                    "name": "28",
                                    "value": "28",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002690041?TAILOR-MADE%20INSEAM=H&HEMMED%20INSEAM=28",
                                    "selected": "true"
                                }
                            ]
                        },
                        {
                            "title": "INSEAM - HALF",
                            "maxRange": 3,
                            "minRange": 3,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "OPTIONAL - INPUT FIELD DOES NOT REQUIRE ENTRY BY THE CSR              ",
                                    "regularExpression": "\n\t\t\t"
                                },
                                {
                                    "description": "HALF FRACTION - MUST BE 1/2 ONLY                                      ",
                                    "regularExpression": "1/2"
                                }
                            ],
                            "description": "1/2 TO ADD HALF INCH TO INSEAM LENGTH",
                            "values": [
                                {
                                    "name": "1/2",
                                    "value": "1/2",
                                    "url": "http://api.jcpenney.com/v2/products/pp5002690041?TAILOR-MADE%20INSEAM=H&HEMMED%20INSEAM=28&INSEAM%200%20HALF=1/2",
                                    "selected": "true"
                                }
                            ]
                        }
                    ]
                }
            }

            **Response for a made to measure product**.

            {
                "id": "19145db",
                "name": "jcp home™ Casual Blackout Roman Shade",
                "isNew": false,
                "rating": 0,
                "reviewCount": 0,
                "type": "REGULAR",
                "description": "<p>This custom casual blackout roman shade is a great solution for bedrooms or media rooms.</p>\r\n",
                "recommendationsUrl": "http://api.jcpenney.com/v2/products/19145db/recommendations",
                "skuId": "73910300091",
                "images": [
                    {
                        "url": "http://zoom.jcpenney.com/is/image/DP1117201217551661M.tif",
                        "type": "PRIMARY",
                        "altText": "jcp+home%E2%84%A2+Casual+Blackout+Roman+Shade"
                    },
                    {
                        "url": "http://zoom.jcpenney.com/is/image/DP1117201217551661M.tif",
                        "swatchUrl": "http://zoom.jcpenney.com/is/image/DP1117201217551661M.tif",
                        "type": "ALTERNATE",
                        "altText": "jcp+home%E2%84%A2+Casual+Blackout+Roman+Shade"
                    }
                ],
                "prices": [
                    {
                        "max": 280,
                        "min": 95,
                        "type": "ORIGINAL"
                    },
                    {
                        "max": 168,
                        "min": 57,
                        "type": "SALE"
                    }
                ],
                "options": [
                    {
                        "type": "COLOR_OPTION",
                        "name": "COLOR",
                        "values": [
                            {
                                "url": "http://api.jcpenney.com/v2/products/19145db?COLOR=Burnt%20Henna",
                                "selected": false,
                                "available": true,
                                "value": "Burnt Henna",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/0900631b819babafS.jpg",
                                    "type": "SWATCH",
                                    "altText": "Burnt Henna"
                                }
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/19145db?COLOR=Colorado%20Sage",
                                "selected": true,
                                "available": true,
                                "value": "Colorado Sage",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/0900631b819babb1S.jpg",
                                    "type": "SWATCH",
                                    "altText": "Colorado Sage"
                                }
                            },
                            {
                                "url": "http://api.jcpenney.com/v2/products/19145db?COLOR=Jackson%20Tan",
                                "selected": false,
                                "available": true,
                                "value": "Jackson Tan",
                                "image": {
                                    "swatchUrl": "http://m.jcpenney.com/mobile/images/0900631b819babb2S.jpg",
                                    "type": "SWATCH",
                                    "altText": "Jackson Tan"
                                }
                            }
                        ]
                    }
                ],
                "vdata": {
                    "type": "MADE_TO_MEASURE",
                    "vdataOptions": [
                        {
                            "title": "WIDTH - WHOLE",
                            "maxRange": 2,
                            "minRange": 2,
                            "minValue": 18,
                            "maxValue": 72,
                            "rules": [
                                {
                                    "description": "MIN-MAX WIDTH(LENGTH) - REQUIRES MIN-MAX WIDTH OR LENGTH FOR SETUP    ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "WIDTH IN WHOLE INCHES       (VARIES FROM 18 TO 72)",
                            "values": [
                                {
                                    "name": "20",
                                    "value": "20",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20",
                                    "selected": "true"
                                }
                            ]
                        },
                        {
                            "title": "WIDTH - FRACTION",
                            "maxRange": 3,
                            "minRange": 3,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "OPTIONAL - INPUT FIELD DOES NOT REQUIRE ENTRY BY THE CSR              ",
                                    "regularExpression": "\n\t\t\t"
                                },
                                {
                                    "description": "EIGHTH FRACTIONS - MUST BE 1/8, 1/4, 3/8, 1/2, 5/8, 3/4, OR 7/8 ONLY  ",
                                    "regularExpression": "(1/8)|(1/4)|(3/8)|(1/2)|(5/8)|(3/4)|(7/8)"
                                }
                            ],
                            "description": "ADDITIONAL WIDTH IN FRACTIONS",
                            "values": [
                                {
                                    "name": "1/8",
                                    "value": "1/8",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8",
                                    "selected": true
                                },
                                {
                                    "name": "1/4",
                                    "value": "1/4",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/4",
                                    "selected": false
                                },
                                {
                                    "name": "3/8",
                                    "value": "3/8",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=3/8",
                                    "selected": false
                                },
                                {
                                    "name": "1/2",
                                    "value": "1/2",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/2",
                                    "selected": false
                                },
                                {
                                    "name": "5/8",
                                    "value": "5/8",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=5/8",
                                    "selected": false
                                },
                                {
                                    "name": "3/4",
                                    "value": "3/4",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=3/4",
                                    "selected": false
                                },
                                {
                                    "name": "7/8",
                                    "value": "7/8",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=7/8",
                                    "selected": false
                                }
                            ]
                        },
                        {
                            "title": "LENGTH - WHOLE",
                            "maxRange": 2,
                            "minRange": 2,
                            "minValue": 16,
                            "maxValue": 72,
                            "rules": [
                                {
                                    "description": "MIN-MAX WIDTH(LENGTH) - REQUIRES MIN-MAX WIDTH OR LENGTH FOR SETUP    ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "LENGTH IN WHOLE INCHES      (VARIES FROM 16 TO 72)",
                            "values": [
                                {
                                    "name": "16",
                                    "value": "16",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16",
                                    "selected": "true"
                                }
                            ]
                        },
                        {
                            "title": "LENGTH - FRACTION",
                            "maxRange": 3,
                            "minRange": 3,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "OPTIONAL - INPUT FIELD DOES NOT REQUIRE ENTRY BY THE CSR              ",
                                    "regularExpression": "\n\t\t\t"
                                },
                                {
                                    "description": "EIGHTH FRACTIONS - MUST BE 1/8, 1/4, 3/8, 1/2, 5/8, 3/4, OR 7/8 ONLY  ",
                                    "regularExpression": "(1/8)|(1/4)|(3/8)|(1/2)|(5/8)|(3/4)|(7/8)"
                                }
                            ],
                            "description": "ADDITIONAL LENGTH IN FRACTIONS",
                            "values": [
                                {
                                    "name": "1/8",
                                    "value": "1/8",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=1/8",
                                    "selected": true
                                },
                                {
                                    "name": "1/4",
                                    "value": "1/4",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=1/4",
                                    "selected": false
                                },
                                {
                                    "name": "3/8",
                                    "value": "3/8",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=3/8",
                                    "selected": false
                                },
                                {
                                    "name": "1/2",
                                    "value": "1/2",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=1/2",
                                    "selected": false
                                },
                                {
                                    "name": "5/8",
                                    "value": "5/8",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=5/8",
                                    "selected": false
                                },
                                {
                                    "name": "3/4",
                                    "value": "3/4",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=3/4",
                                    "selected": false
                                },
                                {
                                    "name": "7/8",
                                    "value": "7/8",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=7/8",
                                    "selected": false
                                }
                            ]
                        },
                        {
                            "title": "MOUNT",
                            "maxRange": 1,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "CASING - MUST BE I FOR INSIDE OR O FOR OUTSIDE                        ",
                                    "regularExpression": "[IO]"
                                }
                            ],
                            "description": "INSTALLATION: 'I' FOR INSIDE AND 'O' FOR OUTSIDE",
                            "values": [
                                {
                                    "name": "INSIDE",
                                    "value": "I",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=1/8&MOUNT=I",
                                    "selected": true
                                },
                                {
                                    "name": "OUTSIDE",
                                    "value": "O",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=1/8&MOUNT=O",
                                    "selected": false
                                }
                            ]
                        },
                        {
                            "title": "COLOR",
                            "maxRange": 24,
                            "minRange": 1,
                            "minValue": 0,
                            "maxValue": 0,
                            "rules": [
                                {
                                    "description": "NO CHECKS - NO EDIT RULES APPLY TO THE INPUT FIELD                    ",
                                    "regularExpression": "\n\t\t\t"
                                }
                            ],
                            "description": "IF COLOR FIELD BLANK KEY ABBREVIATED COLOR ABOVE",
                            "values": [
                                {
                                    "name": "Colorado Sage",
                                    "value": "Colorado Sage",
                                    "url": "http://api.jcpenney.com/v2/products/19145db?WIDTH%20-%20WHOLE=20&WIDTH%20-%20FRACTION=1/8&LENGTH%20-%20WHOLE=16&LENGTH%20-%20FRACTION=1/8&MOUNT=I&COLOR=Colorado%20Sage",
                                    "selected": true
                                }
                            ]
                        }
                    ]
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Product",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the product."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the product."
                    },
                    "isNew": {
                        "type": "boolean",
                        "description": "Indicates if the product is a new product.",
                        "default": false
                    },
                    "rating": {
                        "type": "double",
                        "description": "Average ratings for the product.",
                        "default": 0
                    },
                    "reviewCount": {
                        "type": "integer",
                        "description": "Number of reviews for the product.",
                        "default": 0
                    },
                    "reviewsUrl": {
                        "type": "URL",
                        "description": "URL to retrieve the reviews for the product."
                    },
                    "type": {
                        "type": "string",
                        "description": "Product type."
                    },
                    "skuId": {
                        "type": "string",
                        "description": SKU id."
                    },
                    "recommendationsUrl": {
                        "type": "URL",
                        "description": "URL to retrieve the recommendations for the product."
                    },
                    "images": {
                        "title": "List of images assigned to the product.",
                        "type": "array",
                        "items": {
                            "title": "Image",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to the product image."
                                },
                                "swatchUrl": {
                                    "type": "URL",
                                    "description": "URL to the swatch image url for the product."
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "PRIMARY",
                                        "ALTERNATE",
                                        "SWATCH"
                                    ],
                                    "description": "Indicates the type of product image."
                                },
                                "altText": {
                                    "type": "string",
                                    "description": "Alternate text for the image."
                                }
                            },
                            "required": [
                                "url",
                                "type"
                            ]
                        }
                    },
                    "prices": {
                        "title": "List of prices for the product.",
                        "type": "array",
                        "items": {
                            "title": "Price",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "ORIGINAL",
                                        "SALE",
                                        "CLEARANCE",
                                        "MSRP"
                                    ],
                                    "description": "Indicates the type of price."
                                },
                                "min": {
                                    "type": "double",
                                    "description": "Minimum price for the product for the price type",
                                    "default": 0
                                },
                                "max": {
                                    "type": "double",
                                    "description": "Maximum price for the product for the price type.",
                                    "default": 0
                                }
                            },
                            "required": [
                                "type",
                                "min",
                                "max"
                            ]
                        }
                    },
                    "inventory": {
                        "title": "inventory",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "Inventory status for the product."
                            },
                            "message": {
                                "type": "string",
                                "description": "Inventory message for the product."
                            }
                        },
                        "required": [
                            "status",
                            "message"
                        ]
                    },
                    "messages": {
                        "title": "List of messages for the product.",
                        "type": "array",
                        "items": {
                            "title": "Message",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "CHANNEL_MESSAGING",
                                        "PROMOTION",
                                        "TRUCK_DELIVERY"
                                    ],
                                    "description": "Indiates the type of message for the product."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Message title."
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Complete text of the message."
                                }
                            },
                            "required": [
                                "type",
                                "title",
                                "text"
                            ]
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the product. Contains HTML."
                    },
                    "brandUrl": {
                        "type": "URL",
                        "description": "URL to the image for the product brand."
                    },
                    "videoUrl": {
                        "type": "URL",
                        "description": "URL to the product video."
                    },
                    "warranties": {
                        "title": "List of warranties for the product",
                        "type": "array",
                        "items": {
                            "title": "warranty",
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "Title of the warranty assigned to the product."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Complete description of the warranty. May contain HTML."
                                },
                                "referenceNumber": {
                                    "type": "string",
                                    "description": "Warranty reference number."
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates whether the warranty for the product is selected.",
                                    "default": true
                                }
                            },
                            "required": [
                                "title",
                                "description",
                                "referenceNumber",
                                "selected"
                            ]
                        }
                    },
                    "serviceAgreements": {
                        "title": "List of service agreements.",
                        "type": "array",
                        "items": {
                            "title": "ServiceAgreememt",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the service agreement"
                                },
                                "data": {
                                    "type": "string",
                                    "description": "description of the service agreement."
                                },
                                "prices": {
                                    "title": "List of prices",
                                    "type": "array",
                                    "items": {
                                        "title": "Price",
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "ORIGINAL",
                                                    "SALE",
                                                    "CLEARANCE",
                                                    "MSRP"
                                                ],
                                                "description": "Indicates the type of price."
                                            },
                                            "min": {
                                                "type": "double",
                                                "description": "Minimum price.",
                                                "default": 0
                                            },
                                            "max": {
                                                "type": "double",
                                                "description": "Maximum price",
                                                "default": 0
                                            }
                                        },
                                        "required": [
                                            "page",
                                            "min",
                                            "max"
                                        ]
                                    }
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates whether the service agreement has been selected.",
                                    "default": false
                                },
                                "url": {
                                    "type": "URL",
                                    "description": "URL to service agreement."
                                },
                                "itemId": {
                                    "type": "string",
                                    "description": "Unique identifier for the service agreement."
                                }
                            },
                            "required": [
                                "name",
                                "description",
                                "prices",
                                "selected",
                                "itemId"
                            ]
                        }
                    },
                    "options": {
                        "title": "List of options for the product.",
                        "type": "array",
                        "items": {
                            "title": "Option",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the product option"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "DEFAULT",
                                        "COLOR"
                                    ],
                                    "description": "Indicates the type of option."
                                },
                                "values": {
                                    "title": "List of values for the option.",
                                    "type": "array",
                                    "items": {
                                        "title": "OptionValue",
                                        "type": "object",
                                        "properties": {
                                            "url": {
                                                "type": "URL",
                                                "description": "URL to retrieve the details of the product option."
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "option value string representation."
                                            },
                                            "selected": {
                                                "type": "boolean",
                                                "description": "Indicates that the option value has been selected.",
                                                "default": false
                                            },
                                            "available": {
                                                "type": "boolean",
                                                "description": "Indicates that the option value has been selected.",
                                                "default": false
                                            },
                                            "image": {
                                                "title": "Image",
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "URL",
                                                        "description": "URL to the product image."
                                                    },
                                                    "swatchUrl": {
                                                        "type": "URL",
                                                        "description": "URL to the product swatch image."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "PRIMARY",
                                                            "ALTERNATE",
                                                            "SWATCH"
                                                        ],
                                                        "desctiption": "Indicates the type of image."
                                                    },
                                                    "altText": {
                                                        "type": "string",
                                                        "description": "Alternate text for the image."
                                                    }
                                                },
                                                "required": [
                                                    "url",
                                                    "swatchUrl",
                                                    "type",
                                                    "altText"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "url",
                                            "value",
                                            "selected",
                                            "available"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "name",
                                "type",
                                "values"
                            ]
                        }
                    },
                    "vdata": {
                        "title": "vdata",
                        "type": "object",
                        "properties": {
                            "headerNote": {
                                "type": "string",
                                "description": "VDATA Header note."
                            },
                            "footerNote": {
                                "type": "string",
                                "description": "VDATA footer note."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "PERSONALIZATION",
                                    "MONOGRAM",
                                    "HEMMING"
                                ],
                                "description": "Indicates the type of VDATA options."
                            },
                            "vdataOptions": {
                                "title": "List of vdata options.",
                                "type": "array",
                                "items": {
                                    "title": "VDATAOption",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the VDATA option."
                                        },
                                        "type": {
                                            "type": "String",
                                            "description": "VDATA type"
                                        },
                                        "id" : {
                                            "type": "string",
                                            "description": "VDATA Id."
                                        },
                                        "displayText": {
                                            "type": "string",
                                            "description": "Display text."
                                        },
                                        "maxRange": {
                                            "type": "number"
                                            "description": "Max range."
                                        },
                                        "minRange": {
                                            "type": "number"
                                            "description": "Min range."
                                        },
                                        "maxValue": {
                                            "type": "number"
                                            "description": "Max Value."
                                        },
                                        "minValue": {
                                            "type": "number"
                                            "description": "Min Value."
                                        },
                                        "rules": {
                                            "title": "VData rules.",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Rule's description."
                                                    },
                                                    "regularExpression": {
                                                        "type": "string",
                                                        "description": "Rule's regular expression."
                                                    }
                                                }
                                            }
                                        },
                                        "image": {
                                            "type": "URL"
                                            "description": "Image URL."
                                        },
                                        "description": {
                                            "type": "string"
                                            "description": "Description."
                                        },
                                        "inputType": {
                                            "type": "string"
                                            "description": "Input type."
                                        },
                                        "values": {
                                            "title": "list of values for vdata option",
                                            "type": "array",
                                            "items": {
                                                "title": "VDATAOptionValue",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the VDATA option value."
                                                    },
                                                    "url": {
                                                        "type": "URL",
                                                        "description": "URL to be used to select the vdata option for the product."
                                                    },
                                                    "selected": {
                                                        "type": "boolean",
                                                        "description": "Indicates that the VDATA option value is selected.",
                                                        "default": false
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "url",
                                                    "selected"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "type",
                                        "displayText",
                                        "maxRange",
                                        "minRange",
                                        "maxValue",
                                        "minValue",
                                        "description",
                                        "inputType"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "headerNote",
                            "footerNote",
                            "type",
                            "vdataOptions"
                        ]
                    }
                },
                "stores": {
                    "title": "List of stores.",
                    "type": "array",
                    "items": {
                        "title": "store",
                        "type": "oject",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Store number."
                            },
                            "name": {
                                "type": "string",
                                "description": "JCPenney store name."
                            },
                            "street": {
                                "type": "string",
                                "description": "Street address of the store."
                            },
                            "city": {
                                "type": "string",
                                "description": "City name."
                            },
                            "stateCode": {
                                "type": "string",
                                "description": "State abbreviation."
                            },
                            "zip": {
                                "type": "string",
                                "description": "zip code of the store."
                            },
                            "phone": {
                                "type": "string",
                                "description": "Formatted phone number of the store."
                            },
                            "distance": {
                                "type": "double",
                                "description": "distance of the store from current location.",
                                "default": 0
                            },
                            "timings": {
                                "title": "List of timings",
                                "type": "array",
                                "items": {
                                    "title": "timing",
                                    "type": "object",
                                    "properties": {
                                        "days": {
                                            "type": "string",
                                            "description": "indicates the days when the store is open."
                                        },
                                        "time": {
                                            "type": "string",
                                            "description": "formatted time during which the store is open."
                                        },
                                        "note": {
                                            "type": "string",
                                            "description": "note assigned to the store."
                                        }
                                    },
                                    "required": [
                                        "days",
                                        "time"
                                    ]
                                }
                            },
                            "services": {
                                "title": "List of serivces provided by the store.",
                                "type": "array",
                                "items": {
                                    "title": "service",
                                    "type": "string",
                                    "description": "service provided by the JCPenney store."
                                }
                            },
                            "inventory": {
                                "title": "inventory",
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "description": "Inventory status for the product."
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "Inventory message for the product."
                                    }
                                },
                                "required": [
                                    "status",
                                    "message"
                                ]
                            },
                            "prices": {
                                "title": "List of prices",
                                "type": "array",
                                "items": {
                                    "title": "price",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "ORIGINAL",
                                                "SALE",
                                                "CLEARANCE",
                                                "MSRP"
                                            ],
                                            "description": "Type of price"
                                        },
                                        "min": {
                                            "type": "double",
                                            "description": "Minimum price for the product.",
                                            "default": 0
                                        },
                                        "max": {
                                            "type": "double",
                                            "description": "Maximum price for the product.",
                                            "default": 0
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "min",
                                        "max"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "street",
                            "city",
                            "stateCode",
                            "zip",
                            "phone",
                            "distance",
                            "timings",
                            "services",
                            "inventory",
                            "prices"
                        ]
                    },
                    "pages": {
                        "title": "List of page",
                        "type": "array",
                        "items": {
                            "title": "page",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve details of the page."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Represents the page number."
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates whether the current page object is selected.",
                                    "default": false
                                }
                            },
                            "required": [
                                "url",
                                "number",
                                "selected"
                            ]
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "isNew",
                    "rating",
                    "reviewCount",
                    "recommendationsUrl",
                    "prices",
                    "description"
                ]
            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_PAGE_NUMBER_INVALID",
                "errorMessage": "please enter a valid page number."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')


    + Body

            {
                "errorCode": "SRV_PRODUCT_NOTFOUND",
                "errorMessage": "Product not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


## Inventory [/products/{productId}/inventory{?page,pageSize,storeAddress,storeNumber}]
The Inventory resource represents the online/store inventory of the given product.

### Get inventory for a product [GET]
Retrieves the online/store inventory for a product. Supports pagination and sorting for stores result.

+ Parameters
    + productId (required, string, `pp5002310768`) ... Product ID `productId` of the Product (it can be PP, Lot , Ensemble or Sku) to retrieve online and store inventory.
    + page (optional, string, `1`) ... Page Number of the inventory result for store information. Default Value is set to `1`.
    + pageSize (optional, string, `5`) ... Page Size tells how many store results to populate on a single page. Allowed Value Min 5 or Max 10, Default Value is set to `5`.
    + storeAddress (optional, string, `75024/plano,texas/32.767,-117.17`) ... Used for store search based on the zip code/city state/latitude longitude..
    + storeNumber (optional, string, `2795`) ... Retrieve inventory information of a product based on a store number..


+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `Inventory`)

    + Body

            Example of online inventory resource for a product.

            {
                  "status": "BACKODERABLE",
                  "message": "manufacturer shipped (ships in 4 week)"
            }

            Example of store inventory resource for a product.

            {
                "stores": [
                    {
                        "id": "2795",
                        "name": "Stonebriar Mall",
                        "street": "2607 Preston Rd",
                        "city": "Frisco",
                        "stateCode": "TX",
                        "zip": "75034",
                        "phone": " (972) 712-2707",
                        "distance": 1.4,
                        "timings": [
                            {
                                "days": "Mon-Sat",
                                "time": "10:00am-9:00pm"
                            },
                            {
                                "days": "Sun",
                                "time": "11:00am-7:00pm"
                            }
                        ],
                        "services": [
                            "big and tall",
                            "custom decorating",
                            "furniture"
                        ],
                        "inventory": {
                            "status": "INSTOCK",
                            "message": "In stock"
                        }
                    }
                ],
                "pages": [
                    {
                        "url": "http://api.jcpenney.com/v2/products/pp5003200163/inventory?storeAddress=75024",
                        "number": 1,
                        "selected": true
                    }
                ]
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Inventory",
                "type": "object",
                "properties": {
                    "title": "Inventory",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string",
                            "description": "Online inventory status for the product."
                        },
                        "message": {
                            "type": "string",
                            "description": "Online inventory status for the product"
                        }
                    },
                    "required": [
                        "status",
                        "message"
                    ]
                },
                "stores": {
                    "title": "List of stores",
                    "type": "array",
                    "items": {
                        "title": "Store",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique identifier for the jcpenney store."
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the JCPenney store."
                            },
                            "street": {
                                "type": "string",
                                "description": "Street addess of the store."
                            },
                            "city": {
                                "type": "string",
                                "description": "City where the JCPenney store is located."
                            },
                            "stateCode": {
                                "type": "string",
                                "description": "State abbreviation of the state where the JCPenney store is located."
                            },
                            "zip": {
                                "type": "string",
                                "description": "Zip code of the JCPenney store."
                            },
                            "phone": {
                                "type": "string",
                                "description": "Formatted string representation of the JCPenney store contact phone number."
                            },
                            "distance": {
                                "type": "double",
                                "description": "distance of the store from current location."
                            },
                            "timings": {
                                "title": "List of timings",
                                "type": "array",
                                "items": {
                                    "title": "timing",
                                    "type": "object",
                                    "properties": {
                                        "days": {
                                            "type": "string",
                                            "description": "indicates the days when the store is open."
                                        },
                                        "time": {
                                            "type": "string",
                                            "description": "formatted time during which the store is open."
                                        },
                                        "note": {
                                            "type": "string",
                                            "description": "note assigned to the store."
                                        }
                                    },
                                    "required": [
                                        "days",
                                        "time"
                                    ]
                                },
                                "services": {
                                    "title": "List of services provided by the store.",
                                    "type": "array",
                                    "items": {
                                        "title": "service",
                                        "type": "string",
                                        "description": "service provided by the JCPenney store."
                                    }
                                },
                                "inventory": {
                                    "title": "inventory",
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Inventory status for the product."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Inventory message for the product."
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "street",
                                "city",
                                "stateCode",
                                "zip",
                                "phone",
                                "distance",
                                "timings",
                                "services",
                                "inventory"
                            ]
                        }
                    },
                    "pages": {
                        "title": "List of page objects.",
                        "type": "array",
                        "items": {
                            "title": "Page",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve the details of the page."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Indicates the page number.",
                                    "default": 1
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates that the current page is selected.",
                                    "default": false
                                }
                            },
                            "required": [
                                "url",
                                "number",
                                "selected"
                            ]
                        }
                    }
                }
            }


+ Response 400


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            Response when a invalid page is provided in the request.

            {
                "errorCode": "SRV_PAGE_INVALID",
                "errorMessage": "Page number provided is not applicable to the current request."
            }

            Response when the page size provided is invalid.

            {
                "errorCode": "SRV_PAGESIZE_INVALID",
                "errorMessage": "Page size provided is invalid. Only value between 24 and 96 are allowed."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_PRODUCTS_NOTFOUND",
                "errorMessage": "Product not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


## Price [/products/{productId}/prices{?page,pageSize,storeAddress,storeNumber}]
There are different types of prices for a product in online channel or in JCPenney stores. A product always has atleast 2 prices and can have a maximum of 3 prices associated
to it. The different type of prices available in the system are:

- DEFAULT - Indicates the default active price for the product
- ORIGINAL - Original price of the product.
- SALE - Sale price of the product.
- CLEARANCE - Clearance price of the product.
- MSRP - Manufacturer suggested retail price for the product.


### Get Price. [GET]
This service retrieves the pricing information for a product. The resource may represent the online/store pricing for the product based on the query parameters provided in the request.
Pagination is supported for store price information. Price can be retrieved in different currencies depending on the value of the request header X-Currency.

+ Parameters
    + productId (required, string, `pp5002310768`) ... Product ID or Lot Id or SKU ID of a product to retrieve the Prices.
    + page (optional, string, `1`) ... Page Number of the price result for store information. Default Value is set to `1`.
    + pageSize (optional, string, `5`) ... Page Size tells how many store results to populate on a single page. Allowed Value Min 5 or Max 10, Default Value is set to `5`.
    + storeAddress (optional, string, `75024/plano,texas/32.767,-117.17`) ... Used for store search based on the zip code/city state/latitude longitude..
    + storeNumber (optional, string, `2795`) ... Used to retrieve  inventory information of a product in jcpenney store based on a store number..

+ Request

    + Headers

            X-Currency: required, string, default- USD ... (Used to determine the currency to be used for displaying the price information for the product.)


+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Price[]')

    + Body

            Example to retrieve the online price for product pp5003230750.

            {
                "prices": [
                    {
                        "type": "ORIGINAL",
                        "min": 50,
                        "max": 50
                    },
                    {
                        "type": "SALE",
                        "min": 19.99,
                        "max": 19.99
                    }
                ]
            }

            Example to retrieve the store pricing information for product pp5003230750 in jcpenney stores with zip code 75024

            {
                "stores": [
                    {
                        "id": "2795",
                        "name": "Stonebriar Mall",
                        "street": "2607 Preston Rd",
                        "city": "Frisco",
                        "stateCode": "TX",
                        "zip": "75034",
                        "phone": " (972) 712-2707",
                        "distance": 1.4,
                        "timings": [
                            {
                                "days": "Mon-Sat",
                                "time": "10:00am-9:00pm"
                            },
                            {
                                "days": "Sun",
                                "time": "11:00am-7:00pm"
                            }
                        ],
                        "services": [
                            "big and tall",
                            "custom decorating",
                            "furniture"
                        ],
                        "prices": [
                            {
                                "type": "ORIGINAL",
                                "min": 50,
                                "max": 50
                            },
                            {
                                "type": "SALE",
                                "min": 19.99,
                                "max": 19.99
                            }
                        ]
                    }
                ],
                "pages": [
                    {
                        "url": "http://api.jcpenney.com/v2/products/pp5003230750/prices?page=1&pageSize=24",
                        "number": 1,
                        "selected": true
                    }
                ]
            }

    + Schema



            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Prices",
                "type": "object",
                "properties": {
                    "prices": {
                        "title": "List of prices",
                        "type": "array",
                        "items": {
                            "title": "Price",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "ORIGINAL",
                                        "SALE",
                                        "CLEARANCE",
                                        "MSRP"
                                    ],
                                    "description": "Indicates the type of price."
                                },
                                "min": {
                                    "type": "double",
                                    "description": "Minimum price for the product.",
                                    "default": 0
                                },
                                "max": {
                                    "type": "double",
                                    "description": "maximum price for the product.",
                                    "default": 0
                                }
                            },
                            "required": [
                                "type",
                                "min",
                                "max"
                            ]
                        }
                    },
                    "stores": {
                        "title": "List of stores",
                        "type": "array",
                        "items": {
                            "title": "Store",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier for the jcpenney store."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "JCPenney store name."
                                },
                                "street": {
                                    "type": "string",
                                    "description": "Street address of the JCPenney store."
                                },
                                "city": {
                                    "type": "string",
                                    "description": "city name."
                                },
                                "stateCode": {
                                    "type": "string",
                                    "description": "State abbreviation."
                                },
                                "zip": {
                                    "type": "string",
                                    "description": "Zip code of the JCPenney store."
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Formatted phone number of the store."
                                },
                                "distance": {
                                    "type": "double",
                                    "description": "distance of the store from current location.",
                                    "default": 0
                                },
                                "timings": {
                                    "title": "List of timings",
                                    "type": "array",
                                    "items": {
                                        "title": "timing",
                                        "type": "object",
                                        "properties": {
                                            "days": {
                                                "type": "string",
                                                "description": "indicates the days when the store is open."
                                            },
                                            "time": {
                                                "type": "string",
                                                "description": "formatted time during which the store is open."
                                            },
                                            "note": {
                                                "type": "string",
                                                "description": "note assigned to the store."
                                            }
                                        },
                                        "required": [
                                            "days",
                                            "time"
                                        ]
                                    }
                                },
                                "services": {
                                    "title": "List of services provided by the store.",
                                    "type": "array",
                                    "items": {
                                        "title": "service",
                                        "type": "string",
                                        "description": "service provided by the JCPenney store."
                                    }
                                },
                                "prices": {
                                    "title": "List of prices",
                                    "type": "array",
                                    "items": {
                                        "title": "price",
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "ORIGINAL",
                                                    "SALE",
                                                    "CLEARANCE",
                                                    "MSRP"
                                                ],
                                                "description": "Type of price"
                                            },
                                            "min": {
                                                "type": "double",
                                                "description": "Minimum price for the product.",
                                                "default": 0
                                            },
                                            "max": {
                                                "type": "double",
                                                "description": "Maximum price for the product.",
                                                "default": 0
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "min",
                                            "max"
                                        ]
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "street",
                                    "city",
                                    "stateCode",
                                    "zip",
                                    "phone",
                                    "distance",
                                    "timings",
                                    "services",
                                    "prices"
                                ]
                            }
                        },
                        "pages": {
                            "title": "List of page",
                            "type": "array",
                            "items": {
                                "title": "page",
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "URL",
                                        "description": "URL to retrieve details of the page."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "description": "Represents the page number."
                                    },
                                    "selected": {
                                        "type": "boolean",
                                        "description": "Indicates whether the current page object is selected.",
                                        "default": false
                                    }
                                },
                                "required": [
                                    "url",
                                    "number",
                                    "selected"
                                ]
                            }
                        }
                    }
                }
            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            Response when a invalid page is provided in the request.

            {
                "errorCode": "SRV_PAGE_INVALID",
                "errorMessage": "Page number provided is not applicable to the current request."
            }

            Response when the page size provided is invalid.

            {
                "errorCode": "SRV_PAGESIZE_INVALID",
                "errorMessage": "Page size provided is invalid. Only value between 24 and 96 are allowed."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_PRODUCTS_NOTFOUND",
                "errorMessage": "Product not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')


    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Product Recommendations [/products/{productId}/recommendations{?type}]
List of recommended products based on the given product.

### Get recommendations for a product. [GET]
+ Parameters
    + productId (required, string, `pp5002310768`) ... Id of the Product to retrieve all its recommendations.
    + type (optional, string, `PRODUCT`) ... type indicates the location for which recommendations are to be retrieved. Default Value is set to `PRODUCT`.

+ Request

            Example: http://api.jcpenney.com/products/pp5002310768/recommendations

    + Headers

            X-Currency: optional, string, default- USD ... (Used to determine the currency to be used for displaying the price information for the product.)

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Product[]')

    + Body

            [
                {
                    "id": "pp5002961049",
                    "url": "http://api.jcpenney.com/v2/products/pp5002961049",
                    "name": "jcp™ Long-Sleeve Crewneck Tee",
                    "isNew": false,
                    "rating": 0,
                    "reviewCount": 0,
                    "images": [
                        {
                            "url": "http://zoom.jcpenney.com/is/image/DP1104201318163609C.tif",
                            "swatchUrl": "http://zoom.jcpenney.com/is/image/DP1104201318163609C.tif",
                            "type": "PRIMARY",
                            "altText": "jcp™ Long-Sleeve Crewneck Tee"
                        }
                    ],
                    "prices": [
                        {
                            "type": "ORIGINAL",
                            "min": 40,
                            "max": 40
                        },
                        {
                            "type": "SALE",
                            "min": 15.99,
                            "max": 15.99
                        }
                    ]
                }
            ]

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of products",
                "type": "array",
                "items": {
                    "title": "Product",
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the product."
                        },
                        "url": {
                            "type": "URL",
                            "description": "URL to retrieve the complete product information."
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the product."
                        },
                        "isNew": {
                            "type": "boolean",
                            "description": "Indicates whether the product is a new product.",
                            "default": false
                        },
                        "rating": {
                            "type": "double",
                            "description": "Overall rating for the product.",
                            "default": 0
                        },
                        "reviewCount": {
                            "type": "integer",
                            "description": "Number of reviews for the product.",
                            "default": 0
                        },
                        "images": {
                            "title": "List of images for the product.",
                            "type": "array",
                            "items": {
                                "title": "Image",
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "URL",
                                        "description": "URL to the product image."
                                    },
                                    "swatchUrl": {
                                        "type": "URL",
                                        "description": "URL to the swatch image for the product."
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "PRIMARY",
                                            "ALTERNATE",
                                            "SWATCH"
                                        ],
                                        "description": "Indicates the type of product image."
                                    },
                                    "altText": {
                                        "type": "string",
                                        "description": "Alternate text for the image."
                                    }
                                },
                                "required": [
                                    "url",
                                    "type"
                                ]
                            }
                        },
                        "prices": {
                            "title": "List of Prices",
                            "type": "array",
                            "items": {
                                "title": "Price",
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "ORIGINAL",
                                            "SALE",
                                            "CLEARANCE",
                                            "MSRP"
                                        ],
                                        "description": "Indicates the type of price."
                                    },
                                    "min": {
                                        "type": "double",
                                        "description": "Minimum price for the product.",
                                        "default": 0
                                    },
                                    "max": {
                                        "type": "double",
                                        "description": "Maximum price for the product.",
                                        "default": 0
                                    }
                                },
                                "required": [
                                    "type",
                                    "min",
                                    "max"
                                ]
                            }
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "url",
                        "isNew",
                        "rating",
                        "reviewsCount",
                        "prices"
                    ]
                }
            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')


    + Body

            {
                "errorCode": "SRV_TYPE_INVALID",
                "errorMessage": "Type value is invalid. Possible values [PRODUCT, CART, FAVORITES]"
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_PRODUCT_NOTFOUND",
                "errorMessage": "Product not found."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Reviews [/products/{productId}/reviews{?page,pageSize,sortBy}]
Represents the product reviews provided by the customers.

### List all Reviews for a product [GET]

+ Parameters
    + productId (required, string, `pp5002310768`) ... Id of the Product to retrieve all itso associated reviews.
    + page (optional, string, `1`) ... Page Number of the reviews result set. Default Value is set to `1`.
    + pageSize (optional, string, `4`) ... Page Size tells how many reviews to populate on a single page. Allowed Value Range 4-10, Default Value is set to `4`.
    + sortBy (optional, string, `featured reviews`) ... Sorting Option used to sort the results according to the type of the Review. Allowed values range [`featuredreviews, newest, oldest, highestrating, lowestrating, mosthelpful, longest, shortest`]. Default Value set is `featuredreviews`.

+ Request

            Example: http://api.jcpenney.com/products/pp5002310768/reviews?page=2&pageSize=4&sortBy=featuredreviews

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `Reviews`)

    + Body

            {
                "reviews": [
                    {
                        "url": "http://api.jcpenney.com/v2/products/pp5002990111/reviews/5002990111",
                        "title": "Cute dress, great price",
                        "text": "I brought this dress to wear to a fall wedding and I loved it. Just add some stylish knee boots and some accessories to dress it up. The material is soft and you will be HOT in this dress, so there's no need to layer underneath. I have back fat rolls and a bit of a belly, but I didn't even need to wear any supportive undergarments to smooth them out - they didn't show at all.",
                        "pros": "Soft material, no need for spanks, great price",
                        "cons": "none so far",
                        "recommend": true,
                        "ratings": [
                            {
                                "name": "OVERALL",
                                "max": 5,
                                "value": 4
                            },
                            {
                                "name": "VALUE",
                                "max": 5,
                                "value": 4
                            },
                            {
                                "name": "FIT",
                                "max": 5,
                                "value": 3.6
                            },
                            {
                                "name": "STYLING",
                                "max": 5,
                                "value": 4.4
                            }
                        ],
                        "customer": {
                            "name": "Ema",
                            "url": "http://reviews.jcpenney.com/profiles/1573-en_us/C0ED7FE04D65982424CEFE996D2B95AF/profile.htm",
                            "from": "Elmont, NY",
                            "age": "25-29",
                            "gender": "FEMALE",
                            "shoppingFrequency": "OCCASIONALLY"
                        }
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/products/pp5002990111/reviews/5002990112",
                        "title": "very nice dress",
                        "text": "It's a very nice dress that just meet my expectation. The belt is a little bit high to my waist, I'm not sure whether it is just the style, so I just take it out and put it back to where I feel comfortable. It's simple and warm. I'm very satisfied with it.",
                        "pros": "nice color, nice style and nice fabric",
                        "cons": "Belt is kind of higher than my waist",
                        "recommend": true,
                        "ratings": [
                            {
                                "name": "OVERALL",
                                "max": 5,
                                "value": 4
                            },
                            {
                                "name": "VALUE",
                                "max": 5,
                                "value": 4
                            },
                            {
                                "name": "FIT",
                                "max": 5,
                                "value": 4
                            },
                            {
                                "name": "STYLING",
                                "max": 5,
                                "value": 4
                            }
                        ],
                        "customer": {
                            "name": "Kathy",
                            "url": "http://reviews.jcpenney.com/profiles/1573-en_us/E5C6572A78ED0613A155FA5654C95848/profile.htm",
                            "from": "Virginia",
                            "age": "30-39",
                            "gender": "FEMALE",
                            "shoppingFrequency": "FREQUENTLY"
                        }
                    }
                ],
                "pages": [
                    {
                        "url": "http://api.jcpenney.com/v2/products/pp5002990111/reviews?sortBy=featuredreviews&page=1&pageSize=4",
                        "number": 1,
                        "selected": true
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/products/pp5002990111/reviews?sortBy=featuredreviews&page=2&pageSize=4",
                        "number": 2,
                        "selected": false
                    }
                ],
                "sortOptions": [
                    {
                        "url": "http://api.jcpenney.com/v2/products/pp5002990111/reviews?sortBy=featuredreviews",
                        "name": "Featured Reviews",
                        "order": 1,
                        "selected": true
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/products/pp5002990111/reviews?sortBy=expertreviews",
                        "name": "Expert Reviews",
                        "order": 2,
                        "selected": false
                    }
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Reviews",
                "type": "object",
                "properties": {
                    "reviews": {
                        "title": "List of reviews",
                        "type": "array",
                        "items": {
                            "title": "review",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve the review information."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Review title or summary."
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Review text."
                                },
                                "pros": {
                                    "type": "string",
                                    "description": "Pros listed by the user in the review for the product."
                                },
                                "cons": {
                                    "type": "string",
                                    "description": "Cons listed by the user in the review for the product."
                                },
                                "recommend": {
                                    "type": "boolean",
                                    "description": "Indicates whether the review is recommended.",
                                    "default": false
                                },
                                "ratings": {
                                    "title": "List of ratings provided by the user.",
                                    "type": "array",
                                    "items": {
                                        "title": "Rating",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Title/Name of the rating."
                                            },
                                            "max": {
                                                "type": "double",
                                                "description": "Max allowed value for the rating",
                                                "default": 5
                                            },
                                            "value": {
                                                "type": "double",
                                                "description": "Rating value provided.",
                                                "default": 0
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "max",
                                            "value"
                                        ]
                                    }
                                },
                                "customer": {
                                    "title": "Customer",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the customer who provided the review."
                                        },
                                        "url": {
                                            "type": "URL",
                                            "description": "URL to retrieve the page where the customer information can be viewed."
                                        },
                                        "from": {
                                            "type": "string",
                                            "description": "Location of the user as provided while submitting the review."
                                        },
                                        "age": {
                                            "type": "string",
                                            "enum": [
                                                "UNDER18",
                                                "18-24",
                                                "25-29",
                                                "30-39",
                                                "40-49",
                                                "50-60",
                                                "OVER60"
                                            ],
                                            "description": "string representation of age range of the customer as provided while submitting the review."
                                        },
                                        "gender": {
                                            "type": "string",
                                            "enum": [
                                                "MALE",
                                                "FEMALE"
                                            ],
                                            "description": "Gender of the customer submitting the review."
                                        },
                                        "shoppingFrequency": {
                                            "type": "string",
                                            "enum": [
                                                "FIRSTTIME",
                                                "OCCASIONALLY",
                                                "REGULARLY"
                                            ],
                                            "description": "Indicates the shopping frequency of the customer submitting the review."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "url",
                                        "from",
                                        "age",
                                        "gender",
                                        "shoppingFrequency"
                                    ]
                                }
                            },
                            "required": [
                                "url",
                                "title",
                                "text",
                                "pros",
                                "cons",
                                "recommend",
                                "ratings"
                            ]
                        }
                    },
                    "pages": {
                        "title": "List of pages",
                        "type": "array",
                        "items": {
                            "title": "Page",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve the results for the selected page."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Page number",
                                    "default": 1
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates if the current page is selected.",
                                    "default": false
                                }
                            },
                            "required": [
                                "url",
                                "number",
                                "selected"
                            ]
                        }
                    },
                    "sortOptions": {
                        "title": "List of sort options.",
                        "type": "array",
                        "items": {
                            "title": "SortOption",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to sort the reviews result in a particular order."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the sort option."
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates whether the current sort option is selected by the user.",
                                    "default": false
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "Indicates the order of the sort options",
                                    "default": 1
                                }
                            },
                            "required": [
                                "url",
                                "name",
                                "selected",
                                "order"
                            ]
                        }
                    }
                }
            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            Example when the client has requested for an invalid page number.
            {
              "errorCode": "SRV_PAGE_INVALID",
              "errorMessage": "Page number provided is not applicable to the current request."
            }

            Example when page size provided by client is invalid.
            {
              "errorCode": "SRV_PAGESIZE_INVALID",
              "errorMessage": "Page size provided is invalid. Only value between 24 and 96 are allowed."
            }

            Example when an invalid sort by option is provided.
            {
              "errorCode": "SRV_SORTBY_INVALID",
              "errorMessage": "Sort by value provided is invalid. SortBy value should be one of: [featuredreviews, expertreviews, staffreviews, topcontributors, photoreviews, newest, oldest, highestrating, lowestrating, mosthelpful, longest, shortest]"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_PRODUCT_NOTFOUND",
                "errorMessage": "Product not found."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Review [/product/{productId}/reviews]
### Create a review [POST]
User needs to have a valid session to create/post a review for the product. A user can provide a particular rating for a product, write review and recommend
the product as well.

+ Parameters
    + productId (required, string, `pp5002310768`) ... Id of the Product to submit reviews for.

+ Request (application/json)

    + Body

            {
                "ratings": [
                    {
                        "name": "OVERALL",
                        "value": 4
                    },
                    {
                        "name": "FIT",
                        "value": 4
                    },
                    {
                        "name": "VALUE",
                        "value": 3.6
                    },
                    {
                        "name": "STYLING",
                        "value": 4.4
                    }
                ],
                "recommended": true,
                "summary": "very nice dress",
                "text": "It's a very nice dress that just meet my expectation. The belt is a little bit high to my waist, I'm not sure whether it is just the style, so I just take it out and put it back to where I feel comfortable. It's simple and warm. I'm very satisfied with it.",
                "pros": "nice color, nice style and nice fabric",
                "cons": "Belt is kind of higher than my waist",
                "customer": {
                    "name": "luv2shop",
                    "location": "Virginia",
                    "age": "30-39",
                    "gender": "FEMALE",
                    "shoppingFrequency": "REGULARLY"
                }
            }

    + Schema




            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Review",
                "type": "object",
                "properties": {
                    "ratings": {
                        "title": "List of ratings.",
                        "type": "array",
                        "items": {
                            "title": "Rating",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "name of the rating for which the rating should be applied."
                                },
                                "value": {
                                    "type": "double",
                                    "description": "rating value.",
                                    "default": 0
                                }
                            },
                            "required": [
                                "name",
                                "value"
                            ]
                        }
                    },
                    "recommended": {
                        "type": "boolean",
                        "description": "Indicates whether the customer has recommended the product.",
                        "default": false
                    },
                    "summary": {
                        "type": "string",
                        "description": "Summary of the review"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the product review."
                    },
                    "pros": {
                        "type": "string",
                        "description": "Pros listed by the customer for the product."
                    },
                    "cons": {
                        "type": "string",
                        "description": "Cons listed by the customer for the product."
                    },
                    "customer": {
                        "title": "Customer",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the customer submitting the review."
                            },
                            "location": {
                                "type": "string",
                                "description": "Location of the customer."
                            },
                            "age": {
                                "type": "string",
                                "enum": [
                                    "UNDER18",
                                    "18-24",
                                    "25-29",
                                    "30-39",
                                    "40-49",
                                    "50-60",
                                    "OVER60"
                                ],
                                "description": "Age group of the customer."
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "MALE",
                                    "FEMALE"
                                ],
                                "description": "Gender of the customer."
                            },
                            "shoppingFrequency": {
                                "type": "string",
                                "enum": [
                                    "FIRSTTIME",
                                    "OCCASIONALLY",
                                    "REGULARLY"
                                ],
                                "description": "shopping frequency of the customer."
                            }
                        },
                        "required": [
                            "name",
                            "location",
                            "age",
                            "gender",
                            "shoppingFrequency"
                        ]
                    }
                },
                "required": [
                    "ratings",
                    "recommended",
                    "summary",
                    "text",
                    "pros",
                    "cons",
                    "customer"
                ]
            }

+ Response 201

    + Headers

                Content-Type: application/json
                Location: (required, URL, 'http://api.jcpenney.com/v2/product/{productId}/reviews/{reviewId}')

    + Body

            {

            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')


    + Body

            {
                "errorCode": "SRV_PRODUCT_NOTFOUND",
                "errorMessage": "Product not found."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Review [/product/{productId}/reviews/{reviewId}]
### Get a review [GET]
Review resource matching the reviewId passed in the requested URL

+ Parameters
    + productId (required, string, `pp5002310768`) ... Id of the Product.
    + reviewId  (required, string, `51748189`) ... Id of the review to be retrieved.

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Review')

    + Body

            {
                "title": "Cute dress, great price",
                "text": "I brought this dress to wear to a fall wedding and I loved it. Just add some stylish knee boots and some accessories to dress it up. The material is soft and you will be HOT in this dress, so there's no need to layer underneath. I have back fat rolls and a bit of a belly, but I didn't even need to wear any supportive undergarments to smooth them out - they didn't show at all.",
                "pros": "Soft material, no need for spanks, great price",
                "cons": "none so far",
                "recommend": true,
                "ratings": [
                    {
                        "name": "OVERALL",
                        "max": 5,
                        "value": 4
                    },
                    {
                        "name": "VALUE",
                        "max": 5,
                        "value": 4
                    },
                    {
                        "name": "FIT",
                        "max": 5,
                        "value": 3.6
                    },
                    {
                        "name": "STYLING",
                        "max": 5,
                        "value": 4.4
                    }
                ],
                "customer": {
                    "name": "Ema",
                    "url": "http://reviews.jcpenney.com/profiles/1573-en_us/C0ED7FE04D65982424CEFE996D2B95AF/profile.htm",
                    "from": "Elmont, NY",
                    "age": "25-29",
                    "gender": "FEMALE",
                    "shoppingFrequency": "OCCASIONALLY"
                }
            }

    + Schema

            {
                "schema": "http://json-schema.org/draft-04/schema#",
                "title": "Review",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title of the review."
                    },
                    "text": {
                        "type": "string",
                        "description": "complete review of the product."
                    },
                    "pros": {
                        "type": "string",
                        "description": "Pros of the product."
                    },
                    "cons": {
                        "type": "string",
                        "description": "Cons of the product."
                    },
                    "recommend": {
                        "type": "boolean",
                        "description": "Indicates if the product is recommended by the user.",
                        "default": false
                    },
                    "ratings": {
                        "title": "List of rating for the product",
                        "type": "array",
                        "items": {
                            "title": "Review",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the rating."
                                },
                                "max": {
                                    "type": "double",
                                    "description": "max value allowed for the rating.",
                                    "default": 5
                                },
                                "value": {
                                    "type": "double",
                                    "description": "rating value provided by the customer.",
                                    "default": 0
                                }
                            },
                            "required": [
                                "name",
                                "max",
                                "value"
                            ]
                        }
                    },
                    "customer": {
                        "title": "Customer",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the customer who provided the review."
                            },
                            "url": {
                                "type": "URL",
                                "description": "URL to retrieve the page where the customer information can be viewed."
                            },
                            "from": {
                                "type": "string",
                                "description": "Location of the user as provided while submitting the review."
                            },
                            "age": {
                                "type": "string",
                                "enum": [
                                    "UNDER18",
                                    "18-24",
                                    "25-29",
                                    "30-39",
                                    "40-49",
                                    "50-60",
                                    "OVER60"
                                ],
                                "description": "string representation of age range of the customer as provided while submitting the review."
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "MALE",
                                    "FEMALE"
                                ],
                                "description": "Gender of the customer submitting the review."
                            },
                            "shoppingFrequency": {
                                "type": "string",
                                "enum": [
                                    "FIRSTTIME",
                                    "OCCASIONALLY",
                                    "REGULARLY"
                                ],
                                "description": "Indicates the shopping frequency of the customer submitting the review."
                            }
                        },
                        "required": [
                            "id",
                            "url",
                            "from"
                        ]
                    }
                },
                "required": [
                    "title",
                    "text",
                    "pros",
                    "cons",
                    "recommend",
                    "ratings",
                    "customer"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_PRODUCT_NOTFOUND",
                "errorMessage": "Product not found."
            }

            {
                "errorCode": "SRV_REVIEW_NOTFOUND",
                "errorMessage": "Review not found."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Search [/search?{?q,page,pageSize,sortBy,filters}]
List of products returned that matches the search criteria. The search result can be sorted and filtered along with pagination.

### Get Products by Text Search [GET]
Get the products whose name matches the search term.

+ Parameters
    + q (required, string, `shirts`) ... search term.
    + page (optional, Integer, `2`) ... Used for pagination of products.
    + pageSize (optional, Integer, `24`) ... Min 24, Max 96. default: 24. Used to indicate the number of products to be retrieved. If the number of products requested is more than the number of products matching the search criteria then all the products are returned.
    + sortBy (optional, String, `pricehightolow`) ... one of ('bestmatch', 'pricehightolow', 'pricelowtohigh', 'ratingshightolow', 'ratingslowtohigh'). default: 'bestmatch'. Used for sorting the products.
    + filters (optional, String, `1234`) ... Used for facet navigation of products.

+ Request

            Example: http://api.jcpenney.com/v2/search?q=shirts&page=2

    + Headers

            X-Currency: String ... (optional, String, `USD`)

+ Response 200


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, '')

    + Body

            {
                "count": 10,
                "query": "polo shirts",
                "products": [
                    {
                        "id": "pp5002260205",
                        "name": "The Foundry Supply Co.™ Jersey Pocket Polo Shirt – Big & Tall",
                        "url": "http://api.jcpenney.com/v2/products/pp5002260205",
                        "isNew": false,
                        "rating": 0,
                        "reviewCount": 0,
                        "images": [
                            {
                                "url": "http://zoom.jcpenney.com/is/image/DP1127201219540167M.tif",
                                "type": "PRIMARY",
                                "altText": "The+Foundry+Supply+Co.%E2%84%A2+Jersey+Pocket+Polo+Shirt%C2%A0%E2%80%93%C2%A0Big+%26+Tall"
                            },
                            {
                                "url": "http://zoom.jcpenney.com/is/image/DP0117201320084850C.tif",
                                "swatchUrl": "http://www.jcpenney.com/dotcom/images/DP1127201219540567S.jpg",
                                "type": "SWATCH",
                                "altText": "Electric Blu/ Navy"
                            }
                        ],
                        "prices": [
                            {
                                "max": 40,
                                "min": 40,
                                "type": "ORIGINAL"
                            },
                            {
                                "max": 14.99,
                                "min": 14.99,
                                "type": "CLEARANCE"
                            }
                        ]
                    },
                    {
                        "id": "1c66271",
                        "name": "French Toast® Piqué Polo Shirt - Boys",
                        "url": "http://api.jcpenney.com/v2/products/1c66271",
                        "isNew": false,
                        "rating": 0,
                        "reviewCount": 0,
                        "images": [
                            {
                                "url": "http://zoom.jcpenney.com/is/image/0900631b81c72a02M.TIF",
                                "type": "PRIMARY",
                                "altText": "French+Toast%C2%AE+Piqu%C3%A9+Polo+Shirt+-+Boys"
                            },
                            {
                                "url": "http://zoom.jcpenney.com/is/image/1c72a02_1c72a0f_412-8200_Black_jpg.tif",
                                "swatchUrl": "http://www.jcpenney.com/dotcom/images/0900631b81c72a0fS.jpg",
                                "type": "SWATCH",
                                "altText": "Black"
                            }
                        ],
                        "prices": [
                            {
                                "max": 11,
                                "min": 11,
                                "type": "ORIGINAL"
                            },
                            {
                                "max": 11,
                                "min": 11,
                                "type": "DEFAULT"
                            }
                        ]
                    }
                ],
                "filters": [
                    {
                        "id": "899",
                        "name": "Team",
                        "type": "DEFAULT",
                        "values": [
                            {
                                "id": "4294964962",
                                "url": "http://api.jcpenney.com/v2/search?q=polo%20shirts&page=1&pageSize=24&filters=4294964962",
                                "name": "not selected",
                                "count": 3,
                                "selected": false,
                                "available": true
                            }
                        ]
                    }
                ],
                "pages": [
                    {
                        "url": "http://api.jcpenney.com/v2/search?q=polo%20shirts&pageNum=1&pageSize=24",
                        "number": 1,
                        "selected": true
                    }
                ],
                "sortOptions": [
                    {
                        "url": "http://api.jcpenney.com/v2/search?q=polo%20shirts&pageSize=24&pageNum=1&sortBy=pricehightolow",
                        "name": "pricehightolow",
                        "selected": false,
                        "order": 2
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/search?q=polo%20shirts&pageSize=24&pageNum=1&sortBy=pricelowtohigh",
                        "name": "pricelowtohigh",
                        "selected": false,
                        "order": 3
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/search?q=polo%20shirts&pageSize=24&pageNum=1&sortBy=ratingshightolow",
                        "name": "ratingshightolow",
                        "selected": false,
                        "order": 4
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/search?q=polo%20shirts&pageSize=24&pageNum=1&sortBy=best%20match",
                        "name": "best match",
                        "selected": true,
                        "order": 1
                    }
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Products",
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "The search term."
                    },
                    "count": {
                        "type": "integer",
                        "description": "Count of number of products.",
                        "default": 0
                    },
                    "products": {
                        "title": "List of products",
                        "type": "array",
                        "description": "Array of products",
                        "items": {
                            "title": "Product",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier of the product."
                                },
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve the product detail information."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the product."
                                },
                                "isNew": {
                                    "type": "boolean",
                                    "description": "Indicates that the product is a new product.",
                                    "default": false
                                },
                                "rating": {
                                    "type": "double",
                                    "description": "Average rating of the product.",
                                    "default": 0
                                },
                                "reviewCount": {
                                    "type": "integer",
                                    "description": "Number of reviews for the product",
                                    "default": 0
                                },
                                "images": {
                                    "title": "List of images for the product",
                                    "type": "array",
                                    "items": {
                                        "title": "Image",
                                        "type": "object",
                                        "properties": {
                                            "url": {
                                                "type": "URL",
                                                "description": "URL to the product image."
                                            },
                                            "swatchUrl": {
                                                "type": "URL",
                                                "description": "URL to the swatch image for the product."
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "PRIMARY",
                                                    "ALTERNATE",
                                                    "SWATCH"
                                                ],
                                                "description": "Indicates the type of product image."
                                            },
                                            "altText": {
                                                "type": "string",
                                                "description": "Alternate text for the image."
                                            }
                                        },
                                        "required": [
                                            "url",
                                            "type"
                                        ]
                                    }
                                },
                                "prices": {
                                    "title": "List of prices for the product.",
                                    "type": "array",
                                    "items": {
                                        "title": "Price",
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "ORIGINAL",
                                                    "SALE",
                                                    "CLEARANCE",
                                                    "MSRP"
                                                ],
                                                "description": "Indicates the type of price."
                                            },
                                            "min": {
                                                "type": "double",
                                                "description": "minimum price amount for the product.",
                                                "default": 0
                                            },
                                            "max": {
                                                "type": "double",
                                                "description": "maximum price amount for the product.",
                                                "default": 0
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "min",
                                            "max"
                                        ]
                                    }
                                },
                                "messages": {
                                    "title": "List of messages for the product",
                                    "type": "array",
                                    "items": {
                                        "title": "Message",
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "CHANNEL_MESSAGING",
                                                    "PROMOTION",
                                                    "TRUCK_DELIVERY"
                                                ],
                                                "description": "Indicates the type of message."
                                            },
                                            "title": {
                                                "type": "string",
                                                "description": "Title of the message"
                                            },
                                            "text": {
                                                "type": "string",
                                                "description": "Detail description of the message."
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "title",
                                            "text"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "id",
                                "url",
                                "name",
                                "isNew",
                                "rating",
                                "reviewCount",
                                "prices"
                            ]
                        }
                    },
                    "filters": {
                        "title": "Set of filters for facet navigation of products",
                        "type": "array",
                        "items": {
                            "title": "Filter",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier for the filter."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the filter."
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "DEFAULT",
                                        "RANGE",
                                        "PRICE_RANGE"
                                    ],
                                    "description": "Indicates the type of filter."
                                },
                                "values": {
                                    "title": "List of filter values which can be applied.",
                                    "type": "array",
                                    "items": {
                                        "title": "FilterValue",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Unique identifier for the filter value."
                                            },
                                            "url": {
                                                "type": "URL",
                                                "description": "URL to be used to apply the filter."
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the filter value"
                                            },
                                            "image": {
                                                "type": "URL",
                                                "description": "URL to the image assigned to the dimension value."
                                            },
                                            "count": {
                                                "type": "integer",
                                                "description": "Count of products for which the filter value is applicable.",
                                                "default": 0
                                            },
                                            "selected": {
                                                "type": "boolean",
                                                "description": "Indicates whether the current filter value is selected for the product.",
                                                "default": false
                                            },
                                            "available": {
                                                "type": "boolean",
                                                "description": "Indicates whether the current filter value is available for selection.",
                                                "default": true
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "url",
                                            "name",
                                            "image",
                                            "count",
                                            "selected",
                                            "available"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "type",
                                "values"
                            ]
                        }
                    },
                    "pages": {
                        "title": "Set of pages for supporting pagination",
                        "type": "object",
                        "items": {
                            "title": "page",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to be used to retrieve the products in the required page."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Page number",
                                    "default": 1
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates if the current page object is selected.",
                                    "default": false
                                }
                            },
                            "required": [
                                "url",
                                "number",
                                "selected"
                            ]
                        }
                    },
                    "sortOptions": {
                        "title": "List of sort options applicable to the products.",
                        "type": "array",
                        "items": {
                            "title": "SortOption",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to be used to retrieve the products sorted in a particular order."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the sort option."
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates if the sort option is selected.",
                                    "default": false
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "Order of the sort option to be displayed.",
                                    "default": 1
                                }
                            },
                            "required": [
                                "url",
                                "name",
                                "selected",
                                "order"
                            ]
                        }
                    }
                }
            }

+ Response 400
    The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            Request contains an invalid page.

            {
                "errorCode": "SRV_PAGE_INVALID",
                "errorMessage": "Page number provided is not applicable to the current request."
            }

            Request contains invalid page size.

            {
                "errorCode": "SRV_PAGESIZE_INVALID",
                "Page size provided is invalid. Only value between 24 and 96 is allowed."
            }

            Request contains invalid sort option.

            {
                "errorCode": "SRV_SORTBY_INVALID",
                "errorMessage": "Sort by value provided is invalid. SortBy value should be one of: [featured, pricehightolow, pricelowtohigh, ratingshightolow]."
            }

            Request contains an invalid filter value.

            {
                "errorCode": "SRV_FILTER_INVALID",
                "errorMessage": "The filter value provided is not applicable to the current request."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')


    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Suggestions [/search/suggestions/{searchTerm}]
### Get suggestions for a search term [GET]
It does a predictive search and returns suggestions to users regarding the search criteria. For example, user types in 'shirts', this service will return--'poloshirts', 'denimshirts', etc.

+ Parameters
   + searchTerm (required, string, `shirts`) ... `searchTerm` is used to retrieve the suggestions.

+ Request

            Example: http://api.jcpenney.com/v2/search/suggestions/shirts

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Suggestions')

    + Body

            {
                "searchTerm": "shirts",
                "count": 5,
                "suggestions": [
                    "shirts",
                    "poloshirts",
                    "sweatshirts",
                    "denimshirts",
                    "womenssweatshirts"
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Suggestion",
                "type": "object",
                "properties": {
                    "searchTerm": {
                        "type": "string",
                        "description": "The search term."
                    },
                    "count": {
                        "type": "string",
                        "description": "Count of number of search suggestion"
                    },
                    "suggestions": [
                        "type": "string",
                        "description": "List of suggestions"
                    ]
                },
                "required": [
                    "searchTerm",
                    "count",
                    "suggestions"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


# Group Account
Provides functionality for viewing and updating customer account information, and managing the default shipping address and payment method.  Also allows setting a default store and adding to favorites.

## Account [/customer]
Provides ability to manage customer account information.

### Create account [POST]
Creates a new customer account. User has to provide their first and last name, a unique email address (which should not already exist in the system), and password for a successful account creation.
##### HTTPS required

+ Request

    + Body

            {
                "email": "alice@example.com",
                "firstName": "Alice",
                "lastName": "Sampleton",
                "password": "2GAT123",
                "emailOptin": true
            }



    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Customer",
                "type": "object",
                "properties": {
                    "email": {
                    "type": "string",
                    "description": "Email address to uniquely identify a customer account at JCPenney."
                    },
                    "firstName": {
                    "type": "string",
                    "description": "First name of the customer."
                    },
                    "lastName": {
                    "type": "string",
                    "description": "Last name of the customer."
                    },
                    "password": {
                    "type": "string",
                    "description": "password for the customer account at JCPenney. Should contain 6-16 characters. Should not contain customer's first name, last name or email. Should not contain spaces or consecutive characters. Should not contain the string 'jcp'.",
                    "minLength": 6,
                    "maxLength": 16
                    },
                    "emailOptin": {
                    "type": "boolean",
                    "description": "Indicates whether the customer has opted in for JCPenney marketing emails.",
                    "isDefault": true
                    }
                },
                "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "password",
                    "emailOptin"
                ]
            }

+ Response 201

    + Headers

            Content-Type: application/json
            Location: (required,URL,'https://api.jcpenney.com/v2/customer')


    + Body

            {

            }
    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_FIRSTNAMEISNULL",
                "errorMessage": "Enter First Name. First name value should not be null."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


### Get Account [GET]
Retrieves account information for the logged-in customer.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Customer')

    + Body

            {
               "id": "C135430000",
               "firstName": "Dheeraj",
               "lastName": "Jain",
               "email": "dheerajatwork@gmail.com",
               "password": null,
               "emailOptin": true
            }


    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Customer basic information",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address for the JCPenney customer account."
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of the customer."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the customer."
                    },
                    "emailOptin": {
                        "type": "boolean",
                        "description": "Indicates whether the customer has opted in for JCPenney marketing email.",
                        "isDefault": true
                    }
                },
                "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "emailOptin"
                ]
            }


+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "erorMessage": "The customer's session is invalid"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


## Session [/session]
Provides ability for users to manage their session.
### Sign in [POST]
This action will create a session for the customer with a valid email address and password. The email address and password provided in the request body should match the email address and password present in the application.
Both email address and password are case-sensitive.
##### HTTPS required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')


    + Body

            {
            "email": "betty@example.com",
            "password": "2GAT123"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Session authentication details",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "email address to uniquely identify a customer account in JCPenney."
                    },
                    "password": {
                        "type": "string",
                        "description": "password for a JCPenney customer account."
                    }
                }
            }




+ Response 201

    + Headers

            Content-Type: application/json
            DPSecureCookie: String ... (095ff3df01b128e1733fa0f0900f4766fa6;)

    + Body

            {

            }

    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body

            {
                "errorCode": "SRV_CUSTOMER_INPUTISNULL",
                "errorMessage": "Please enter username and password."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body

            {
                "errorCode": "SRV_CUSTOMER_NOTFOUND",
                "errorMessage": "User Name or Password is incorrect."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Sign out [DELETE]
This service logs out the user from the application. The session is also deleted if there is no user activity for more than x minutes (the session timeout is configurable).
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {

            }

    + Schema

            {

            }

+ Response 200


    + Headers

            Content-Type: application/json

    + Body


            {

            }

    + Schema

            {

            }


+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "erorMessage": "The customer's session is invalid"
            }


    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Name [/customer/name]
### Update customer name [PUT]
A customer can update their first name, last name, or both once logged in.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                    "firstName": "Alice",
                    "lastName": "Sampleton"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Customer basic information",
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "First name of the Customer."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the customer."
                    }
                },
                "required": [
                    "firstName",
                    "lastName"
                ]
            }




+ Response 200


     + Headers

            Content-Type: application/json

     + Body

            {

            }
     + Schema

            {

            }


+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_FIRSTNAMEISNULL",
                "errorMessage": "Enter First Name. First name value should not be null."
            }



    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }




    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Email [/customer/email]
### Update customer email [PUT]
A customer can update the login email ID. This service is used to update the registered customer email address using PUT.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                "password": "2GAT123",
                "email": "betty@example.com"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Customer information",
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "Password of the current JCPenney customer account."
                    },
                    "email": {
                        "type": "string",
                        "description": "New and unique email address for JCPenney customer account."
                    }
                },
                "required": [
                    "password",
                    "email"
                ]
            }




+ Response 200

     + Headers

            Content-Type: application/json

     + Body

            {

            }

     + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_PASSWORDINVALID",
                "errorMessage": "Enter a valid current password."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Password [/customer/password]
### Update password [PUT]
Used to change or reset customer's password. To reset the password email is passed in the request and email will be sent with password reset link.
If email and phone are available for a user, both need to be provided. Phone number becomes optional when customer account does not have phone.
##### HTTPS required


+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                    "email": "betty@example.com",
                    "phone": "818-555-1234",
                    "oldPassword": "2GAT123",
                    "newPassword": "2FAN321"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Customer information for modifying the customer password.",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address of the JCPenney customer account."
                    },
                    "phone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number on the JCPenney customer account default address. Applicable only if address has been added to the customer information."
                    },
                    "oldPassword": {
                        "type": "string",
                        "description": "Current password of the JCPenney customer account."
                    },
                    "newPassword": {
                        "type": "string",
                        "description": "New password for the JCPenney customer account."
                    }
                },
                "required": [
                    "email"
                ]
            }





+ Response 200

     + Headers

            Content-Type: application/json

     + Body

            {

            }

     + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_NOTFOUND",
                "erorMessage": "Password change creteria was not matched as per business rule."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "erorMessage": "The customer's session is invalid"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Addresses [/customer/addresses]
User can maintain multiple addresses in their account.
### Add a new address [POST]
Creates an address and adds it to the customer's account.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body

            {
                "firstName": "Alice",
                "middleInitial": "K",
                "lastName": "Sampleton",
                "addressLineOne": "5555 Mulholland Drive",
                "addressLineTwo": "",
                "city": "Los Angeles",
                "state": "CA",
                "zip": "90068",
                "country": "US",
                "phone": "8185551234"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Address object",
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "First name for the customer address.",
                        "minLength": 1,
                        "maxLength": 17
                    },
                    "middleInitial": {
                        "type": "string",
                        "description": "Middle initial for the customer address.",
                        "minLength": 1,
                        "maxLength": 1
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name for the customer address.",
                        "minLength": 1,
                        "maxLength": 24
                    },
                    "company": {
                        "type": "string",
                        "description": "Name of the company.",
                        "minLength": 1,
                        "maxLenngth": 23
                    },
                    "addressLineOne": {
                        "type": "string",
                        "description": "Street address line 1",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "addressLineTwo": {
                        "type": "string",
                        "description": "Street address line 2.",
                        "minLength": 0,
                        "maxLength": 40
                    },
                    "addressLineThree": {
                        "type": "string",
                        "description": "Street address line 3. Applicable to international address only.",
                        "minLength": 0,
                        "maxLength": 40
                    },
                    "city": {
                        "type": "string",
                        "description": "City name.",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "militaryAddressType": {
                        "type": "string",
                        "description": "Indicates the type of military address.",
                        "enum": [
                            "APO",
                            "FPO",
                            "DPO"
                        ]
                    },
                    "state": {
                        "type": "string",
                        "description": "state code/abbreviation for US",
                        "maxLength": 2
                    },
                    "province": {
                        "type": "string",
                        "description": "Province/Territory /Region. Province code for Canada address.",
                        "maxLength": 10
                    },
                    "zip": {
                        "type": "string",
                        "description": "zip code.",
                        "maxLength": 8
                    },
                    "country": {
                        "type": "string",
                        "description": "Country code"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number.",
                        "maxLength": 10
                    },
                    "secondaryPhone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number. Applicable to international address only.",
                        "maxLength": 10
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "addressLineOne",
                    "city",
                    "state",
                    "zip",
                    "phone"
                ]
            }

+ Response 201

    + Headers

            Content-Type: application/json
            Location: (required, URL, 'http://api.jcpenney.com/v2/customer/addresses/{addressId}')

    + Body

            {

            }

    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')
    + Body

            {
                "errorCode": "SRV_FIRSTNAME_ISNULL",
                "errorMessage": "Enter a valid first name"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

### Get Address List [GET]
Retrieves all the addresses stored in the customer account.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Address[]')

    + Body

            [
                {
                    "id": "342342",
                    "firstName": "Alice",
                    "middleInitial": "K",
                    "lastName": "Sampleton",
                    "addressLineOne": "5555 Mulholland Drive",
                    "addressLineTwo": "",
                    "city": "Los Angeles",
                    "state": "CA",
                    "zip": "90068",
                    "country": "US",
                    "phone": "8185551234"
                },
                {
                    "id": "6456564",
                    "firstName": "Bob",
                    "middleInitial": "P",
                    "lastName": "Appleseed",
                    "addressLine1": "5700 Henry Cook Blvd",
                    "addressLine2": "Legacy Village",
                    "city": "Plano",
                    "state": "TX",
                    "zip": "75024",
                    "country": "US",
                    "phone": "9725554321"
                }
            ]

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of addresses",
                "type": "array",
                "items": {
                    "title": "Address",
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for an address record in application."
                        },
                        "firstName": {
                            "type": "string",
                            "description": "First name for the customer address.",
                            "minLength": 1,
                            "maxLength": 17
                        },
                        "middleInitial": {
                            "type": "string",
                            "description": "Middle initial for the customer address.",
                            "minLength": 1,
                            "maxLength": 1
                        },
                        "lastName": {
                            "type": "string",
                            "description": "Last name for the customer address.",
                            "minLength": 1,
                            "maxLength": 24
                        },
                        "company": {
                            "type": "string",
                            "description": "Company name for the customer address.",
                            "minLength": 1,
                            "maxLength": 23
                        },
                        "addressLineOne": {
                            "type": "string",
                            "description": "Street address line 1.",
                            "minLength": 1,
                            "maxLength": 40
                        },
                        "addressLineTwo": {
                            "type": "string",
                            "description": "Street address line 2.",
                            "minLength": 0,
                            "maxLength": 40
                        },
                        "addressLineThree": {
                            "type": "string",
                            "description": "Street address line 3. Applicable for international address only.",
                            "minLength": 0,
                            "maxLength": 40
                        },
                        "city": {
                            "type": "string",
                            "description": "City name.",
                            "minLength": 1,
                            "maxLength": 20
                        },
                        "militaryAddressType": {
                            "type": "string",
                            "description": "Indicates the type of Military address",
                            "enum": [
                                "APO",
                                "FPO",
                                "DPO"
                            ]
                        },
                        "state": {
                            "type": "string",
                            "description": "State code/abbreviation for US.",
                            "maxLength": 2
                        },
                        "province": {
                            "type": "string",
                            "description": "Province/Territory /Region. Province code for Canada address.",
                            "maxLength": 10
                        },
                        "zip": {
                            "type": "string",
                            "description": "zip code.",
                            "maxLength": 8
                        },
                        "country": {
                            "type": "string",
                            "description": "Country code."
                        },
                        "phone": {
                            "type": "string",
                            "description": "Unformatted 10 digit phone number",
                            "maxLength": 10
                        },
                        "secondaryPhoneNumber": {
                            "type": "string",
                            "description": "Unformatted 10 digit phone number. Applicable to international address only."
                        }
                    },
                    "required": [
                        "country",
                        "firstName",
                        "lastName",
                        "addressLineOne",
                        "city",
                        "state",
                        "zip",
                        "phone"
                    ]
                }
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Address [/customer/address/{addressId}]
Customer can manage their individual address
### Retrieve Address [GET]
Retrieving an address identified by its unique ID
##### HTTPS required
##### Authentication required

+ Parameters
    + addressId (required, String, `ad123456`) ... addressId an unique identifier to get the address.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Address')

    + Body

            {
                "firstName": "Alice",
                "middleInitial": "K",
                "lastName": "Sampleton",
                "addressLineOne": "5555 Mulholland Drive",
                "addressLineTwo": "",
                "city": "Los Angeles",
                "state": "CA",
                "zip": "90068",
                "country": "US",
                "phone": "1234567890"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Address object",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for address record in the application."
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name for the customer address.",
                        "minLength": 1,
                        "maxLength": 17
                    },
                    "middleInitial": {
                        "type": "string",
                        "description": "Middle initial for the customer address.",
                        "minLength": 1,
                        "maxLength": 1
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name for the customer address.",
                        "minLength": 1,
                        "maxLength": 24
                    },
                    "company": {
                        "type": "string",
                        "description": "Name of the company.",
                        "minLength": 1,
                        "maxLenngth": 23
                    },
                    "addressLineOne": {
                        "type": "string",
                        "description": "Street address line 1",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "addressLineTwo": {
                        "type": "string",
                        "description": "Street address line 2.",
                        "minLength": 0,
                        "maxLength": 40
                    },
                    "addressLineThree": {
                        "type": "string",
                        "description": "Street address line 3. Applicable to international address only.",
                        "minLength": 0,
                        "maxLength": 40
                    },
                    "city": {
                        "type": "string",
                        "description": "City name.",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "militaryAddressType": {
                        "type": "string",
                        "description": "Indicates the type of military address.",
                        "enum": [
                            "APO",
                            "FPO",
                            "DPO"
                        ]
                    },
                    "state": {
                        "type": "string",
                        "description": "state code/abbreviation for US",
                        "maxLength": 2
                    },
                    "province": {
                        "type": "string",
                        "description": "Province/Territory /Region. Province code for Canada address.",
                        "maxLength": 10
                    },
                    "zip": {
                        "type": "string",
                        "description": "zip code.",
                        "maxLength": 8
                    },
                    "country": {
                        "type": "string",
                        "description": "Country code"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number.",
                        "maxLength": 10
                    },
                    "secondaryPhone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number. Applicable to international address only.",
                        "maxLength": 10
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "addressLineOne",
                    "city",
                    "state",
                    "zip",
                    "phone"
                ]
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_ADDRESS_NOTFOUND",
                "errorMessage": "Address not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

### Update Address [PUT]
Modify an address identified by its unique ID.
##### HTTPS required
##### Authentication required

+ Parameters

    + addressId (required, String, `ad123456`) ... addressId an unique identifier to update the address.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body

            {
                "firstName": "Alice",
                "middleInitial": "K",
                "lastName": "Sampleton",
                "addressLineOne": "5555 Mulholland Drive",
                "addressLineTwo": "",
                "city": "Los Angeles",
                "state": "CA",
                "zip": "90068",
                "country": "US",
                "phone": "8185551234"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Address object",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for address record in the application."
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name for the customer address.",
                        "minLength": 1,
                        "maxLength": 17
                    },
                    "middleInitial": {
                        "type": "string",
                        "description": "Middle initial for the customer address.",
                        "minLength": 1,
                        "maxLength": 1
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name for the customer address.",
                        "minLength": 1,
                        "maxLength": 24
                    },
                    "company": {
                        "type": "string",
                        "description": "Name of the company.",
                        "minLength": 1,
                        "maxLenngth": 23
                    },
                    "addressLineOne": {
                        "type": "string",
                        "description": "Street address line 1",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "addressLineTwo": {
                        "type": "string",
                        "description": "Street address line 2.",
                        "minLength": 0,
                        "maxLength": 40
                    },
                    "addressLineThree": {
                        "type": "string",
                        "description": "Street address line 3. Applicable to international address only.",
                        "minLength": 0,
                        "maxLength": 40
                    },
                    "city": {
                        "type": "string",
                        "description": "City name.",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "militaryAddressType": {
                        "type": "string",
                        "description": "Indicates the type of military address.",
                        "enum": [
                            "APO",
                            "FPO",
                            "DPO"
                        ]
                    },
                    "state": {
                        "type": "string",
                        "description": "state code/abbreviation for US",
                        "maxLength": 2
                    },
                    "province": {
                        "type": "string",
                        "description": "Province/Territory /Region. Province code for Canada address.",
                        "maxLength": 10
                    },
                    "zip": {
                        "type": "string",
                        "description": "zip code.",
                        "maxLength": 8
                    },
                    "country": {
                        "type": "string",
                        "description": "Country code"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number.",
                        "maxLength": 10
                    },
                    "secondaryPhone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number. Applicable to international address only.",
                        "maxLength": 10
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "addressLineOne",
                    "city",
                    "state",
                    "zip",
                    "phone"
                ]
            }

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }

    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')
    + Body

            {
                "errorCode": "SRV_FIRSTNAME_ISNULL",
                "errorMessage": "Enter a valid first name"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_ADDRESS_NOTFOUND",
                "errorMessage": "Address not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

### Delete Address [DELETE]
Deletes an address identified by its unique ID.
##### HTTPS required
##### Authentication required

+ Parameters

    + addressId (required, String, `ad123456`) ... addressId an unique identifier to delete the address.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

  + Headers

            Content-Type: application/json

  + Body

            {

            }

  + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_ADDRESS_NOTFOUND",
                "errorMessage": "Address not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Payment Methods [/customer/paymentMethods]
User can maintain multiple payment methods in their account.
### Add a new payment method [POST]
Creates new Payment method for the customer. It generally pertains to a Credit Card Information with card number, expiry date and CVV (wherever applicable)
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                   "type": "Visa",
                    "cardNumber": "9999999999999999",
                    "expiryMonth": 12,
                    "expiryYear": 2017,
                    "isDefault": true,
                    "addressId": "123456"
            }


    + Schema


            {

                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Credit card information",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of card/payment method.",
                        "enum": [
                            "MASTERCARD",
                            "Visa",
                            "JCP",
                            "DISCOVER",
                            "AMEX"
                        ]
                    },
                    "cardNumber": {
                        "type": "string",
                        "description": "Card number. Length of the field varies based on type of card. For MASTERCARD, VISA, AMEX, and DISCOVER the length of the field should be 14. For JCP the length of the field should be 11."
                    },
                    "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month on the card. Not applicable for JCP cards.",
                        "minimum": 1,
                        "maximum": 12
                    },
                    "expiryYear": {
                        "type": "integer",
                        "description": "Expiry year on the card. Not applicable for JCP cards. Value should be equal or greater than current year. Combination of expiry month and expiry year should be greater than current date."
                    },
                    "cvv": {
                        "type": "string",
                        "description": "3 digit CVV number on the card. Card Verification # is a three-digit number found in the signature area on the back of your VISA or MasterCard credit card. This three-digit number is displayed after your credit card number. It is a four-digit number that appears on the front of your American Express card, to the right of your credit card number. Applicable for VISA cards only."
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates whether the card is default payment method for the customer.",
                        "default": false
                    },
                    "addressId": {
                        "type": "string",
                        "description": "Unique identifier for an address applicable to the customer in the application. Address cannot be a store address. The address associated with the addressId is associated as the billing address for the card/payment method."
                    }
                },
                "required": [
                    "type",
                    "cardNumber",
                    "isDefault",
                    "addressId"
                ]

            }




+ Response 201

    + Headers

            Content-Type: application/json
            Location: (required, URL, 'https://api.jcpenney.com/v2/customer/paymentMethods')

    + Body

            {

            }

    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_CARDNUMBERISINVALID",
                "errorMessage": "Please provide a valid card number."
            }


    + Schema


            {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                        "errorCode": {
                            "type": "string",
                            "description": "Error code indicating the type of error."
                        },
                        "errorMessage": {
                            "type": "string",
                            "description": "Descriptive message for the error in the system."
                        }
                    },
                    "required": [
                        "errorCode",
                        "errorMessage"
                    ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "erorMessage": "The customer's session is invalid"
            }


    + Schema


            {
                 "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Get Payment Methods List [GET]
Retrieves all the payment methods saved to the customer account.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'PaymentMethod[]')

    + Body

            [
                {
                    "id": "cc1234",
                    "type": "MASTERCARD",
                    "lastFour": "9999",
                    "expiryMonth": 1,
                    "expiryYear": 2017,
                    "isDefault": true,
                    "address": {
                        "id": "12345",
                        "firstName": "Alice",
                        "middleInitial": "",
                        "lastName": "Sampleton",
                        "company": "",
                        "addressLineOne": "5555 Mulholland Drive",
                        "addressLineTwo": "",
                        "city": "Los Angeles",
                        "state": "CA",
                        "zip": "90068",
                        "country": "US",
                        "phone": "8185551234"
                    }
                },
                {
                    "id": "cc4567",
                    "type": "Visa",
                    "lastFour": "8888",
                    "expiryMonth": 5,
                    "expiryYear": 2015,
                    "isDefault": false,
                    "address": {
                        "id": "12346",
                        "firstName": "Alice",
                        "middleInitial": "",
                        "lastName": "Sampleton",
                        "company": "",
                        "addressLineOne": "5555 Mulholland Drive",
                        "addressLineTwo": "",
                        "city": "Los Angeles",
                        "state": "CA",
                        "zip": "90068",
                        "country": "US",
                        "phone": "8185551234"
                    }
                }
            ]

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Set of payment methods for the JCPenney customer account.",
                "type": "array",
                "items": {
                    "title": "Payment method",
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier of the payment method record in the application."
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of card",
                            "enum": [
                                "MASTERCARD",
                                "Visa",
                                "AMEX",
                                "DISCOVER",
                                "JCP"
                            ]
                        },
                        "lastFour": {
                            "type": "string",
                            "description": "Last 4 charcters of a card. In case of JCP cards characters 6-10 of the card number.",
                            "minLength": 4,
                            "maxLength": 4
                        },
                        "expiryMonth": {
                            "type": "integer",
                            "description": "Expiry month of the card.",
                            "minimum": 1,
                            "maximum": 12
                        },
                        "expiryYear": {
                            "type": "integer",
                            "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date."
                        },
                        "isDefault": {
                            "type": "boolean",
                            "description": "Indicates whether the card is the default payment method for the customer account.",
                            "default": false
                        },
                        "address": {
                            "title": "Address",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier for the address record in the application."
                                },
                                "firstName": {
                                    "type": "string",
                                    "description": "First name for the customer address.",
                                    "minLength": 1,
                                    "maxLength": 17
                                },
                                "middleInitial": {
                                    "type": "string",
                                    "description": "Middle initial for the customer address.",
                                    "minLength": 1,
                                    "maxLength": 1
                                },
                                "lastName": {
                                    "type": "string",
                                    "description": "Last name for the customer address.",
                                    "minLength": 1,
                                    "maxLength": 24
                                },
                                "company": {
                                    "type": "string",
                                    "description": "Company name for the customer address.",
                                    "minLength": 1,
                                    "maxLength": 23
                                },
                                "addressLineOne": {
                                    "type": "string",
                                    "description": "Street address line 1.",
                                    "minLength": 1,
                                    "maxLength": 40
                                },
                                "addressLineTwo": {
                                    "type": "string",
                                    "description": "Street address line 2.",
                                    "minLength": 0,
                                    "maxLength": 40
                                },
                                "addressLineThree": {
                                    "type": "string",
                                    "description": "Street address line 3. Applicable for international address only.",
                                    "minLength": 0,
                                    "maxLength": 40
                                },
                                "city": {
                                    "type": "string",
                                    "description": "City name.",
                                    "minLength": 1,
                                    "maxLength": 20
                                },
                                "militaryAddressType": {
                                    "type": "string",
                                    "description": "Indicates the type of Military address",
                                    "enum": [
                                        "APO",
                                        "FPO",
                                        "DPO"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "description": "State code/abbreviation for US.",
                                    "maxLength": 2
                                },
                                "province": {
                                    "type": "string",
                                    "description": "Province/Territory /Region. Province code for Canada address.",
                                    "maxLength": 10
                                },
                                "zip": {
                                    "type": "string",
                                    "description": "zip code.",
                                    "maxLength": 8
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Country code."
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Unformatted 10 digit phone number",
                                    "maxLength": 10
                                },
                                "secondaryPhoneNumber": {
                                    "type": "string",
                                    "description": "Unformatted 10 digit phone number. Applicable to international address only."
                                }
                            },
                            "required": [
                                "country",
                                "firstName",
                                "lastName",
                                "addressLineOne",
                                "city",
                                "state",
                                "zip",
                                "phone"
                            ]
                        }
                    },
                    "required": [
                        "id",
                        "type",
                        "lastFour",
                        "isDefault",
                        "address"
                    ]
                }
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Payment Method [/customer/paymentMethods/{paymentMethodId}]
Customer can manage individual payment method.
### Get Payment Method [GET]
Retrieves a particular payment method identified by its unique ID.
##### HTTPS required
##### Authentication required

+ Parameters

    + paymentMethodId (required, String, `usercc1400067`) ... paymentMethodId an unique identifier to get the payment method.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'PaymentMethod')

    + Body

            {
                "id": "1234",
                "type": "Visa",
                "lastFour": "9999",
                "expiryMonth": 12,
                "expiryYear": 2011,
                "isDefault": true,
                "address": {
                    "id": "12345",
                    "firstName": "Alice",
                    "middleInitial": "Sampleton",
                    "lastName": "G",
                    "company": "xxxx",
                    "addressLineOne": "5555 Mulholland Drive",
                    "addressLineTwo": "",
                    "city": "Los Angeles",
                    "state": "CA",
                    "zip": "90068",
                    "country": "US",
                    "phone": "8185551234"
                }
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Payment method",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the payment method record in the application."
                    },
                    "type": {
                        "type": "string",
                        "description": "type of card/payment method.",
                        "enum": [
                            "MASTERCARD",
                            "Visa",
                            "AMEX",
                            "DISCOVER",
                            "JCP"
                        ]
                    },
                    "lastFour": {
                        "type": "string",
                        "description": "Last 4 digits of a card. In case of JCP cards digits 6-10 of the card number.",
                        "minLength": 4,
                        "maxLength": 4
                    },
                    "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month on the card.",
                        "minimum": 1,
                        "maximum": 12
                    },
                    "expiryYear": {
                        "type": "integer",
                        "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date."
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates whether the card is the default payment method for the customer account.",
                        "default": false
                    },
                    "address": {
                        "title": "Address",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique identifier for the address record in the application."
                            },
                            "firstName": {
                                "type": "string",
                                "description": "First name for the customer address.",
                                "minLength": 1,
                                "maxLength": 17
                            },
                            "middleInitial": {
                                "type": "string",
                                "description": "Middle initial for the customer address.",
                                "minLength": 1,
                                "maxLength": 1
                            },
                            "lastName": {
                                "type": "string",
                                "description": "Last name for the customer address.",
                                "minLength": 1,
                                "maxLength": 24
                            },
                            "company": {
                                "type": "string",
                                "description": "Company name for the customer address.",
                                "minLength": 1,
                                "maxLength": 23
                            },
                            "addressLineOne": {
                                "type": "string",
                                "description": "Street address line 1.",
                                "minLength": 1,
                                "maxLength": 40
                            },
                            "addressLineTwo": {
                                "type": "string",
                                "description": "Street address line 2.",
                                "minLength": 0,
                                "maxLength": 40
                            },
                            "addressLineThree": {
                                "type": "string",
                                "description": "Street address line 3. Applicable for international address only.",
                                "minLength": 0,
                                "maxLength": 40
                            },
                            "city": {
                                "type": "string",
                                "description": "City name.",
                                "minLength": 1,
                                "maxLength": 20
                            },
                            "militaryAddressType": {
                                "type": "string",
                                "description": "Indicates the type of Military address",
                                "enum": [
                                    "APO",
                                    "FPO",
                                    "DPO"
                                ]
                            },
                            "state": {
                                "type": "string",
                                "description": "State code/abbreviation for US.",
                                "maxLength": 2
                            },
                            "province": {
                                "type": "string",
                                "description": "Province/Territory /Region. Province code for Canada address.",
                                "maxLength": 10
                            },
                            "zip": {
                                "type": "string",
                                "description": "zip code.",
                                "maxLength": 8
                            },
                            "country": {
                                "type": "string",
                                "description": "Country code."
                            },
                            "phone": {
                                "type": "string",
                                "description": "Unformatted 10 digit phone number",
                                "maxLength": 10
                            },
                            "secondaryPhoneNumber": {
                                "type": "string",
                                "description": "Unformatted 10 digit phone number. Applicable to international address only."
                            }
                        },
                        "required": [
                            "country",
                            "firstName",
                            "lastName",
                            "addressLineOne",
                            "city",
                            "state",
                            "zip",
                            "phone"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "last4",
                    "isDefault",
                    "address"
                ]
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_PAYMENTMETHOD_NOTFOUND",
                "errorMessage": "Payment method not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


### Update Payment Method [PUT]
Used to update a given payment method identified by its unique Id.
##### HTTPS required
##### Authentication required

+ Parameters

    + paymentMethodId (required, String, `usercc1400067`) ... paymentMethodId an unique identifier to modify the payment method.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                    "type": "Visa",
                    "cardNumber": "9999999999999999",
                    "expiryMonth": 12,
                    "expiryYear": 2011,
                    "isDefault": true,
                    "addressId": "1234"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Payment method",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of card/payment method.",
                        "enum": [
                            "MASTERCARD",
                            "Visa",
                            "JCP",
                            "DISCOVER",
                            "AMEX"
                        ]
                    },
                    "cardNumber": {
                        "type": "string",
                        "description": "Card number. Length of the field varies based on type of card. For MASTERCARD, VISA, AMEX, and DISCOVER the length of the field should be 14. For JCP the length of the field should be 11."
                    },
                    "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month on the card. Not applicable for JCP cards.",
                        "minimum": 1,
                        "maximum": 12
                    },
                    "expiryYear": {
                        "type": "integer",
                        "description": "Expiry year on the card. Not applicable for JCP cards. Value should be equal or greater than current year. Combination of expiry month and expiry year should be greater than current date."
                    },
                    "cvv": {
                        "type": "string",
                        "description": "3 digit CVV number on the card. Card Verification # is a three-digit number found in the signature area on the back of your VISA or MasterCard credit card. This three-digit number is displayed after your credit card number. It is a four-digit number that appears on the front of your American Express card, to the right of your credit card number. Applicable for VISA cards only."
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates whether the card is default payment method for the customer.",
                        "default": false
                    },
                    "addressId": {
                        "type": "string",
                        "description": "Unique identifier for an address applicable to the customer in the application. Address cannot be a store address. The address associated with the addressId is associated as the billing address for the card/payment method."
                    }
                },
                "required": [
                    "type",
                    "cardNumber",
                    "isDefault",
                    "addressId"
                ]
            }




+ Response 200

     + Headers

            Content-Type: application/json

     + Body

            {

            }

     + Schema

            {

            }

+ Response 400 (application/json)

    + Headers

            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                 "errorCode": "SRV_CUSTOMER_ADDRESSISNULL",
                "errorMessage": "Please provide an address for the payment method."
            }



    + Schema


            {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                        "errorCode": {
                            "type": "string",
                            "description": "Error code indicating the type of error."
                        },
                        "errorMessage": {
                            "type": "string",
                            "description": "Descriptive message for the error in the system."
                        }
                    },
                    "required": [
                        "errorCode",
                        "errorMessage"
                    ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {

                "errorCode": "SVC_USR_ERR_SESSION_INVALID",
                "erorMessage": "User's session is invalid"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_PAYMENTMETHODNOTFOUND",
                "errorMessage": "Payment method not found for the customer"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was a problem while processing your request. Please try after some time."
            }



    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



### Delete Payment Method [DELETE]
Deletes a particular payment method identified by its unique Id.
##### HTTPS required
##### Authentication required

+ Parameter
    + paymentMethodId (required, String, `usercc1400067`) ... paymentMethod ID `paymentMethodId` to remove that payment method from the customer.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: String

    + Body

            {

            }

    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "erorMessage": "User's session is invalid"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_CREDITCARDNOTFOUND",
                "errorMessage": "Credit card record is not available in the customer"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was a problem while processing your request. Please try after some time."
            }


    + Schema


            {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                        "errorCode": {
                            "type": "string",
                            "description": "Error code indicating the type of error."
                        },
                        "errorMessage": {
                            "type": "string",
                            "description": "Descriptive message for the error in the system."
                        }
                    },
                    "required": [
                        "errorCode",
                        "errorMessage"
                    ]
            }




## Default Payment Method [/customer/paymentMethods/default]
### Set default payment method  [PUT]
Updates the Payment Method as default associated with the customer.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                    "paymentMethodId": "pm12345"
            }



    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Default payment id",
                "type": "object",
                "properties": {
                    "paymentMethodId": {
                        "type": "string",
                        "description": "Unique identifier for payment method in the system."
                    }
                },
                "required": [
                    "paymentMethodId"
                ]
            }




+ Response 200

     + Headers

            Content-Type: application/json

     + Body

            {

            }

     + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_PAYMENTMETHODIDISNULL",
                "errorMessage": "Please provide a valid payment method id."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SVC_USR_ERR_SESSION_INVALID",
                "erorMessage": "User's session is invalid"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_PAYMENTMETHODNOTFOUND",
                "errorMessage": "Payment method not found for the customer"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR"
                "errorMessage": "There was a problem while processing your request. Please try
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Stores [/customer/stores]
User can maintain multiple stores in their account.
### Add a store [POST]
Adds a store to the customer's account.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                        "firstName": "Alice",
                        "lastName": "Sampleton",
                        "phone": "8185551234",
                        "storeNumber": "0699"
                        "isDefault": true
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of stores",
                "type": "array",
                "items": {
                    "title": "Store",
                    "type": "object",
                    "properties": {
                        "firstName": {
                            "type": "string",
                            "description": "First name of the customer for the store address."
                        },
                        "lastName": {
                            "type": "string",
                            "description": "Last name of the customer for the store address."
                        },
                        "phone": {
                            "type": "string",
                            "description": "10 digit unformatted phone number for the customer."
                        },
                        "isDefault": {
                            "type": "boolean",
                            "description": "Indicates whether the store address is the default store address for the customer.",
                            "default": false
                        },
                        "storeNumber": {
                            "type": "string",
                            "description": "Unique identifier for the JCPenney store in the application."
                        }
                    },
                    "required": [
                        "firstName",
                        "lastName",
                        "phone",
                        "storeNumber",
                        "isDefault"
                    ]
                }




+ Response 201

    + Headers


            Content-Type: application/json
            Location: (required,URL,'https://api.jcpenney.com/v2/customer/stores/st12345')


    + Body

            {

            }

    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_FIRSTNAMEISNULL",
                "errorMessage": "Please enter a valid first name."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_FIRSTNAMEISNULL",
                "errorMessage": "Enter First Name. First name value should not be null."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Get Store List [GET]
Retrives all saved stores from the customer account.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `Stores`)
    + Body


            [
                {
                    "id": "123434",
                    "firstName": "Alice",
                    "lastName": "Sampleton",
                    "phone": "8185551234",
                    "storeNumber": "0699",
                    "addressLineOne": "Glendale Galleria",
                    "addressLineTwo": "1169 Glendale Galleria",
                    "city": "Glendale",
                    "state": "CA",
                    "zip": "91210",
                    "country": "US",
                    "storePhone": "818-240-8700",
                    "isDefault": true
                },
                {
                    "id": "23321312",
                    "firstName": "Bob",
                    "lastName": "Appleseed",
                    "phone": "1234567890",
                    "storeNumber": "67890",
                    "addressLineOne": "Stonebriar Mall",
                    "addressLineTwo": "2607 Preston Rd",
                    "city": "Frisco",
                    "state": "TX",
                    "zip": "75034",
                    "addressCountry": "US",
                    "storePhone": "972-712-2707",
                    "isDefault": false
                }
            ]


    + Schema


            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "List of stores",
            "type": "array",
            "items": {
                "title": "Store",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier to store address n the application for the customer."
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of the customer for the store address."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the customer for the store address."
                    },
                    "phone": {
                        "type": "string",
                        "description": "10 digit unformatted phone number for the customer."
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates whether the store address is the default store address for the customer.",
                        "default": false
                    },
                    "storeNumber": {
                        "type": "string",
                        "description": "Unique identifier for the JCPenney store in the application."
                    },
                    "storePhone": {
                        "type": "string",
                        "description": "Formatted phone number for the store."
                    },
                    "addressLineOne": {
                        "type": "string",
                        "description": "Street address line 1 for the store address."
                    },
                    "addressLineTwo": {
                        "type": "string",
                        "description": "Street address line 2 for the store address."
                    },
                    "city": {
                        "type": "string",
                        "description": "city where the JCPenney store is located."
                    },
                    "state": {
                        "type": "string",
                        "description": "State where the JCPenney store is located."
                    },
                    "zip": {
                        "type": "string",
                        "description": "zip code of the location where the JCPenney store is located."
                    },
                    "country": {
                        "type": "string",
                        "description": "Store address country."
                    }
                },
                "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "phone",
                    "storeNumber",
                    "addressLineOne",
                    "city",
                    "state",
                    "zip",
                    "country",
                    "storePhone",
                    "isDefault"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Store [/customer/stores/{storeId}]
User can manage individual store.
### Get Store [GET]
Retrieves store details from the customer account identified by its unique Id.
##### HTTPS required
##### Authentication required

+ Parameters

    + storeId (required, String, ``st12345``) ... storeId an unique identifier.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `Stores`)

    + Body


            {
                "id": "123434",
                "firstName": "Alice",
                "lastName": "Sampleton",
                "phone": "818-555-1234",
                "storeNumber": "0699",
                "addressLineOne": "Glendale Galleria",
                "addressLineTwo": "1169 Glendale Galleria",
                "city": "Glendale",
                "state": "CA",
                "zip": "91210",
                "country": "US",
                "storePhone": "818-240-8700",
                "isDefault": true
            }



    + Schema


            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Store",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier to store address n the application for the customer."
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the customer for the store address."
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the customer for the store address."
                },
                "phone": {
                    "type": "string",
                    "description": "10 digit unformatted phone number for the customer."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates whether the store address is the default store address for the customer.",
                    "default": false
                },
                "storeNumber": {
                    "type": "string",
                    "description": "Unique identifier for the JCPenney store in the application."
                },
                "storePhone": {
                    "type": "string",
                    "description": "Formatted phone number for the store."
                },
                "addressLineOne": {
                    "type": "string",
                    "description": "Street address line 1 for the store address."
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "Street address line 2 for the store address."
                },
                "city": {
                    "type": "string",
                    "description": "city where the JCPenney store is located."
                },
                "state": {
                    "type": "string",
                    "description": "State where the JCPenney store is located."
                },
                "zip": {
                    "type": "string",
                    "description": "zip code of the location where the JCPenney store is located."
                },
                "country": {
                    "type": "string",
                    "description": "Store address country."
                }
            },
            "required": [
                "id",
                "firstName",
                "lastName",
                "phone",
                "storeNumber",
                "addressLineOne",
                "city",
                "state",
                "zip",
                "country",
                "storePhone",
                "isDefault"
            ]
            }



+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_STORENOTFOUND",
                "errorMessage": "Store record is not available in the customer"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Update Store Details [PUT]
Modify store details from the customer account identified by its unique Id.
A change may include customer First Name, Last Name or Phone number.
##### HTTPS required
##### Authentication required

+ Parameters

    + storeId (required, String, `st12345`) ... storeId an unique identifier.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                    "firstName": "Alice",
                    "lastName": "Sampleton",
                    "phone": "818-555-1234",
                    "storeNumber": "0699"
                    "isDefault": true
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Store",
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "First name of the customer for the store address."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the customer for the store address."
                    },
                    "phone": {
                        "type": "string",
                        "description": "10 digit unformatted phone number for the customer."
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates whether the store address is the default store address for the customer.",
                        "default": false
                    },
                    "storeNumber": {
                        "type": "string",
                        "description": "Unique identifier for the JCPenney store in the application."
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "phone",
                    "storeNumber",
                    "isDefault"
                ]
            }




+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }

    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_FIRSTNAMEISNULL",
                "errorMessage": "Please enter a valid first name."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_STORENOTFOUND",
                "errorMessage": "Store record is not available in the customer"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Delete Store [DELETE]
Deletes a particular store from the customer account identified by its unique id.
##### HTTPS required
##### Authentication required

+ Parameters

    + storeId (required, String, `st12345`) ... storeId an unique identifier.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }

    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_STORENOTFOUND",
                "errorMessage": "Store record is not available in the customer"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Default Store [/customer/stores/default]
### Set default store [PUT]
Used to update a particular store as default. It is identified by its unique Id.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body


            {
                "id": "12345"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Store",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier to identify the store address record for the customer in the application."
                    }
                },
                "required": [
                    "id"
                ]
            }



+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }

    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_CUSTOMER_STORENOTFOUND",
                "errorMessage": "Store record is not available in the customer"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Preferences [/customer/preferences]
Customer can maintain their preferences.

### Update preferences [PUT]

Updates the Customer Preferences for receiving alerts through Emails or Mobile SMS.
Alerts could be in form of promotions or reminders of Shopping Bag or Favorites.
A customer can opt-in or opt-out of these preference as per will.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')


    + Body


            [
                {
                    "name": "emailOffers",
                    "subscribed": true
                },
                {
                    "name": "mobileOffers",
                    "subscribed": true,
                    "phone": "2144367985"
                },
                {
                    "name": "shoppingBagReminder",
                    "subscribed": false
                },
                {
                    "name": "favoritesReminder",
                    "subscribed": false
                },
                {
                    "name": "surveyReminder",
                    "subscribed": false
                },
                {
                    "name": "reviewNotificationReminder",
                    "subscribed": false
                }
            ]


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of preferences.",
                "type": "array",
                "items": {
                    "title": "preference",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "name of the preference.",
                            "enum": [
                                "EMAILOFFERS",
                                "MOBILEOFFERS",
                                "SHOPPINGBAGREMINDERS",
                                "FAVORITESREMINDER",
                                "SURVEYPARTICIPATIONREMINDER",
                                "RATINGREVIEWNOTIFICATION",
                                "SHARECREDITHISTORYINFO",
                                "SHARECUSTOMERINFO"
                            ]
                        },
                        "subscribed": {
                            "type": "boolean",
                            "description": "indicates whether the current customer preference is selected.",
                            "default": false
                        },
                        "frequency": {
                            "type": "string",
                            "description": "Frequency for receiving JCPenney email's. Applicable to preference - EMAILOFFERS only.",
                            "enum": [
                                "ASAVAILBLE",
                                "WEEKLY",
                                "MONTHLY"
                            ]
                        },
                        "interests": {
                            "type": "array",
                            "title": "List of interests.",
                            "items": {
                                "title": "Interest",
                                "type": "string",
                                "description": "Customer interest. Applicable to preference - EMAILOFFERS only.",
                                "enum": [
                                    "MENS",
                                    "WOMEN",
                                    "CHILDREN",
                                    "HOMEOUTDOORLIVING"
                                ]
                            }
                        },
                        "phone": {
                            "type": "string",
                            "description": "Phone number for MOBILEOFFERS only"
                        }
                    },
                    "required": [
                        "name",
                        "subscribed"
                    ]
                }
            }



+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }

    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Get Preferences List [GET]
Retrieve customer preferences saved in the account.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `Preference[]`)

    + Body


            [
                {
                    "name": "emailOffers",
                    "subscribed": true
                },
                {
                    "name": "mobileOffers",
                    "subscribed": true,
                    "phone": "2144367985"
                },
                {
                    "name": "shoppingBagReminder",
                    "subscribed": false
                },
                {
                    "name": "favoritesReminder",
                    "subscribed": false
                },
                {
                    "name": "surveyReminder",
                    "subscribed": false
                },
                {
                    "name": "reviewNotificationReminder",
                    "subscribed": false
                }
            ]


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of preferences.",
                "type": "array",
                "items": {
                    "title": "preference",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "name of the preference.",
                            "enum": [
                                "EMAILOFFERS",
                                "MOBILEOFFERS",
                                "SHOPPINGBAGREMINDERS",
                                "FAVORITESREMINDER",
                                "SURVEYPARTICIPATIONREMINDER",
                                "RATINGREVIEWNOTIFICATION",
                                "SHARECREDITHISTORYINFO",
                                "SHARECUSTOMERINFO"
                            ]
                        },
                        "subscribed": {
                            "type": "boolean",
                            "description": "indicates whether the current customer preference is selected.",
                            "default": false
                        },
                        "frequency": {
                            "type": "string",
                            "description": "Frequency for receiving JCPenney email's. Applicable to preference - EMAILOFFERS only.",
                            "enum": [
                                "ASAVAILBLE",
                                "WEEKLY",
                                "MONTHLY"
                            ]
                        },
                        "interests": {
                            "type": "array",
                            "title": "List of interests.",
                            "items": {
                                "title": "Interest",
                                "type": "string",
                                "description": "Customer interest. Applicable to preference - EMAILOFFERS only.",
                                "enum": [
                                    "MENS",
                                    "WOMEN",
                                    "CHILDREN",
                                    "HOMEOUTDOORLIVING"
                                ]
                            }
                        },
                        "phone": {
                            "type": "string",
                            "description": "Phone number for MOBILEOFFERS only"
                        }
                    },
                    "required": [
                        "name",
                        "subscribed"
                    ]
                }
            }



+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Favorites [/customer/favorites]
Provides the ability to manage the customer's favorites list.

### Add Favorites [POST]
Adds an item to the customer's favorites.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body

            **Request for adding a regular product to favorites.**

            {
                "items": [
                    {
                        "skuId": "22906380042",
                        "quantity": 1
                    }
                ]
            }

            **Request for adding a product with service aggreement to favorites**

            {
                "items": [
                    {
                        "skuId": "86930540018",
                        "quantity": 1
                    },
                    {
                        "skuId": "86991460000",
                        "quanatity": 1
                    }
                ]
            }

            **Request for adding a product with Variable data information (Monogram)**

            {
                "items": [
                    {
                        "skuId": "53180980315",
                        "quantity": 1,
                        "attributes": [
                            {
                                "type": "TYPE (MONO/PERSONLZ)",
                                "value": "3"
                            },
                            {
                                "type": "THREAD COLOR",
                                "value": "K"
                            },
                            {
                                "type": "POSITION / LOCATION",
                                "value": "L"
                            },
                            {
                                "type": "POSITION / LOCATION",
                                "value": "L"
                            },
                            {
                                "type": "FIRST NAME INITIAL",
                                "value": "A"
                            },
                            {
                                "type": "MIDDLE NAME INITIAL",
                                "value": "L"
                            },
                            {
                                "type": "LAST NAME INITIAL",
                                "value": "P"
                            }
                        ]
                    }
                ]
            }

    + Schema

            {
                "type": "object",
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "skuId",
                                "quantity"
                            ],
                            "properties": {
                                "skuId": {
                                    "type": "string",
                                    "minLength": 13,
                                    "maxLength": 13
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "description": "Represented the attributes.",
                                        "title": "Attribute",
                                        "required": [
                                            "value",
                                            "type"
                                        ],
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "description": "value of the attribute."
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "type of attribute."
                                            }
                                        }
                                    }
                                },
                                "quantity": {
                                    "type": "integer",
                                    "maximum": 99,
                                    "minimum": 1
                                }
                            }
                        },
                        "uniqueItems": true
                    }
                }
            }

+ Response 201

    + Headers

            Location: (required, URL, 'https://api.jcpenney.com/v2/customer/favorites')

    + Body

            {

            }

    + Schema

            {

            }

+ Response 400


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            Response when an invalid product is added to customer favorites.

            {
                "errorCode": "SRV_PRODUCT_NOTFOUND",
                "errorMessage": "Product not found."
            }

            Response when an invalid quantity is provided in the request.

            {
                "errorCode": "SRV_QUANTITY_INVALID",
                "errroMessage": "Please provide a valid quantity."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

### Get Favorites List [GET]
Retrieve all favorites from the customer account.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Favorite[]')

    + Body

            [
                {
                    "id": "8691974",
                    "name": "Dyson® DC41 Animal™ Vacuum Cleaner",
                    "imageURL": "https://zoom.jcpenney.com/is/image/DP0507201318124873C.tif",
                    "activePrice": 599.99,
                    "originalPrice": 670,
                    "sale": true,
                    "inventoryMessage": "Instock",
                    "description": "Dyson® DC41 Animal™ Vacuum Cleaner",
                    "attributes": [
                        {
                            "type": "Product",
                            "value": "Dyson Dc41 Animal Upright"
                        },
                        {
                            "type": "Color",
                            "value": "Iron/satin Purple"
                        }
                    ],
                    "quantity": 2,
                    "productURL": "http://api.jcpenney.com/products/8691974",
                    "productNumber": "BG869-1974"
                },
                {
                    "id": "8699150",
                    "parentId": "8691974",
                    "name": "1YR SVS PLAN POS",
                    "activePrice": 25,
                    "originalPrice": 25,
                    "sale": true,
                    "description": "1YR SVS PLAN POS",
                    "quantity": 1,
                    "productNumber": "ES869-9150"
                }
            ]

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of favorite items",
                "type": "array",
                "items": {
                    "title": "Favorite item",
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for a favorite item for the customer in the application."
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the product added to favorite."
                        },
                        "imageUrl": {
                            "type": "URL",
                            "description": "URL to the image assigned to the product added to favorite."
                        },
                        "activePrice": {
                            "type": "double",
                            "description": "Current price of the product.",
                            "default": 0
                        },
                        "originalPrice": {
                            "type": "double",
                            "description": "Original price of the product.",
                            "default": 0
                        },
                        "sale": {
                            "type": "boolean",
                            "description": "Indicates whether the product is available on clearance.",
                            "default": false
                        },
                        "inventoryMessage": {
                            "type": "string",
                            "description": "Formatted string representation of the inventory for the product."
                        },
                        "description": {
                            "type": "string",
                            "description": "Descripiton of the product."
                        },
                        "attributes": {
                            "type": "array",
                            "title": "List of attributes applicable to the favorite item.",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Type of attribute"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value of the attribute"
                                }
                            },
                            "required": [
                                "type",
                                "value"
                            ]
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Number of items added to favorite.",
                            "default": 1
                        },
                        "productURL": {
                            "type": "URL",
                            "description": "JCPenney catalog REST API URL to the product."
                        },
                        "productNumber": {
                            "type": "string",
                            "description": "Formatted product number."
                        },
                        "productId": {
                            "type": "string",
                            "description": "11-digit SKU Id representing the product added to favorite."
                        },
                        "parentId": {
                            "type": "string",
                            "description": "parent favorite item id. Applicable only when product with service agreement is added to favorites."
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "activePrice",
                        "originalPrice",
                        "sale",
                        "inventoryMessage",
                        "description",
                        "quantity",
                        "productNumber",
                        "productId"
                    ]
                }
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Favorite [/customer/favorites/{favoriteItemId}]
Managing an individual favorite item.
### Get Favorite [GET]
Retrieve a favorite identified by a given ID.
##### HTTPS required
##### Authentication required

+ Parameters

    + favoriteItemId (required, String, `gi12345`) ... favoriteItemId a unique identifier to get item.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'Favorite')

    + Body

            {
                "id": "1234567",
                "name": "Arizona Cargo Pants",
                "imageURL": "https://www.jcpenney.com/dotcom/images/DP0520201317023164M.jpg",
                "activePrice": 10,
                "originalPrice": 12,
                "sale": true,
                "inventoryMessage": "Instock",
                "description": "Arizona Cargo Pants",
                "attributes": [
                    {
                        "type": "Color",
                        "value": "Dark Olive"
                    }
                ],
                "quantity": 2,
                "productURL": "http://api.jcpenney.com/products/1234567",
                "productNumber": "BG123-4567"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Favorite item",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for a favorite item for the customer in the application."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the product added to favorite."
                    },
                    "imageUrl": {
                        "type": "URL",
                        "description": "URL to the image assigned to the product added to favorite."
                    },
                    "activePrice": {
                        "type": "double",
                        "description": "Current price of the product.",
                        "default": 0
                    },
                    "originalPrice": {
                        "type": "double",
                        "description": "Original price of the product.",
                        "default": 0
                    },
                    "sale": {
                        "type": "boolean",
                        "description": "Indicates whether the product is available on clearance.",
                        "default": "false"
                    },
                    "inventoryMessage": {
                        "type": "string",
                        "description": "Formatted inventory message for the product."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for the product in favorite."
                    },
                    "attributes": {
                        "type": "array",
                        "title": "List of attributes applicable to the favorite item.",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Type of attribute"
                            },
                            "value": {
                                "type": "string",
                                "description": "Value of the attribute"
                            }
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Number of items added to favorite.",
                            "default": 1
                        },
                        "productURL": {
                            "type": "URL",
                            "description": "JCPenney catalog REST API URL to the product."
                        },
                        "productNumber": {
                            "type": "string",
                            "description": "Formatted product number."
                        },
                        "productId": {
                            "type": "string",
                            "description": "11-digit SKU Id representing the product added to favorite."
                        },
                        "parentId": {
                            "type": "string",
                            "description": "parent favorite item id. Applicable only when product with service agreement is added to favorites."
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "activePrice",
                        "originalPrice",
                        "sale",
                        "inventoryMessage",
                        "description",
                        "quantity",
                        "productNumber",
                        "productId"
                    ]
                }
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_FAVORITEITEM_NOTFOUND",
                "errorMessage": "Favorite item not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

### Update Favorite [PUT]
Edits the Favorite, may include changing SKUs or quantity.
##### HTTPS required
##### Authentication required

+ Parameters

    + favoriteItemId (required, String, `gi12345`) ... favoriteItemId an unique identifier to update gift item.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

    + Body

            {
                "skuId": "12345670002",
                "quantity": 1
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Favorite input item",
                "type": "object",
                "properties": {
                    "skuId": {
                        "type": "string",
                        "description": "11-digit SKU identifier for the item being added."
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Non zero, non-negative integer representing the number of items being added.",
                        "default": 1
                    },
                    "attributes": {
                        "type": "array",
                        "title": "List of attributes applicable to the favorite item.",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Type of attribute"
                            },
                            "value": {
                                "type": "string",
                                "description": "Value of the attribute"
                            }
                        }
                    }
                },
                "required": [
                    "skuId",
                    "quantity"
                ]
            }

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }

    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            Response when an invalid product is added to customer favorites.

            {
                "errorCode": "SRV_PRODUCT_NOTFOUND",
                "errorMessage": "Product not found."
            }

            Response when an invalid quantity is provided in the request.

            {
                "errorCode": "SRV_QUANTITY_INVALID",
                "errroMessage": "Please provide a valid quantity."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_FAVORITEITEM_NOTFOUND",
                "errorMessage": "Favorite item not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

### Delete Favorite [DELETE]
Deletes the favorite matching the request URL, identified by its unique id.
##### HTTPS required
##### Authentication required

+ Parameters

    + favoriteItemId (required, String, `gi12345`) ... favoriteItemId an unique identifier to delete gift item.

+ Request

    + Headers

            Cookie:(required, String, 'DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;')

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }

    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_FAVORITEITEM_NOTFOUND",
                "errorMessage": "Favorite item not found."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


# Group Order
This document explains the bag and checkout functionality. The functionality supported are add items and manage shopping bag, apply & view promotions to the bag, add or update shipping address, shipping option and payment method, add and view gift wrap, review and submit order.
Authenticated user can view their order history as well as individual order details, guest user can only view their placed order by providing phone number for a particular order they had placed.

## Bag items [/cart/items]
### Add to bag [POST]
Add items to the shopping bag. Different kinds of items can be added to the bag including regular merchandise items, gift cards and items with variable data like Monogram or Made to Measure.

+ Request

    + Body


            [
                {
                    "id": "25112010121",
                    "quantity": 2
                },
                {
                    "id": "51315070000",
                    "quantity": 1
                }
            ]


    + Schema


                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Add item input",
                    "type": "array",
                    "items": {
                        "title": "item input",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "11-digit SKU id to be added to the bag."
                            },
                            "quantity": {
                                "type": "integer",
                                "description": "Number of items to be added to the bag."
                            },
                            "attributes": {
                                "type": "array",
                                "title": "List of attributes for the item",
                                "items": {
                                    "title": "Attribute",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Type of attribute"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "value of the attribute."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "value"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "id",
                            "quantity"
                        ]
                    }
                }



+ Response 201

    + Headers

            Content-Type: application/json
            Location: (required,URL,'https://api.jcpenney.com/v2/cart/items')


    + Body

            {

            }
    + Schema

            {

            }


+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
              "errorCode": "SRV_ITEM_NOTACTIVE",
              "errorMessage": "Item not found."
            }



    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)
    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }



    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



### Get item list [GET]
Retrieves a complete list of items which are available in the bag. Each item is identified by its unique commerce ID.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPOrder=L121950004;`)

+ Response 200

    + Headers


            Content-Type: application/json
            X-Data-Type: String ... (required, String)


    + Body

            [
                    {
                        "id": "ci11739009654",
                        "productNumber": "FC513-1507D",
                        "productUrl": "http://api.jcpenney.com/v2/products/5131507",
                        "name": " St. John's Bay® Flannel Shirt",
                        "imageUrl": "https://zoom.jcpenney.com/is/image/DP0729201318152867C.tif",
                        "activePrice": 14.99,
                        "originalPrice": 30,
                        "sale": true,
                        "savings": 15.01,
                        "quantity": 2,
                        "totalWithoutDiscount": 29.98,
                        "total": 29.98,
                        "inventoryStatus": "INSTOCK",
                        "attributes": [
                            {
                                "type": "size",
                                "value": "Medium"
                            },
                            {
                                "type": "color",
                                "value": "Charcoal"
                            }
                        ]
                    },
                    {
                        "id": "ci11739009653",
                        "productNumber": "FC251-1201D",
                        "productUrl": "http://api.jcpenney.com/v2/products/2511201",
                        "name": " Liz Claiborne Ponte Sheath Dress",
                        "imageUrl": "https://zoom.jcpenney.com/is/image/DP1003201318301485C.tif",
                        "activePrice": 35.99,
                        "originalPrice": 60,
                        "sale": true,
                        "savings": 24.01,
                        "quantity": 1,
                        "totalWithoutDiscount": 35.99,
                        "total": 35.99,
                        "inventoryStatus": "INSTOCK",
                        "attributes": [
                            {
                                "type": "size",
                                "value": "8"
                            },
                            {
                                "type": "color",
                                "value": "Black"
                            }
                        ]
                    }
                ]


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "array",
                "title": "list of items in bag",
                "items": {
                            "title": "Item",
                            "type": "object",
                            "properties": {
                            "id": {
                                "type": "string",
                                "description": "unique identifier for the item in the bag."
                            },
                            "productNumber": {
                                "type": "string",
                                "description": "Formatted product number."
                            },
                        "productUrl": {
                            "type": "URL",
                            "description": "URL to the catalog service to retrieve product details."
                        },
                        "productId": {
                            "type": "string",
                            "description": "11-digit SKU id for the item."
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the product."
                        },
                        "imageUrl": {
                            "type": "string",
                            "description": "URL to the image assigned to the product."
                        },
                        "activePrice": {
                            "type": "double",
                            "description": "active/current price for the product.",
                            "default": 0
                        },
                        "originalPrice": {
                            "type": "double",
                            "description": "original price for the product.",
                            "double": 0
                        },
                        "sale": {
                            "type": "boolean",
                            "description": "Indicates that the product is available on clearance.",
                            "default": false
                        },
                        "savings": {
                            "type": "double",
                            "description": "Savings on the item.",
                            "default": 0
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Number of items added to the bag",
                            "default": 1
                        },
                        "totalWithoutDiscount": {
                        "type": "double",
                        "description": "Item total without discounts or adjustments.",
                        "default": 0
                        },
                        "adjustmentsTotal": {
                            "type": "double",
                            "description": "Adjustments total for the item.",
                            "default": 0
                        },
                        "adjustments": {
                            "type": "array",
                            "title": "List of adjustments for the item",
                            "items": {
                                "type": "object",
                                "title": "adjustment",
                                "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "type of adjustment",
                                    "enum": [
                                    "COUPON",
                                    "REWARDS"
                                    ]
                                },
                                "code": {
                                "type": "string",
                                "description": "Promotion code/ rewards certificate code"
                                },
                                "amount": {
                                "type": "double",
                                "description": "Reward/promo amount adjusted.",
                                "default": 0
                                },
                                "serialNumber": {
                                "type": "string",
                                "description": "Serial number for reward certificate."
                                }
                            },
                        "required": [
                            "type",
                            "code",
                            "amount"
                        ]
                        }
                    },
                    "total": {
                        "type": "double",
                        "description": "item total.",
                        "default": 0
                    },
                    "inventoryStatus": {
                        "type": "string",
                        "description": "Inventory status of the item."
                    },
                    "attributes": {
                        "type": "array",
                        "title": "List of attributes for the item",
                        "items": {
                            "title": "Attribute",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Type of attribute"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "value of the attribute."
                                }
                            },
                            "required": [
                                "type",
                                "value"
                            ]
                        }
                    },
                    "parentId": {
                        "type": "string",
                        "description": "id of the parent item in the bag. Applicable to items with service agreements only."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "activePrice",
                    "originalPrice",
                    "sale",
                    "inventoryStatus",
                    "description",
                    "quantity",
                    "productNumber",
                    "productId",
                    "savings",
                    "totalWithoutDiscount",
                    "adjustmentsTotal",
                    "total"
                ]
                }
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body



            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }




    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

## Cart Item [/cart/items/{itemId}]
### Get cart item [GET]
Retrieves an Item details available in bag identified by its unique ID.

+ Parameters

    + itemId (required, String, `ci569000001`) ... An unique identifier of the item.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPOrder=L121950004;`)

+ Response 200

    + Headers


            Content-Type: application/json
            X-Currency: (required, String, `Item`)



    + Body


            {
                "id": "ci11739009653",
                "productNumber": "FC251-1201D",
                "productUrl": "http://api.jcpenney.com/v2/products/2511201",
                "name": " Liz Claiborne Ponte Sheath Dress",
                "imageUrl": "https://zoom.jcpenney.com/is/image/DP1003201318301485C.tif",
                "activePrice": 35.99,
                "originalPrice": 60,
                "sale": true,
                "savings": 24.01,
                "quantity": 1,
                "totalWithoutDiscount": 35.99,
                "total": 35.99,
                "inventoryStatus": "INSTOCK",
                "attributes": [
                {
                    "type": "size",
                    "value": "8"
                },
                {
                    "type": "color",
                    "value": "Black"
                }
                ]
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "title": "Item in bag",
                "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier for the item in the bag."
                },
                "productNumber": {
                    "type": "string",
                    "description": "Formatted product number."
                },
                "productUrl": {
                    "type": "URL",
                    "description": "URL to the catalog service to retrieve product details."
                },
                "productId": {
                    "type": "string",
                    "description": "11-digit SKU id for the item."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the product."
                },
                "imageUrl": {
                    "type": "string",
                    "description": "URL to the image assigned to the product."
                },
                "activePrice": {
                    "type": "double",
                    "description": "active/current price for the product.",
                    "default": 0
                },
                "originalPrice": {
                    "type": "double",
                    "description": "original price for the product.",
                    "double": 0
                },
                "sale": {
                    "type": "boolean",
                    "description": "Indicates that the product is available on clearance.",
                    "default": false
                },
                "savings": {
                    "type": "double",
                    "description": "Savings on the item.",
                    "default": 0
                },
                "quantity": {
                    "type": "integer",
                    "description": "Number of items added to the bag",
                    "default": 1
                },
                "totalWithoutDiscount": {
                    "type": "double",
                    "description": "Item total without discounts or adjustments.",
                    "default": 0
                },
                "adjustmentsTotal": {
                    "type": "double",
                    "description": "Adjustments total for the item.",
                    "default": 0
                },
                "adjustments": {
                    "type": "array",
                    "title": "List of adjustments for the item",
                    "items": {
                    "type": "object",
                    "title": "adjustment",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "type of adjustment",
                            "enum": [
                                "COUPON",
                                "REWARDS"
                            ]
                        },
                        "code": {
                            "type": "string",
                            "description": "Promotion code/ rewards certificate code"
                        },
                        "amount": {
                            "type": "double",
                            "description": "Reward/promo amount adjusted.",
                            "default": 0
                        },
                        "serialNumber": {
                            "type": "string",
                            "description": "Serial number for reward certificate."
                        }
                    },
                    "required": [
                        "type",
                        "code",
                        "amount"
                    ]
                    }
                },
                "total": {
                    "type": "double",
                    "description": "item total.",
                    "default": 0
                },
                "inventoryStatus": {
                    "type": "string",
                    "description": "Inventory status of the item."
                },
                "attributes": {
                    "type": "array",
                    "title": "List of attributes for the item",
                    "items": {
                        "title": "Attribute",
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Type of attribute"
                            },
                            "value": {
                                "type": "string",
                                "description": "value of the attribute."
                            }
                        },
                        "required": [
                            "type",
                            "value"
                        ]
                    }
                },
                "parentId": {
                    "type": "string",
                    "description": "id of the parent item in the bag. Applicable to items with service agreements only."
                }
                },
                "required": [
                    "id",
                    "name",
                    "activePrice",
                    "originalPrice",
                    "sale",
                    "inventoryStatus",
                    "description",
                    "quantity",
                    "productNumber",
                    "productId",
                    "savings",
                    "totalWithoutDiscount",
                    "adjustmentsTotal",
                    "total"
                ]
            }




+ Response 404

    + Headers


            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)


    + Body



            {
                "errorCode": "SRV_COMMERCE_ITEMNOTFOUND",
                "errorMessage":  "Item not found for the customer."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500 (application/json)

    + Headers


            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Update Item [PUT]
Modify/Update an item available in the bag, identified by its unique ID. An update can be in form of changing the item SKU (example color) or quantity.

+ Parameters
   + itemId (required, string, `25112010121`) ... `itemId` is used to update the quantity and item information.
Used to update the item. Item SKU and quantity can be modified.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPOrder=L121950004;`)

    + Body


            {
                 "id": "25112010121",
                 "quantity":  2
            }


    + Schema


              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Update item input",
                "type": "array",
                "items": {
                  "title": "item input",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "11-digit SKU id to be added to the bag."
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "Number of items to be added to the bag."
                    },
                    "attributes": {
                      "type": "array",
                      "title": "List of attributes for the item",
                      "items": {
                        "title": "Attribute",
                        "type": "object",
                        "properties": {
                          "type": {
                              "type": "string",
                              "description": "Type of attribute"
                            },
                          "value": {
                            "type": "string",
                            "description": "value of the attribute."
                          }
                        },
                        "required": [
                          "type",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": ["id", "quantity"]
                }
              }



+ Response 200

    + Headers

            Content-Type: application/json
            Location: (required,URL,'https://api.jcpenney.com/v2/cart')


    + Body

            {

            }
    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, Error`)

    + Body


            {
                    "errorCode": "SRV_ITEM_NOTACTIVE",
                    "errorMessage": "The item is not active and cannot be added to bag."
            }


    + Schema


                  {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                      "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                      }
                    },
                    "required": ["errorCode", "errorMessage"]
                   }


+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, Error`)

    + Body


            {
                    "errorCode": "SRV_COMMERCE_ITEMNOTFOUND",
                    "errorMessage": "Item not found for the customer."
            }


    + Schema


                  {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                      "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                      }
                    },
                    "required": ["errorCode", "errorMessage"]
                   }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body



            {
                    "errorCode": "SRV_GENERIC_ERROR",
                    "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


                  {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                      "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                      }
                    },
                    "required": ["errorCode", "errorMessage"]
                   }



### Delete Item [DELETE]
Removes an item from the bag. The item is identified by its unique ID.

+ Parameter
    + itemId (required, String, `ci524000003`) ... Item ID `itemId` to remove that item from the bag.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json


    + Body

            {

            }
    + Schema

            {

            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_COMMERCE_ITEMNOTFOUND",
                "errorMessage": "Commerce item could not be found."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Promotions [/cart/promotions]

### Apply Promotion [POST]
Applies promotions to the bag. It supports two type of promotions- Coupons and Rewards.
A promotion can return percentage off / dollar off on the order, or a discount in shipping charges.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPOrder=L121950004;`)

    + Body

            Example applying a promo code to order/bag:
            [
              {
                "type": "COUPON",
                "code": "SHOPDEC"
              }
            ]

            Example to apply a reward certificate to order/bag:
            [
              {
                "type": "REWARDS",
                "code": "3431234435453",
                "serialNumber": "4534234"
              }
            ]


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of promotions to be applied",
                "type": "array",
                "items": {
                    "type": "object",
                    "title": "Promotion",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Indicates the type of promotion",
                            "enum": [
                                "COUPON",
                                "REWARDS"
                            ]
                        },
                        "code": {
                            "type": "string",
                            "description": "Promo code or reward certificate code."
                        },
                        "serialNumber": {
                            "type": "string",
                            "description": "Serial number for reward certificate."
                        }
                    },
                    "required": [
                        "code",
                        "type"
                    ]
                }
            }



+ Response 201

    + Headers


            Content-Type: application/json
            Location: URL ('https://api.jcpenney.com/v2/cart/promotions',required)



    + Body

            {

            }
    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            Example when the promo code applied is invalid:
            {
              "errorCode": "SRV_PROMOCODE_INVALID",
              "errorMessage": "Enter a valid code."
            }

            Example when the reward requires a serial number:
            {
              "errorCode": "SRV_SERIALNUMBER_NOTAPPLIED",
              "errorMessage": "Enter a valid serial number."
            }



    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Get Promotions [GET]
Retrieves all the promotions applied to the bag.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPOrder=L121950004;`)

+ Response 200

    + Headers


            Content-Type: application/json
            X-Data-Type: (required, String, `Promotion[]`)


    + Body


            [
                {
                    "id": "pc4534523",
                    "type": "COUPON",
                    "code": "SHOPDEC"
                },
                {
                    "id": "rw942342432",
                    "type": "REWARD",
                    "code": "32132132132131",
                    "serialNumber": "43453"
                }
            ]


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "List of promotions to be applied",
                "type": "array",
                "items": {
                    "type": "object",
                    "title": "Promotion",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Indicates the type of promotion",
                            "enum": [
                                "COUPON",
                                "REWARDS"
                            ]
                        },
                        "code": {
                            "type": "string",
                            "description": "Promo code or reward certificate code."
                        },
                        "serialNumber": {
                            "type": "string",
                            "description": "Serial number for reward certificate."
                        }
                    },
                    "required": [
                        "code",
                        "type"
                    ]
                }
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Promotion [/cart/promotions/{promotionId}]
### Get a promotion [GET]
Retrieve details of a particular promotion on a order. The promotion is identified by a unique ID.

+ Parameters

    + promotionId (required, String, `11000002 `) ... An unique identifier of the promotion.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPOrder=L121950004;`)

+ Response 200


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `Promotion`)


    + Body


            {
                "id": "pc12312321",
                "type": "COUPON",
                "code": "SHOPDEC"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Promotion",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier to identify a promotion on order."
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the type of promotion",
                        "enum": [
                            "COUPON",
                            "REWARDS"
                        ]
                    },
                    "code": {
                        "type": "string",
                        "description": "Promo code or reward certificate code."
                    },
                    "serialNumber": {
                        "type": "string",
                        "description": "Serial number for reward certificate."
                    }
                },
                "required": [
                    "code",
                    "type"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_PROMOTION_NOTFOUND",
                "errorMessage": "The promotion could not be found."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Remove Promotion [DELETE]
Deletes a coupon or reward certificate applied to the bag. It is identified by a unique ID.

+ Parameter
    + promotionId (required, String, `12313`) ... Promotion ID `promotionId` to remove from the bag.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json


    + Body

            {

            }
    + Schema

            {

            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_PROMOTION_NOTFOUND",
                "errorMessage": "Promotion could not be found."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Shipping Address [/cart/shipping/address]
### Add/Update Shipping Address [PUT]
Create or update a shipping address where the items will be shipped. A customer can select store shipping or a regular address. A regular address can have variations in forms of US contiguous/ non-contiguous states or Military Shipping (APO/FPO/DPO).
This operation can only be performed over secure protocol.
##### HTTPS required

+ Request


    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

    + Body


            Example to apply a US address to order

            {
              "firstName": "Alice",
              "lastName": "Sampleton",
              "phone": "8185551234",
              "addressLine1": "5555 Mulholland Drive",
              "city": "Los Angeles",
              "state": "CA",
              "zip": "90068",
              "country": "US",
              "store": false
            }

            Example to apply a store shipping address
            {
              "firstName": "Alice",
              "lastName": "Sampleton",
              "phone": "8185551234",
              "storeNumber": "5601",
              "store": true
            }


    + Schema


            {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Shipping address on order",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the address record in the application."
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name for the customer address.",
                        "minLength": 1,
                        "maxLength": 17
                      },
                      "middleInitial": {
                        "type": "string",
                        "description": "Middle initial for the customer address.",
                        "minLength": 1,
                        "maxLength": 1
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name for the customer address.",
                        "minLength": 1,
                        "maxLength": 24
                      },
                      "company": {
                        "type": "string",
                        "description": "Company name for the customer address.",
                        "minLength": 1,
                        "maxLength": 23
                      },
                      "addressLine1": {
                        "type": "string",
                        "description": "Street address line 1.",
                        "minLength": 1,
                        "maxLength": 40
                      },
                      "addressLine2": {
                        "type": "string",
                        "description": "Street address line 2.",
                        "minLength": 0,
                        "maxLength": 40
                      },
                      "addressLine3": {
                        "type": "string",
                        "description": "Street address line 3. Applicable for international address only.",
                        "minLength": 0,
                        "maxLength": 40
                      },
                      "city": {
                        "type": "string",
                        "description": "City name.",
                        "minLength": 1,
                        "maxLength": 20
                      },
                      "APO_FPO_DPO": {
                        "type": "string",
                        "description": "Indicates the type of Military address",
                        "enum": ["APO", "FPO", "DPO"]
                      },
                      "state": {
                        "type": "string",
                        "description": "State code/abbreviation for US.",
                        "maxLength": 2
                      },
                      "province": {
                        "type": "string",
                        "description": "Province/Territory/Region. Province code for Canada address.",
                        "maxLength": 10
                      },
                      "zip": {
                        "type": "string",
                        "description": "zip code.",
                        "maxLength": 8
                      },
                      "country": {
                        "type": "string",
                        "description": "Country code."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number",
                        "maxLength": 10
                      },
                      "secondaryPhoneNumber": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number. Applicable to international address only."
                      },
                      "store": {
                        "type": "boolean",
                        "description": "indicates whether the address is a store address",
                        "default": false
                      },
                      "storeNumber": {
                        "type": "string",
                        "description": "JCPenney store number unique identifier."
                      }
                    }
              }



+ Response 200


    + Headers

            Content-Type: application/json

    + Body

            {

            }
    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, Error`)

    + Body


                Example when first name is not provided
                {
                  "errorCode": "SRV_ORDER_FIRSTNAMEISNULL",
                  "errorMessage": "Enter a valid first name."
                }

                Example when last name is not provided
                {
                  "errorCode": "SRV_ORDER_LASTNAMEISNULL",
                  "errorMessage": "Enter a valid last name."
                }

                Example when phone number is not provided
                {
                  "errorCode": "SRV_ORDER_PHONENUMISNULL",
                  "errorMessage": "Enter a valid phone number."
                }

                Example when address provided is not standardized.
                {
                  "errorCode": "SRV_ORDER_ADDRESSNOTSTANDARDIZED",
                  "errorMessage": "The address you entered is not in standardized format. Please double check that all your information is correct before continuing."
                }



    + Schema


                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                      "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                      }
                    },
                    "required": ["errorCode", "errorMessage"]
                   }



+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, Error`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer session is invalid."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Get Shipping Address [GET]
Retrieves all the Shipping Information on order based on the shipping id. It includes regular and store addresses both.
##### HTTPS required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

   + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, Address`)


    + Body


            {
                "firstName": "Alice",
                "middleInitial": "L",
                "lastName": "Sampleton",
                "addressLineOne": "5701 Scrugg's way",
                "addressLineTwo": "Legacy Village",
                "city": "Los Angeles",
                "state": "CA",
                "zip": "90068",
                "country": "US",
                "phone": "8185551234",
                "store": false
            }



    + Schema


            {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Shipping address on order",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the address record in the application."
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name for the customer address.",
                        "minLength": 1,
                        "maxLength": 17
                      },
                      "middleInitial": {
                        "type": "string",
                        "description": "Middle initial for the customer address.",
                        "minLength": 1,
                        "maxLength": 1
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name for the customer address.",
                        "minLength": 1,
                        "maxLength": 24
                      },
                      "company": {
                        "type": "string",
                        "description": "Company name for the customer address.",
                        "minLength": 1,
                        "maxLength": 23
                      },
                      "addressLine1": {
                        "type": "string",
                        "description": "Street address line 1.",
                        "minLength": 1,
                        "maxLength": 40
                      },
                      "addressLine2": {
                        "type": "string",
                        "description": "Street address line 2.",
                        "minLength": 0,
                        "maxLength": 40
                      },
                      "addressLine3": {
                        "type": "string",
                        "description": "Street address line 3. Applicable for international address only.",
                        "minLength": 0,
                        "maxLength": 40
                      },
                      "city": {
                        "type": "string",
                        "description": "City name.",
                        "minLength": 1,
                        "maxLength": 20
                      },
                      "APO_FPO_DPO": {
                        "type": "string",
                        "description": "Indicates the type of Military address",
                        "enum": ["APO", "FPO", "DPO"]
                      },
                      "state": {
                        "type": "string",
                        "description": "State code/abbreviation for US.",
                        "maxLength": 2
                      },
                      "province": {
                        "type": "string",
                        "description": "Province/Territory/Region. Province code for Canada address.",
                        "maxLength": 10
                      },
                      "zip": {
                        "type": "string",
                        "description": "zip code.",
                        "maxLength": 8
                      },
                      "country": {
                        "type": "string",
                        "description": "Country code."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number",
                        "maxLength": 10
                      },
                      "secondaryPhoneNumber": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number. Applicable to international address only."
                      },
                      "store": {
                        "type": "boolean",
                        "description": "indicates whether the address is a store address",
                        "default": false
                      },
                      "storeNumber": {
                        "type": "string",
                        "description": "JCPenney store number unique identifier."
                      }
                    }
              }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, Error`)

    + Body


            {
                    "errorCode": "SRV_SESSION_INVALID",
                    "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                      "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                      }
                    },
                    "required": ["errorCode", "errorMessage"]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Shipping Options [/cart/shipping/options]
### Update Shipping Options [PUT]
Applies a shipping method/option on the order. These options are based on the address which is selected for shipping.
Different shipping charges are applicable for different options. For example- Standard Shipping can be free, while there could be some charges for express or truck-able shipping.
##### HTTPS required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

    + Body


            Example to apply `Economy` shipping option to order.
            {
                "type": "ECONOMY"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Shipping Option",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of shipping option selected by customer."
                    }
                },
                "required": [
                    "type"
                ]
            }



+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }
    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Get Shipping Options [GET]
Retrieve list of all shipping options which are available for a particular shipping address.
A flag is available which will indicate which shipping method is selected.
##### HTTPS required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ShippingOption`)


    + Body


            {
                    "shippingOption": [
                        {
                            "type": "STANDARD",
                            "charge": 8,
                            "duration": "4-7 business days",
                            "selected":"true"
                        },
                        {
                            "type": "EXPRESS_ECONOMY",
                            "charge": 15,
                            "duration": "3 business days",
                            "selected":"false"
                        },
                        {
                            "type": "EXPRESS",
                            "charge": 25,
                            "duration": "2 business days",
                            "selected":"false"
                        }
                    ]
                }



    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "array",
                "title": "List of shipping options for the order.",
                "items": {
                    "type": "object",
                    "title": "shipping option",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type of shipping option"
                        },
                        "charge": {
                            "type": "double",
                            "description": "shipping option charge",
                            "default": 0
                        },
                        "duration": {
                            "type": "string",
                            "description": "shipping duration"
                        },
                        "message": {
                            "type": "string",
                            "description": "Message for the shipping option"
                        },
                        "selected": {
                            "type": "boolean",
                            "description": "Indicates whether the shipping option has been selected by the customer.",
                            "default": false
                        }
                    },
                    "required": [
                        "type",
                        "charge",
                        "duration",
                        "selected"
                    ]
                }
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Gift Wrapping [/cart/giftWrapping]
### Add Gift Wrapping [POST]
Adds gift wrapping for items in the bag. Only the eligible items are allowed to be gift-wrapped.
A customer can create multiple gift-wrapped packages for multiple items in the bag and each package is identified by its unique ID.
Customer can also attach a personalized message on the gift-wrapped package.
##### HTTPS required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

    + Body


            [
                {
                    "itemIds": [
                        "ci12312312",
                        "ci343411231"
                    ],
                    "giftWrapType": "HANDWRAPBOX",
                    "to": "API",
                    "from": "Testing",
                    "personalizedMessage": "HAPPY HOLIDAYS"
                }
            ]


    + Schema


                {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "array",
                "title": "list of gift wraps for items in bag",
                "items": {
                    "title": "gift wrap",
                    "type": "object",
                    "properties": {
                        "itemIds": {
                            "type": "array",
                            "title": "list of items to be gift wrapped.",
                            "items": {
                                "title": "item id",
                                "type": "string"
                            }
                        },
                        "to": {
                            "type": "string",
                            "description": "gift recipient details."
                        },
                        "from": {
                            "type": "string",
                            "description": "gifter details"
                        },
                        "personalizedMessage": {
                            "type": "string",
                            "description": "personalized message for the gift wrap."
                        },
                        "giftWrapType": {
                            "type": "string",
                            "description": "type of gift wrap."
                        }
                    },
                    "required": [
                        "itemIds",
                        "giftWrapType"
                    ]
                }
            }




+ Response 201

    + Headers

            Content-Type: application/json
            Location: (required,URL,'https://api.jcpenney.com/v2/bag/giftWrapping')


    + Body

            {

            }
    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body

            The item provided is not eligible for gift wrap.
            All items provided are not eligible for gift wrap.
            Example:
            {
                "errorCode": "SRV_GIFTWRAP_INVALID",
                "errorMessage": "The items are not eligible for gift wrap."
            }

            One or more items provided are not eligible for gift wrap.
            Example:
            {
                "errorCode": "SRV_GIFTWRAP_NOT_ELIGIBLE",
                "errorMessage": "The items ci12312312, ci343411231 are not eligible for gift wrap."
            }

            The provided gift wrap type is invalid.
            Example:
            {
                "errorCode": "SRV_GIFTWRAP_TYPE_INVALID",
                "errorMessage": "The gift wrap type is invalid."
            }



    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)
    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)
    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Get Gift Wrapping [GET]
Retrieves all the gift-wrapped packages on the order.
##### HTTPS required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `GiftWrap`)

    + Body




            [
                {
                    "giftWrapId": "gp231231",
                    "itemIds": [
                        "ci12312312",
                        "ci343411231"
                    ],
                    "giftWrapType": "HANDWRAPBOX",
                    "to": "API",
                    "from": "Testing",
                    "personalizedMessage": "HAPPY HOLIDAYS"
                }
            ]


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "array",
                "title": "list of gift wraps for items in bag",
                "items": {
                    "title": "gift wrap",
                    "type": "object",
                    "properties": {
                        "giftWrapId": {
                            "type": "string",
                            "description": "unique identifier for a gift wrap in the application."
                        },
                        "itemIds": {
                            "type": "array",
                            "title": "list of items to be gift wrapped.",
                            "items": {
                                "title": "item id",
                                "type": "string"
                            }
                        },
                        "to": {
                            "type": "string",
                            "description": "gift recipient details."
                        },
                        "from": {
                            "type": "string",
                            "description": "gifter details"
                        },
                        "personalizedMessage": {
                            "type": "string",
                            "description": "personalized message for the gift wrap."
                        },
                        "giftWrapType": {
                            "type": "string",
                            "description": "type of gift wrap."
                        }
                    },
                    "required": [
                        "giftWrapId",
                        "itemIds",
                        "giftWrapType"
                    ]
                }
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customers session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }





## Gift Wrapping Item [/cart/giftWrapping/{giftWrappingId}]
### Get Gift Wrapping for Item [GET]
Retrieves a single gift-wrapped package associated with a order. It is identified by its unique giftWrappingId.
##### HTTPS required

+ Parameters

    + giftWrappingId (required, String, `11000002 `) ... An unique identifier of the gift wrap.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `GiftWrap`)

    + Body


            {
                "giftWrapId": "gp231231",
                "itemIds": [
                    "ci12312312",
                    "ci343411231"
                ],
                "giftWrapType": "HANDWRAPBOX",
                "to": "API",
                "from": "Testing",
                "personalizedMessage": "HAPPY HOLIDAYS"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "gift wrap",
                "type": "object",
                "properties": {
                    "giftWrapId": {
                        "type": "string",
                        "description": "unique identifier for a gift wrap in the application."
                    },
                    "itemIds": {
                        "type": "array",
                        "title": "list of items to be gift wrapped.",
                        "items": {
                            "title": "item id",
                            "type": "string"
                        }
                    },
                    "to": {
                        "type": "string",
                        "description": "gift recipient details."
                    },
                    "from": {
                        "type": "string",
                        "description": "gifter details"
                    },
                    "personalizedMessage": {
                        "type": "string",
                        "description": "personalized message for the gift wrap."
                    },
                    "giftWrapType": {
                        "type": "string",
                        "description": "type of gift wrap."
                    }
                },
                "required": [
                    "giftWrapId",
                    "itemIds",
                    "giftWrapType"
                ]
            }




+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GIFTWRAP_NOTFOUND",
                "errorMessage": "Gift wrap not found."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Update Gift Wrap for Item [PUT]
Modifies or Edits the contents of the gift wrap in a bag. Edit can be in form of adding/removing items from the package or changing the personalized message.
##### HTTPS required

+ Parameters

    + giftWrappingId (required, String, `11000002 `) ... An unique identifier of the gift wrap.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

    + Body


            {
                "itemIds": [
                    "ci12312312",
                    "ci343411231"
                ],
                "giftWrapType": "HANDWRAPBOX",
                "to": "API",
                "from": "Testing",
                "personalizedMessage": "HAPPY HOLIDAYS"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Gift wrap",
                "properties": {
                    "itemIds": {
                        "type": "array",
                        "title": "list of items to be gift wrapped.",
                        "items": {
                            "title": "item id",
                            "type": "string"
                        }
                    },
                    "to": {
                        "type": "string",
                        "description": "gift recipient details."
                    },
                    "from": {
                        "type": "string",
                        "description": "gifter details"
                    },
                    "personalizedMessage": {
                        "type": "string",
                        "description": "personalized message for the gift wrap."
                    },
                    "giftWrapType": {
                        "type": "string",
                        "description": "type of gift wrap."
                    }
                },
                "required": [
                    "itemIds",
                    "giftWrapType"
                ]
            }





+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }
    + Schema

            {

            }

+ Response 400

    + Headers


            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GIFTWRAP_INVALID",
                "errorMessage": "The items are not eligible for gift wrap."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 401

    + Headers


            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)


    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GIFTWRAP_NOTFOUND",
                "errorMessage": "Gift wrap not found."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Remove Gift Wrap from Item [DELETE]
Deletes a gift wrap package in bag. It is identified by its unique ID.
##### HTTPS required

+ Parameters

    + giftWrappingId (required, String, `11000002 `) ... An unique identifier of the gift wrap.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }
    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)


    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer session is invalid."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GIFTWRAP_NOTFOUND",
                "errorMessage": "Gift wrap not found."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

            Schema:
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




## Payment Methods [/cart/paymentMethods]
### Create Payment Method [POST]
Creates and applies a payment method to order. Two kinds of payment methods are supported which are Credit Cards and Gift Cards.
System will do the basic validations such as Gift Card balance validation or for Credit Card validity.
##### HTTPS required

+ Request (application/json)

   + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

   + Body


            Example to apply a credit card to order.

                    {
                        "type": "MASTERCARD",
                        "cardNumber": "9999999999999999",
                        "expiryYear": 2014,
                        "expiryMonth": 1,
                        "address": {
                                "id": "addr31566431",
                                "firstName": "Alice",
                                "lastName": "Sampleton",
                                "addressLineOne": "5555 Mulholland Drive",
                                "city": "Los Angeles",
                                "state": "CA",
                                "zip": "90068",
                                "country": "US",
                                "phone": "8185551234"
                            }
                    }



            Example to apply a gift card to order.

                    {
                        "type": "GIFTCARD",
                        "cardNumber": "99999999999999999",
                        "id": "1234"
                    }



    + Schema

                  {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "title": "Payment option",
                        "properties": {
                            "idNumber": {
                            "type": "string",
                            "description": "id number for gift cards."
                        },
                        "type": {
                        "type": "string",
                        "description": "Type of card",
                        "enum": [
                            "MASTERCARD",
                            "Visa",
                            "AMEX",
                            "DISCOVER",
                            "JCP",
                            "GIFTCARD"
                                ]
                        },
                        "lastFour": {
                        "type": "string",
                        "description": "Last 4 characters of a card. In case of JCP cards characters 6-10 of the card number.",
                        "minLength": 4,
                        "maxLength": 4
                        },
                        "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month of the card.",
                        "minimum": 1,
                        "maximum": 12
                        },
                        "expiryYear": {
                            "type": "integer",
                            "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date."
                        },
                        "default": {
                            "type": "boolean",
                            "description": "Indicates whether the card is the default payment method for the customer account.",
                            "default": false
                        },
                        "address": {
                            "title": "Address",
                            "type": "object",
                            "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the address record in the application."
                        },
                        "firstName": {
                            "type": "string",
                            "description": "First name for the customer address.",
                            "minLength": 1,
                            "maxLength": 17
                        },
                        "middleInitial": {
                            "type": "string",
                            "description": "Middle initial for the customer address.",
                            "minLength": 1,
                            "maxLength": 1
                        },
                        "lastName": {
                            "type": "string",
                            "description": "Last name for the customer address.",
                            "minLength": 1,
                            "maxLength": 24
                        },
                        "company": {
                            "type": "string",
                            "description": "Company name for the customer address.",
                            "minLength": 1,
                            "maxLength": 23
                        },
                        "addressLineOne": {
                            "type": "string",
                            "description": "Street address line 1.",
                            "minLength": 1,
                            "maxLength": 40
                        },
                        "addressLineTwo": {
                            "type": "string",
                            "description": "Street address line 2.",
                            "minLength": 0,
                            "maxLength": 40
                        },
                        "addressLineThree": {
                            "type": "string",
                            "description": "Street address line 3. Applicable for international address only.",
                            "minLength": 0,
                            "maxLength": 40
                        },
                        "city": {
                            "type": "string",
                            "description": "City name.",
                            "minLength": 1,
                            "maxLength": 20
                        },
                        "militaryAddressType": {
                            "type": "string",
                            "description": "Indicates the type of Military address",
                            "enum": [
                                "APO",
                                "FPO",
                                "DPO"
                            ]
                        },
                        "state": {
                            "type": "string",
                            "description": "State code/abbreviation for US.",
                            "maxLength": 2
                        },
                        "province": {
                            "type": "string",
                            "description": "Province/Territory/Region. Province code for Canada address.",
                            "maxLength": 10
                        },
                        "zip": {
                            "type": "string",
                            "description": "zip code.",
                            "maxLength": 8
                        },
                        "country": {
                            "type": "string",
                            "description": "Country code."
                        },
                        "phone": {
                            "type": "string",
                            "description": "Unformatted 10 digit phone number",
                            "maxLength": 10
                        },
                        "secondaryPhoneNumber": {
                            "type": "string",
                            "description": "Unformatted 10 digit phone number. Applicable to international address only."
                        }
                    },
                    "required": [
                        "country",
                        "firstName",
                        "lastName",
                        "addressLineOne",
                        "city",
                        "state",
                        "zip",
                        "phone"
                        ]
                    }
                },
            "required": [
                "id",
                "type",
                "lastFour",
                "default",
                "address"
                ]
            }





+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }
    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String... (required, String, `ExceptionMessage`)

    + Body

            The input provided is incorrect or not sufficient.
            Example when credit card number is not valid.

                {
                    "errorCode": "SRV_ORDER_CREDITCARDINVALID",
                    "errorMessage": "Enter a valid credit card number."
                }


                Example when expiry month is not provided

                {
                    "errorCode": "SRV_ORDER_EXPIRYMONTH",
                    "errorMessage": "Enter a valid expiry month."
                }


                Example when expiry year is not provided.
                {
                    "errorCode": "SRV_ORDER_EXPIRYYEAR",
                    "errorMessage": "Enter a valid expiry year."
                }


                Example when cvv number is not provided for VISA cards
                {
                    "errorCode": "SRV_ORDER_CVVINVALID",
                    "errorMessage": "Enter a valid CVV number"
                }


                Example when gift card number is not valid.
                {
                    "errorCode": "SRV_ORDER_GCINVALID",
                    "errorMessage": "Enter a valid 19 digit gift card number."
                }



    + Schema



            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "Error code indicating the type of error."
            },
                "errorMessage": {
                    "type": "string",
                    "description": "Descriptive message for the error in the system."
                }
            },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }






+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: String... (required, String, `ExceptionMessage`)

    + Body


            {
                        "errorCode": "SRV_SESSION_INVALID",
                        "errorMessage": "The customer session is invalid."
            }


    + Schema

                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                    "type": "string",
                    "description": "Error code indicating the type of error."
                    },
                "errorMessage": {
                    "type": "string",
                    "description": "Descriptive message for the error in the system."
                }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }






+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

### Get Payment Methods [GET]
Retrieves all the Payment Methods applied on order. If two Gift cards and a credit card is applied on the order, this method will return all the three.
##### HTTPS required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'PaymentMethods[]')

    + Body


                    [
                        {
                        "id": "pg343423423",
                        "type": "MASTERCARD",
                        "lastFour": "9999",
                        "expiryYear": 2014,
                        "expiryMonth": 1,
                        "address": {
                            "id": "addr2345311",
                            "firstName": "Alice",
                            "lastName": "Sampleton",
                            "addressLine1": "5555 Mulholland Drive",
                            "city": "Los Angeles",
                            "state": "CA",
                            "zip": "90068",
                            "country": "US",
                            "phone": "8185551234"
                            },
                        {
                            "type": "GIFTCARD",
                            "lastFour": "9999"
                        }
                    ]



    + Schema


                   {
                "title": "List of payment methods ",
                "type": "array",
                "items": {
                "type": "object",
                "title": "Payment option",
                    "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the payment method."
                        },
                    "type": {
                        "type": "string",
                        "description": "Type of card",
                        "enum": [
                            "MASTERCARD",
                            "Visa",
                            "AMEX",
                            "DISCOVER",
                            "JCP"
                            ]
                        },
                        "lastFour": {
                        "type": "string",
                        "description": "Last 4 characters of a card. In case of JCP cards characters 6-10 of the card number.",
                        "minLength": 4,
                        "maxLength": 4
                        },
                        "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month of the card.",
                        "minimum": 1,
                        "maximum": 12
                        },
                        "expiryYear": {
                        "type": "integer",
                        "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date."
                        },
                        "default": {
                        "type": "boolean",
                        "description": "Indicates whether the card is the default payment method for the customer account.",
                        "default": false
                        },
                        "address": {
                        "title": "Address",
                        "type": "object",
                        "properties": {
                        "id": {
                        "type": "string",
                        "description": "Unique identifier for the address record in the application."
                        },
                        "firstName": {
                        "type": "string",
                        "description": "First name for the customer address.",
                        "minLength": 1,
                        "maxLength": 17
                        },
                        "middleInitial": {
                        "type": "string",
                        "description": "Middle initial for the customer address.",
                        "minLength": 1,
                        "maxLength": 1
                        },
                        "lastName": {
                        "type": "string",
                        "description": "Last name for the customer address.",
                        "minLength": 1,
                        "maxLength": 24
                        },
                        "company": {
                        "type": "string",
                        "description": "Company name for the customer address.",
                        "minLength": 1,
                        "maxLength": 23
                        },
                        "addressLineOne": {
                        "type": "string",
                        "description": "Street address line 1.",
                        "minLength": 1,
                        "maxLength": 40
                        },
                        "addressLineTwo": {
                        "type": "string",
                        "description": "Street address line 2.",
                        "minLength": 0,
                        "maxLength": 40
                        },
                        "addressLineThree": {
                        "type": "string",
                        "description": "Street address line 3. Applicable for international address only.",
                        "minLength": 0,
                        "maxLength": 40
                        },
                        "city": {
                        "type": "string",
                        "description": "City name.",
                        "minLength": 1,
                        "maxLength": 20
                        },
                        "militaryAddressType": {
                        "type": "string",
                        "description": "Indicates the type of Military address",
                        "enum": [
                            "APO",
                            "FPO",
                            "DPO"
                        ]
                        },
                        "state": {
                        "type": "string",
                        "description": "State code/abbreviation for US.",
                        "maxLength": 2
                        },
                        "province": {
                        "type": "string",
                        "description": "Province/Territory/Region. Province code for Canada address.",
                        "maxLength": 10
                        },
                        "zip": {
                        "type": "string",
                        "description": "zip code.",
                        "maxLength": 8
                        },
                        "country": {
                        "type": "string",
                        "description": "Country code."
                        },
                        "phone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number",
                        "maxLength": 10
                        },
                        "secondaryPhoneNumber": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number. Applicable to international address only."
                        }
                    },
                    "required": [
                        "country",
                        "firstName",
                        "lastName",
                        "addressLineOne",
                        "city",
                        "state",
                        "zip",
                        "phone"
                    ]
                }
            },
                "required": [
                    "id",
                    "type",
                    "last4",
                    "default",
                    "address"
                ]
                }
            }






+ Response 401

        The customer needs to be authenticated to perform this operation. DPSecureCookie value provided does not match the value in the session.

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                    "errorCode": "SRV_SESSION_INVALID",
                    "errorMessage": "The customer session is invalid."
            }


    + Schema



            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                        "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
            }
            },
                    "required": [
                        "errorCode",
                        "errorMessage"
                        ]
                }






+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


## Payment Method [/cart/paymentMethods/{paymentMethodId}]
### Get Payment Method [GET]
Retrieves a particular payment method identified by its unique ID.
##### HTTPS required

+ Parameters

    + paymentMethodId (required, string, `pg14110233`) ... Payment Method Id `paymentMethodId` of the order.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: String... (required, String, `PaymentMethod`)

    + Body


                    {
                    "id": "pg12678657",
                    "type": "MASTERCARD",
                    "cardNumber": "9999999999999999",
                    "expiryYear": 2014,
                    "expiryMonth": 1,
                    "address": {
                        "id": "addr31566431",
                        "firstName": "Alice",
                        "lastName": "Sampleton",
                        "addressLineOne": "5555 Mulholland Drive",
                        "city": "Los Angeles",
                        "state": "CA",
                        "zip": "90068",
                        "country": "US",
                        "phone": "8185551234"
                        }
                    }



    + Schema


                   {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "title": "Payment option",
                    "properties": {
                    "id": {
                    "type": "string",
                    "description": "Unique identifier for the payment method"
                    },
                    "type": {
                    "type": "string",
                    "description": "Type of card",
                    "enum": [
                        "MASTERCARD",
                        "Visa",
                        "AMEX",
                        "DISCOVER",
                        "JCP",
                        "GIFTCARD"
                        ]
                    },
                    "lastFour": {
                        "type": "string",
                        "description": "Last 4 characters of a card. In case of JCP cards characters 6-10 of the card number.",
                        "minLength": 4,
                        "maxLength": 4
                        },
                    "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month of the card.",
                        "minimum": 1,
                        "maximum": 12
                        },
                    "expiryYear": {
                        "type": "integer",
                        "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date."
                        },
                    "default": {
                        "type": "boolean",
                        "description": "Indicates whether the card is the default payment method for the customer account.",
                        "default": false
                        },
                    "address": {
                        "title": "Address",
                        "type": "object",
                    "properties": {
                        "id": {
                        "type": "string",
                        "description": "Unique identifier for the address record in the application."
                            },
                    "firstName": {
                        "type": "string",
                        "description": "First name for the customer address.",
                        "minLength": 1,
                        "maxLength": 17
                        },
                    "middleInitial": {
                        "type": "string",
                        "description": "Middle initial for the customer address.",
                        "minLength": 1,
                        "maxLength": 1
                        },
                    "lastName": {
                        "type": "string",
                        "description": "Last name for the customer address.",
                        "minLength": 1,
                        "maxLength": 24
                        },
                    "company": {
                        "type": "string",
                        "description": "Company name for the customer address.",
                        "minLength": 1,
                        "maxLength": 23
                        },
                    "addressLineOne": {
                        "type": "string",
                        "description": "Street address line 1.",
                        "minLength": 1,
                        "maxLength": 40
                        },
                    "addressLineTwo": {
                        "type": "string",
                        "description": "Street address line 2.",
                        "minLength": 0,
                        "maxLength": 40
                        },
                    "addressLineThree": {
                        "type": "string",
                        "description": "Street address line 3. Applicable for international address only.",
                        "minLength": 0,
                        "maxLength": 40
                        },
                    "city": {
                        "type": "string",
                        "description": "City name.",
                        "minLength": 1,
                        "maxLength": 20
                        },
                    "militaryAddressType": {
                        "type": "string",
                        "description": "Indicates the type of Military address",
                        "enum": [
                            "APO",
                            "FPO",
                            "DPO"
                        ]
                        },
                    "state": {
                        "type": "string",
                        "description": "State code/abbreviation for US.",
                        "maxLength": 2
                        },
                    "province": {
                        "type": "string",
                        "description": "Province/Territory/Region. Province code for Canada address.",
                        "maxLength": 10
                        },
                    "zip": {
                        "type": "string",
                        "description": "zip code.",
                        "maxLength": 8
                        },
                    "country": {
                        "type": "string",
                        "description": "Country code."
                        },
                    "phone": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number",
                        "maxLength": 10
                        },
                    "secondaryPhoneNumber": {
                        "type": "string",
                        "description": "Unformatted 10 digit phone number. Applicable to international address only."
                        }
                    },
                    "required": [
                        "country",
                        "firstName",
                        "lastName",
                        "addressLineFour",
                        "city",
                        "state",
                        "zip",
                        "phone"
                        ]
                    }
                },
                "required": [
                        "id",
                        "type",
                        "lastFour",
                        "default",
                        "address"
                        ]
                        }






+ Response 404

        The payment method is not found or not available for the customer to view.

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                    "errorCode": "SRV_PAYMENTMETHOD_NOTFOUND",
                    "errorMessage": "Payment method not found."
            }



    + Schema


            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "ExceptionMessage",
            "description": "Represents the error in the system.",
            "properties": {
            "errorCode": {
            "type": "string",
            "description": "Error code indicating the type of error."
            },
            "errorMessage": {
            "type": "string",
            "description": "Descriptive message for the error in the system."
            }
            },
            "required": [
                "errorCode",
                "errorMessage"
            ]
            }






+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }

### Update Payment Method [PUT]
Updates a Payment Method identified by its unique ID. An updated can be in form of new credit card type, expiry date change, etc.
##### HTTPS required

+ Parameters

    + paymentMethodId (required, string, `pg14110233`) ... Payment Method Id `paymentMethodId` of the order.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

    + Body

            {
                "type": "MASTERCARD",
                "cardNumber": "9999999999999999",
                "expiryYear": 2014,
                "expiryMonth": 1,
                "addressId": "addr31566431"
            }
    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifer for the payment method"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of card",
                        "enum": [
                            "MASTERCARD",
                            "Visa",
                            "AMEX",
                            "DISCOVER",
                            "JCP",
                            "GIFTCARD"
                        ]
                    },
                    "last4": {
                        "type": "string",
                        "description": "Last 4 charcters of a card. In case of JCP cards characters 6-10 of the card number",
                        "minLength": "4",
                        "maxLength": "4"
                    },
                    "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month of the card",
                        "minimum": "1",
                        "maximum": "12"
                    },
                    "expiryYear": {
                        "type": "integer",
                        "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date"
                    },
                    "default": {
                        "type": "booelan",
                        "description": "Indicates whether the card is the default payment method for the customer account",
                        "default": "false"
                    },
                    "address":{
                        "title": "ExceptionMessage",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique identifer for the payment method"
                            },
                            "firstName": {
                                "type": "string",
                                "description": "First name for the customer address",
                                "minLength": "1",
                                "maxLength": "17"
                            },
                            "middleInitial": {
                                "type": "string",
                                "description": "Middle initial for the customer address",
                                "minLength": "1",
                                "maxLength": "1"
                            },
                            "lastName": {
                                "type": "string",
                                "description": "Last name for the customer address",
                                "minLength": "1",
                                "maxLength": "24"
                            },
                            "company": {
                                "type": "string",
                                "description": "Company name for the customer address",
                                "minLength": "1",
                                "maxLength": "23"
                            },
                            "addressLine1": {
                                "type": "string",
                                "description": "Street address line 1",
                                "minLength": "1",
                                "maxLength": "40"
                            },
                            "addressLine2": {
                                "type": "string",
                                "description": "Street address line 2",
                                "minLength": "1",
                                "maxLength": "40"
                            },
                            "addressLine3": {
                                "type": "string",
                                "description": "Street address line 3.Applicable for international address only",
                                "minLength": "1",
                                "maxLength": "40"
                            },
                            "city": {
                                "type": "string",
                                "description": "City name",
                                "minLength": "1",
                                "maxLength": "20"
                            },
                            "APO_FPO_DPO": {
                                "type": "string",
                                "description": "Indicates the type of Military address",
                                "enum": [
                                     "APO",
                                     "FPO",
                                     "DPO"
                                ]
                            },
                            "state": {
                                "type": "string",
                                "description": "State code/abbreviation for US",
                                "maxLength": "2"
                            },
                            "province": {
                                "type": "string",
                                "description": "Province/Teritory/Region. Province code for Canada address",
                                "maxLength": "10"
                            },
                            "zip": {
                                "type": "string",
                                "description": "zip code",
                                "maxLength": "8"
                            },
                            "country": {
                                "type": "string",
                                "description": "Country code"
                            },
                            "phone": {
                                "type": "string",
                                "description": "Unformatted 10 digit phone number",
                                "maxLength": "10"
                            },
                            "secondaryPhoneNumber": {
                                "type": "string",
                                "description": "Unformatted 10 digit phone number. Appicable to international address only"
                            }
                        },
                        "required": [
                                "country",
                                "firstName",
                                "lastName",
                                "addressLine1",
                                "city",
                                "state",
                                "zip",
                                "phone"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "last4",
                    "default",
                    "address"
                ]
            }


+ Response 200


    + Headers

            Content-Type: application/json

    + Body

            {

            }
    + Schema

            {

            }

+ Response 400

        The required mandatory field is not provided.


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_ADDRESS_INVLAID",
                "errorMessage": "Please enter a valid billing address"
            }


    + Schema

                {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "Error code indicating the type of error."
                    },
                "errorMessage": {
                    "type": "string",
                    "description": "Descriptive message for the error in the system."
                }
            },
                "required": [
                "errorCode",
                "errorMessage"
                ]
            }





+ Response 404

        The payment method is not found or not available for the customer to view.


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body

            The input provided is incorrect or not sufficient.
            {
                    "errorCode": "SRV_PAYMENTMETHOD_NOTFOUND",
                    "errorMessage": "Payment method not found."
            }


    + Schema

            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "ExceptionMessage",
            "description": "Represents the error in the system.",
            "properties": {
            "errorCode": {
            "type": "string",
            "description": "Error code indicating the type of error."
            },
            "errorMessage": {
            "type": "string",
            "description": "Descriptive message for the error in the system."
            }
            },
            "required": [
                "errorCode",
                "errorMessage"
            ]
            }





+ Response 500



    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }


### Delete Payment Method [DELETE]
Deletes a Payment Method identified by unique ID. Only a Gift Card can be deleted with this method, credit card cannot be deleted.
##### HTTPS required

+ Parameters

    + paymentMethodId (required, string, `pg14110233`) ... Payment Method Id `paymentMethodId` of the order.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {

            }
    + Schema

            {

            }

+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                    "errorCode": "SRV_PAYMENTMETHOD_NOTFOUND",
                    "errorMessage": "Payment method not found."
            }


    + Schema


            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "ExceptionMessage",
            "description": "Represents the error in the system.",
            "properties": {
            "errorCode": {
            "type": "string",
            "description": "Error code indicating the type of error."
            },
            "errorMessage": {
            "type": "string",
            "description": "Descriptive message for the error in the system."
            }
            },
            "required": [
                "errorCode",
                "errorMessage"
            ]
            }






+ Response 500


    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                        "errorCode": "SRV_GENERIC_ERROR",
                        "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


                {
                "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                            "errorCode": {
                                    "type": "string",
                                    "description": "Error code indicating the type of error."
                                },
                            "errorMessage": {
                                    "type": "string",
                                    "description": "Descriptive message for the error in the system."
                                }
                            },
                    "required": [
                        "errorCode",
                        "errorMessage"
                        ]
                    }






## Order Email [/cart/paymentMethods/email]
### Update Order Email [PUT]
Applies the email address to which the Order Confirmation is to be sent for Guest Customers. For registered customers, the email address provided on the JCPenney customer account will be utilized.
##### HTTPS required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

    + Body


            {
                "email": "betty@example.com"
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Order Email address",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address to which the order information is to be sent."
                    }
                },
                "required": [
                    "email"
                ]
            }



+ Response 200

    + Headers

            Content-Type: application/json
            Location: (required, URL, 'http://api.jcpenney.com/v2/cart/paymentMethods/email')

    + Body

            {

            }
    + Schema

            {

            }

+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 403

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_COMMERCE_OPERATIONFORBIDDEN",
                "errorMessage": "The operation is forbidden for registered customers."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Get email [GET]
Retrieves email associated to the current order.
##### HTTPS required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + Headers

            Content-Type: application/json
            X-Data-Type: String... (required, String, `Email`)

    + Body


            {
                        "email": "betty@example.com"
            }


    + Schema

                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "Order Email address",
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "description": "Email address to which the order information is to be sent."
                            }
                        },

                        "required": [
                            "email"
                        ]
                    }


+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                    "errorCode": "SRV_SESSION_INVALID",
                    "errorMessage": "The customer's session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }






+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                        "errorCode": "SRV_GENERIC_ERROR",
                        "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


                {
                "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                            "errorCode": {
                                    "type": "string",
                                    "description": "Error code indicating the type of error."
                                },
                            "errorMessage": {
                                    "type": "string",
                                    "description": "Descriptive message for the error in the system."
                                }
                            },
                    "required": [
                        "errorCode",
                        "errorMessage"
                        ]
                    }






## Order Review and Submit [/cart]
### Get Order Details in the Session [GET]
Retrieves order details for the current session. This will return all the items available in the bag, its Shipping Address and Method, Gift Wrap, Payment Method.

+ Request

    + Headers

            X-Currency: (String, default:`USD`)
            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

   + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `Order`)
    + Body


            Example of retrieving the order details using HTTP Protocol
            http://api.jcpenney.com/v2/cart

            {
                "count": 3,
                "total": 65.97,
                "roundUp": false,
                "itemSubTotal": 65.97,
                "subTotal": 65.97,
                "estimatedShippingCharges": [
                    {
                        "type": "SHIP_TO_HOME",
                        "charge": 8
                    },
                    {
                        "type": "SHIP_TO_STORE",
                        "charge": 0
                    }
                ],
                "items": [
                    {
                        "id": "ci11739009654",
                        "productNumber": "FC513-1507D",
                        "productUrl": "http://api.jcpenney.com/v2/products/5131507",
                        "name": " St. John's Bay?Flannel Shirt",
                        "imageUrl": "https://zoom.jcpenney.com/is/image/DP0729201318152867C.tif",
                        "activePrice": 14.99,
                        "originalPrice": 30,
                        "sale": true,
                        "savings": 15.01,
                        "quantity": 2,
                        "totalWithoutDiscount": 29.98,
                        "total": 29.98,
                        "inventoryStatus": "INSTOCK",
                        "attributes": [
                            {
                                "type": "size",
                                "value": "Medium"
                            },
                            {
                                "type": "color",
                                "value": "Charcoal"
                            }
                        ]
                    },
                    {
                        "id": "ci11739009653",
                        "productNumber": "FC251-1201D",
                        "productUrl": "http://api.jcpenney.com/v2/products/2511201",
                        "name": " Liz Claiborne Ponte Sheath Dress",
                        "imageUrl": "https://zoom.jcpenney.com/is/image/DP1003201318301485C.tif",
                        "activePrice": 35.99,
                        "originalPrice": 60,
                        "sale": true,
                        "savings": 24.01,
                        "quantity": 1,
                        "totalWithoutDiscount": 35.99,
                        "total": 35.99,
                        "inventoryStatus": "INSTOCK",
                        "attributes": [
                            {
                                "type": "size",
                                "value": "8"
                            },
                            {
                                "type": "color",
                                "value": "Black"
                            }
                        ]
                    }
                ]
            }

            Example of order with shipping address and promotion when executed using HTTPS protocol
            https://api.jcpenney.com/v2/cart

            {
                "count": 3,
                "total": 56.07,
                "roundUp": false,
                "itemSubTotal": 65.97,
                "adjustmentsTotal": 9.9,
                "subTotal": 56.07,
                "adjustments": [
                    {
                        "type": "COUPON",
                        "code": "SHOPDEC",
                        "amount": 9.9
                    }
                ],
                "estimatedShippingCharges": [
                    {
                        "type": "SHIP_TO_HOME",
                        "charge": 8
                    },
                    {
                        "type": "SHIP_TO_STORE",
                        "charge": 0
                    }
                ],
                "items": [
                    {
                        "id": "ci11739009654",
                        "productNumber": "FC513-1507D",
                        "productUrl": "http://api.jcpenney.com/v2/products/5131507",
                        "name": " St. John's Bay?Flannel Shirt",
                        "imageUrl": "https://zoom.jcpenney.com/is/image/DP0729201318152867C.tif",
                        "activePrice": 14.99,
                        "originalPrice": 30,
                        "sale": true,
                        "savings": 15.01,
                        "quantity": 2,
                        "totalWithoutDiscount": 29.98,
                        "adjustmentsTotal": 4.5,
                        "adjustments": [
                            {
                                "type": "COUPON",
                                "code": "SHOPDEC",
                                "amount": 4.5
                            }
                        ],
                        "total": 25.48,
                        "inventoryStatus": "INSTOCK",
                        "attributes": [
                            {
                                "type": "size",
                                "value": "Medium"
                            },
                            {
                                "type": "color",
                                "value": "Charcoal"
                            }
                        ]
                    },
                    {
                        "id": "ci11739009653",
                        "productNumber": "FC251-1201D",
                        "productUrl": "http://api.jcpenney.com/v2/products/2511201",
                        "name": " Liz Claiborne Ponte Sheath Dress",
                        "imageUrl": "https://zoom.jcpenney.com/is/image/DP1003201318301485C.tif",
                        "activePrice": 35.99,
                        "originalPrice": 60,
                        "sale": true,
                        "savings": 24.01,
                        "quantity": 1,
                        "totalWithoutDiscount": 35.99,
                        "adjustmentsTotal": 5.4,
                        "adjustments": [
                            {
                                "type": "COUPON",
                                "code": "SHOPDEC",
                                "amount": 5.4
                            }
                        ],
                        "total": 35.99,
                        "inventoryStatus": "INSTOCK",
                        "attributes": [
                            {
                                "type": "size",
                                "value": "8"
                            },
                            {
                                "type": "color",
                                "value": "Black"
                            }
                        ]
                    }
                ],
                "shipping": {
                    "addressId": "addr13212354",
                    "firstName": "Alice",
                    "lastName": "Sampleton",
                    "addressLine1": "5555 Mulholland Drive",
                    "city": "Los Angeles",
                    "state": "CA",
                    "country": "US",
                    "zip": "90068",
                    "phoneNumber": "8185551234",
                    "store": false
                },
                "shippingOption": {
                    "type": "STANDARD",
                    "charge": 8,
                    "duration": "4-7 business days",
                    "selected": true
                },
                "paymentMethods": [
                    {
                        "type": "MASTERCARD",
                        "last4": "9999",
                        "expiryYear": 2014,
                        "expiryMonth": 1,
                        "address": {
                            "addressId": "addr13212354",
                            "firstName": "Alice",
                            "lastName": "Sampleton",
                            "addressLine1": "5555 Mulholland Drive",
                            "city": "Los Angeles",
                            "state": "CA",
                            "zip": "90068",
                            "country": "US",
                            "phone": "8185551234"
                        }
                    }
                ]
            }


    + Schema


            {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Shopping bag",
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "description": "email address for the bag."
                        },
                        "count": {
                            "type": "integer",
                            "description": "count of products/items in the bag",
                            "default": 2
                        },
                        "total": {
                            "type": "double",
                            "description": "order total",
                            "default": 0
                        },
                        "roundUp": {
                            "type": "boolean",
                            "description": "Indicates whether the order total is to be rounded up to the nearest dollar for jcp cares charity.",
                            "default": "false"
                        },
                        "roundUpAmount": {
                            "type": "double",
                            "description": "Amount rounded up for charity from order total.",
                            "default": 0
                        },
                        "itemSubTotal": {
                            "type": "double",
                            "description": "Item subtotal or merchandise subtotal for the order.",
                            "default": 0
                        },
                        "giftWrapCharge": {
                            "type": "double",
                            "description": "Amount charged for gift wrapping the items.",
                            "default": 0
                        },
                        "adjustmentsTotal": {
                            "type": "double",
                            "description": "Sum of adjustments for the order based on promotions/reward certificates applied to the order.",
                            "default": 0
                        },
                        "adjustments": {
                            "type": "array",
                            "title": "List of adjustments for the item",
                            "items": {
                                "type": "object",
                                "title": "adjustment",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type of adjustment",
                                        "enum": [
                                            "COUPON",
                                            "REWARDS"
                                        ]
                                    },
                                    "code": {
                                        "type": "string",
                                        "description": "Promotion code/ rewards certificate code"
                                    },
                                    "amount": {
                                        "type": "double",
                                        "description": "Reward/promo amount adjusted.",
                                        "default": 0
                                    },
                                    "serialNumber": {
                                        "type": "string",
                                        "description": "Serial number for reward certificate."
                                    }
                                },
                                "required": [
                                    "type",
                                    "code",
                                    "amount"
                                ]
                            }
                        },
                        "tax": {
                            "type": "double",
                            "description": "tax on order. Because JCPenney does business in all 50 states, we are required by law to collect all state and local sales taxes, whether the sale was made in on jcp.com, in-store or by phone.",
                            "default": 0
                        },
                        "estimatedShippingCharges": {
                            "type": "array",
                            "title": "list of shipping charges applicable to order.",
                            "items": {
                                "title": "shipping option",
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Type of shipping charge",
                                        "enum": [
                                            "SHIP_TO_HOME",
                                            "SHIP_TO_STORE",
                                            "SHIPPING_AND_HANDLING"
                                        ]
                                    },
                                    "charge": {
                                        "type": "double",
                                        "description": "Shipping charge for the shipping option.",
                                        "default": 0
                                    }
                                },
                                "required": [
                                    "type",
                                    "charge"
                                ]
                            }
                        },
                        "subTotal": {
                            "type": "double",
                            "description": "order sub-total . i.e., itemSubtotal - adjustmentsTotal",
                            "default": 0
                        },
                        "shipping": {
                            "title": "Shipping address on order",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier for the address record in the application."
                                },
                                "firstName": {
                                    "type": "string",
                                    "description": "First name for the customer address.",
                                    "minLength": 1,
                                    "maxLength": 17
                                },
                                "middleInitial": {
                                    "type": "string",
                                    "description": "Middle initial for the customer address.",
                                    "minLength": 1,
                                    "maxLength": 1
                                },
                                "lastName": {
                                    "type": "string",
                                    "description": "Last name for the customer address.",
                                    "minLength": 1,
                                    "maxLength": 24
                                },
                                "company": {
                                    "type": "string",
                                    "description": "Company name for the customer address.",
                                    "minLength": 1,
                                    "maxLength": 23
                                },
                                "addressLine1": {
                                    "type": "string",
                                    "description": "Street address line 1.",
                                    "minLength": 1,
                                    "maxLength": 40
                                },
                                "addressLine2": {
                                    "type": "string",
                                    "description": "Street address line 2.",
                                    "minLength": 0,
                                    "maxLength": 40
                                },
                                "addressLine3": {
                                    "type": "string",
                                    "description": "Street address line 3. Applicable for international address only.",
                                    "minLength": 0,
                                    "maxLength": 40
                                },
                                "city": {
                                    "type": "string",
                                    "description": "City name.",
                                    "minLength": 1,
                                    "maxLength": 20
                                },
                                "APO_FPO_DPO": {
                                    "type": "string",
                                    "description": "Indicates the type of Military address",
                                    "enum": [
                                        "APO",
                                        "FPO",
                                        "DPO"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "description": "State code/abbreviation for US.",
                                    "maxLength": 2
                                },
                                "province": {
                                    "type": "string",
                                    "description": "Province/Territory/Region. Province code for Canada address.",
                                    "maxLength": 10
                                },
                                "zip": {
                                    "type": "string",
                                    "description": "zip code.",
                                    "maxLength": 8
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Country code."
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Unformatted 10 digit phone number",
                                    "maxLength": 10
                                },
                                "secondaryPhoneNumber": {
                                    "type": "string",
                                    "description": "Unformatted 10 digit phone number. Applicable to international address only."
                                },
                                "store": {
                                    "type": "boolean",
                                    "description": "indicates whether the address is a store address",
                                    "default": false
                                },
                                "storeNumber": {
                                    "type": "string",
                                    "description": "JCPenney store number unique identifier."
                                }
                            },
                            "required": [
                                "country",
                                "firstName",
                                "lastName",
                                "addressLine1",
                                "city",
                                "state",
                                "zip",
                                "phone"
                            ]
                        },
                        "shippingOption": {
                            "type": "array",
                            "title": "The selected shipping options for the order.",
                            "items": {
                                "type": "object",
                                "title": "shipping option",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Type of shipping option"
                                    },
                                    "charge": {
                                        "type": "double",
                                        "description": "shipping option charge",
                                        "default": 0
                                    },
                                    "duration": {
                                        "type": "string",
                                        "description": "shipping duration"
                                    },
                                    "selected": {
                                        "type": "boolean",
                                        "description": "Indicates whether the shipping option has been selected by the customer.",
                                        "default": false
                                    }
                                },
                                "required": [
                                    "type",
                                    "charge",
                                    "duration",
                                    "selected"
                                ]
                            }
                        },
                        "paymentMethods": {
                            "title": "List of payment methods ",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "Payment option",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Type of card",
                                        "enum": [
                                            "MASTERCARD",
                                            "Visa",
                                            "AMEX",
                                            "DISCOVER",
                                            "JCP"
                                        ]
                                    },
                                    "last4": {
                                        "type": "string",
                                        "description": "Last 4 characters of a card. In case of JCP cards characters 6-10 of the card number.",
                                        "minLength": 4,
                                        "maxLength": 4
                                    },
                                    "expiryMonth": {
                                        "type": "integer",
                                        "description": "Expiry month of the card.",
                                        "minimum": 1,
                                        "maximum": 12
                                    },
                                    "expiryYear": {
                                        "type": "integer",
                                        "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date."
                                    },
                                    "default": {
                                        "type": "boolean",
                                        "description": "Indicates whether the card is the default payment method for the customer account.",
                                        "default": false
                                    },
                                    "address": {
                                        "title": "Address",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Unique identifier for the address record in the application."
                                            },
                                            "firstName": {
                                                "type": "string",
                                                "description": "First name for the customer address.",
                                                "minLength": 1,
                                                "maxLength": 17
                                            },
                                            "middleInitial": {
                                                "type": "string",
                                                "description": "Middle initial for the customer address.",
                                                "minLength": 1,
                                                "maxLength": 1
                                            },
                                            "lastName": {
                                                "type": "string",
                                                "description": "Last name for the customer address.",
                                                "minLength": 1,
                                                "maxLength": 24
                                            },
                                            "company": {
                                                "type": "string",
                                                "description": "Company name for the customer address.",
                                                "minLength": 1,
                                                "maxLength": 23
                                            },
                                            "addressLine1": {
                                                "type": "string",
                                                "description": "Street address line 1.",
                                                "minLength": 1,
                                                "maxLength": 40
                                            },
                                            "addressLine2": {
                                                "type": "string",
                                                "description": "Street address line 2.",
                                                "minLength": 0,
                                                "maxLength": 40
                                            },
                                            "addressLine3": {
                                                "type": "string",
                                                "description": "Street address line 3. Applicable for international address only.",
                                                "minLength": 0,
                                                "maxLength": 40
                                            },
                                            "city": {
                                                "type": "string",
                                                "description": "City name.",
                                                "minLength": 1,
                                                "maxLength": 20
                                            },
                                            "APO_FPO_DPO": {
                                                "type": "string",
                                                "description": "Indicates the type of Military address",
                                                "enum": [
                                                    "APO",
                                                    "FPO",
                                                    "DPO"
                                                ]
                                            },
                                            "state": {
                                                "type": "string",
                                                "description": "State code/abbreviation for US.",
                                                "maxLength": 2
                                            },
                                            "province": {
                                                "type": "string",
                                                "description": "Province/Territory/Region. Province code for Canada address.",
                                                "maxLength": 10
                                            },
                                            "zip": {
                                                "type": "string",
                                                "description": "zip code.",
                                                "maxLength": 8
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Country code."
                                            },
                                            "phone": {
                                                "type": "string",
                                                "description": "Unformatted 10 digit phone number",
                                                "maxLength": 10
                                            },
                                            "secondaryPhoneNumber": {
                                                "type": "string",
                                                "description": "Unformatted 10 digit phone number. Applicable to international address only."
                                            }
                                        },
                                        "required": [
                                            "country",
                                            "firstName",
                                            "lastName",
                                            "addressLine1",
                                            "city",
                                            "state",
                                            "zip",
                                            "phone"
                                        ]
                                    }
                                },
                                "required": [
                                    "id",
                                    "type",
                                    "last4",
                                    "default",
                                    "address"
                                ]
                            }
                        },
                        "items": {
                            "type": "array",
                            "title": "list of items in bag",
                            "items": {
                                "title": "Item",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "unique identifier for the item in the bag."
                                    },
                                    "productNumber": {
                                        "type": "string",
                                        "description": "Formatted product number."
                                    },
                                    "productUrl": {
                                        "type": "URL",
                                        "description": "URL to the catalog service to retrieve product details."
                                    },
                                    "productId": {
                                        "type": "string",
                                        "description": "11-digit SKU id for the item."
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the product."
                                    },
                                    "imageUrl": {
                                        "type": "string",
                                        "description": "URL to the image assigned to the product."
                                    },
                                    "activePrice": {
                                        "type": "double",
                                        "description": "active/current price for the product.",
                                        "default": 0
                                    },
                                    "originalPrice": {
                                        "type": "double",
                                        "description": "original price for the product.",
                                        "double": 0
                                    },
                                    "sale": {
                                        "type": "boolean",
                                        "description": "Indicates that the product is available on clearance.",
                                        "default": false
                                    },
                                    "savings": {
                                        "type": "double",
                                        "description": "Savings on the item.",
                                        "default": 0
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "description": "Number of items added to the bag",
                                        "default": 1
                                    },
                                    "totalWithoutDiscount": {
                                        "type": "double",
                                        "description": "Item total without discounts or adjustments.",
                                        "default": 0
                                    },
                                    "adjustmentsTotal": {
                                        "type": "double",
                                        "description": "Adjustments total for the item.",
                                        "default": 0
                                    },
                                    "adjustments": {
                                        "type": "array",
                                        "title": "List of adjustments for the item",
                                        "items": {
                                            "type": "object",
                                            "title": "adjustment",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "type of adjustment",
                                                    "enum": [
                                                        "COUPON",
                                                        "REWARDS"
                                                    ]
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "description": "Promotion code/ rewards certificate code"
                                                },
                                                "amount": {
                                                    "type": "double",
                                                    "description": "Reward/promo amount adjusted.",
                                                    "default": 0
                                                },
                                                "serialNumber": {
                                                    "type": "string",
                                                    "description": "Serial number for reward certificate."
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "code",
                                                "amount"
                                            ]
                                        }
                                    },
                                    "total": {
                                        "type": "double",
                                        "description": "item total.",
                                        "default": 0
                                    },
                                    "inventoryStatus": {
                                        "type": "string",
                                        "description": "Inventory status of the item."
                                    },
                                    "attributes": {
                                        "type": "array",
                                        "title": "List of attributes for the item",
                                        "items": {
                                            "title": "Attribute",
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of attribute"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "value of the attribute."
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "value"
                                            ]
                                        }
                                    },
                                    "parentId": {
                                        "type": "string",
                                        "description": "id of the parent item in the bag. Applicable to items with service agreements only."
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "activePrice",
                                    "originalPrice",
                                    "sale",
                                    "inventoryStatus",
                                    "description",
                                    "quantity",
                                    "productNumber",
                                    "productId",
                                    "savings",
                                    "totalWithoutDiscount",
                                    "adjustmentsTotal",
                                    "total"
                                ]
                            }
                        },
                        "giftWraps": {
                            "type": "array",
                            "title": "list of gift wraps for items in bag",
                            "items": {
                                "title": "gift wrap",
                                "type": "object",
                                "properties": {
                                    "itemIds": {
                                        "type": "array",
                                        "title": "list of items to be gift wrapped.",
                                        "items": {
                                            "title": "item id",
                                            "type": "string"
                                        }
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "gift recipient details."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "gifter details"
                                    },
                                    "personalizedMessage": {
                                        "type": "string",
                                        "description": "personalized message for the gift wrap."
                                    },
                                    "giftWrapType": {
                                        "type": "string",
                                        "description": "type of gift wrap."
                                    }
                                },
                                "required": [
                                    "itemIds",
                                    "giftWrapType"
                                ]
                            }
                        }
                    },
                    "required": [
                        "count",
                        "total",
                        "roundUp",
                        "roundUpAmount",
                        "itemSubTotal",
                        "giftWrapCharge",
                        "adjustmentsTotal",
                        "tax",
                        "shippingCharges",
                        "subTotal",
                        "shipping"
                    ]
            }



+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                    "errorCode": "SRV_SESSION_INVALID",
                    "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                      "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                      }
                    },
                    "required": ["errorCode", "errorMessage"]
                   }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




### Place Order [POST]
This will place/complete the order in the session and a unique Order Number will be generated.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 201

    + Headers


            Content-Type: application/json
            Location: (required,URL,'https://api.jcpenney.com/v2/orders/{orderId}')


    + Body

            {

            }
    + Schema

            {

            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_ORDER_PAYMENTISNULL",
                "errorMessage": "Payment information is not provided."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 401

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_SESSION_INVALID",
                "errorMessage": "The customer's session is invalid."
            }


    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }



## Order History [/orders]
### Get Orders for Registered Customer [GET]
Retrieves all the orders present in a Registered Customer profile. This is used for Order Tracking and its response returns the status as In-process, Cancelled or Completed.
##### HTTPS required
##### Authentication required

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200

    + HeadersContent-Type: application/json
            X-Data-Type: String... (required, String, `OrderHistory`)

    + Body


            [
                        {
                            "number": "2013-1115-4000-6232",
                            "url": "https://api.jcpenney.com/v2/orders/2013-1115-4000-6232",
                            "orderDate": "04/21/2013",
                            "status": "CANCELLED"
                        },
                        {
                            "number": "2013-0975-4007-3811",
                            "url": "https://api.jcpenney.com/v2/orders/2013-0975-4007-3811",
                            "orderDate": "04/07/2013",
                            "status": "COMPLETED"
                        },
                        {
                            "number": "2012-2045-1007-8439",
                            "url": "https://api.jcpenney.com/v2/orders/2012-2045-1007-8439",
                            "orderDate": "07/22/2012",
                            "status": "INPROCESS"
                        }
            ]


    + Schema



                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "List of orders",
                        "type": "array",
                        "items": {
                            "title": "order",
                            "type": "object",
                            "properties": {
                                "number": {
                                    "type": "string",
                                    "description": "order number"
                                },
                                "url": {
                                    "type": "URL",
                                    "description": "URL to retrieve the order details"
                                },
                                "orderDate": {
                                    "type": "string",
                                    "description": "Formatted order submission date."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "order status",
                                    "enum": [
                                        "INPROCESS",
                                        "CANCELLED",
                                        "COMPLETED"
                                    ]
                                }
                            },
                            "required": [
                                    "number",
                                    "url",
                                    "orderDate",
                                    "status"
                            ]
                        }





+ Response 401


    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, String, `ExceptionMessage`)

    + Body


            {
                    "errorCode": "SRV_SESSION_INVALID",
                    "errorMessage": "The customer session is invalid."
            }


    + Schema


            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }






+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
                        "errorCode": "SRV_GENERIC_ERROR",
                        "errorMessage": "There was an error while processing your request. Please try after some time."
            }


    + Schema


                {
                "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "ExceptionMessage",
                    "description": "Represents the error in the system.",
                    "properties": {
                            "errorCode": {
                                    "type": "string",
                                    "description": "Error code indicating the type of error."
                                },
                            "errorMessage": {
                                    "type": "string",
                                    "description": "Descriptive message for the error in the system."
                                }
                            },
                    "required": [
                        "errorCode",
                        "errorMessage"
                        ]
                    }






## Track Order by ID [/orders/{orderId}]
### Get Order for Registered Customer [GET]
Retrieves a particular order from a customer profile. The Order Confirmation number is provided as Input and complete order details are returned.
##### HTTPS required
##### Authentication required

+ Parameters
    + orderId (required, string, `2012-0975-8505-9577`) ... Order ID `orderId` of the submitted order to retrieve all its details.

+ Request

    + Headers

            Cookie: (required, String, `DPJSESSIONID=0000Q6fR2-IBW5m4u6N8iZnXOzL:16r1lv9on;DPSecureCookie=34887f898a43f791137ff3a37abaee0f;DPOrder=L121950004;`)

+ Response 200
    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `Order`)
    + Body

            {
             "orderNumber": "2013-3396-2002-9978",
             "orderDate": "12/05/2013",
             "shippingStatus": "In Process",
             "shippingCarrier": "USPS",
             "shippingMethod": "HOME DELIVERY",
            "itemSubTotal": 41.99,
             "totalSavings": 0,
            "orderSubtotal": 41.99,
            "shippingAndHandling": 8,
            "tax": 4.12,
            "total": 54.11,
            "items": [
            {
            "productNumber": "FC2191238",
            "productName": "BB LS EMB NCK W/CUTO IVORY/BLK 6",
            "inventoryStatus": "INSTOCK",
            "totalWithOutDiscount": 41.99,
            "total": "41.99",
            "messages": [
                {
                    "type": "SHIPPING",
                    "data": "These items will arrive in 4 to 7 business days."
                }
            ]
             }
             ],
            "shipping": {
            "firstName": "Alice",
            "lastName": "Sampleton",
            "addressLine1": "5555 Mulholland Drive",
            "city": "Los Angeles",
            "state": "CA",
            "zip": "90068",
            "country": "US",
            "phone": "8185551234"
            },
            "paymentMethods": [
            {
            "type": "MASTERCARD",
            "last4": "9999",
            "expiryYear": 2014,
            "expiryMonth": 1,
            "address": {
                "firstName": "Alice",
                "lastName": "Sampleton",
                "addressLine1": "5555 Mulholland Drive",
                "city": "Los Angeles",
                "state": "CA",
                "zip": "90068",
                "country": "US",
                "phone": "8185551234"
            }
            }
            ]
            }



    + Schema



            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Shopping bag.",
            "type": "object",
            "properties": {
                "email": {
            "type": "string",
            "description": "email address for the bag."
                     },
                 "count": {
                  "type": "integer",
            "description": "count of products/items in the bag",
            "default": 2
              },
              "total": {
            "type": "double",
            "description": "order total",
            "default": 0
             },
             "roundUp": {
            "type": "boolean",
            "description": "Indicates whether the order total is to be rounded up to the nearest dollar for jcp cares charity.",
            "default": "false"
              },
              "roundUpAmount": {
            "type": "double",
            "description": "Amount rounded up for charity from order total.",
            "default": 0
             },
             "itemSubTotal": {
            "type": "double",
            "description": "Item subtotal or merchandise subtotal for the order.",
            "default": 0
             },
            "giftWrapCharge": {
            "type": "double",
            "description": "Amount charged for gift wrapping the items.",
            "default": 0
              },
              "adjustmentsTotal": {
            "type": "double",
            "description": "Sum of adjustments for the order based on promotions/reward certificates applied to the order.",
            "default": 0
             },
            "adjustments": {
            "type": "array",
            "title": "List of adjustments for the item",
            "items": {
                "type": "object",
                "title": "adjustment",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "type of adjustment",
                        "enum": [
                            "COUPON",
                            "REWARDS"
                        ]
                    },
                    "code": {
                        "type": "string",
                        "description": "Promotion code/ rewards certificate code"
                    },
                    "amount": {
                        "type": "double",
                        "description": "Reward/promo amount adjusted.",
                        "default": 0
                    },
                    "serialNumber": {
                        "type": "string",
                        "description": "Serial number for reward certificate."
                    }
                },
                "required": [
                    "type",
                    "code",
                    "amount"
                ]
            }
               },
            "tax": {
            "type": "double",
            "description": "tax on order. Because JCPenney does business in all 50 states, we are required by law to collect all state and local sales taxes, whether the sale was made in on jcp.com, in-store or by phone.",
            "default": 0
              },
             "shippingCharges": {
            "type": "array",
            "title": "list of shipping charges applicable to order.",
            "items": {
                "title": "shipping option",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of shipping charge",
                        "enum": [
                            "SHIP_TO_HOME",
                            "SHIP_TO_STORE",
                            "SHIPPING_AND_HANDLING"
                        ]
                    },
                    "charge": {
                        "type": "double",
                        "description": "Shipping charge for the shipping option.",
                        "default": 0
                    }
                },
                "required": [
                    "type",
                    "charge"
                ]
            }
              },
             "subTotal": {
            "type": "double",
            "description": "order sub-total . i.e., itemSubtotal - adjustmentsTotal",
            "default": 0
              },
              "shipping": {
              "title": "Shipping address on order",
               "type": "object",
               "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the address record in the application."
                },
                "firstName": {
                    "type": "string",
                    "description": "First name for the customer address.",
                    "minLength": 1,
                    "maxLength": 17
                },
                "middleInitial": {
                    "type": "string",
                    "description": "Middle initial for the customer address.",
                    "minLength": 1,
                    "maxLength": 1
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name for the customer address.",
                    "minLength": 1,
                    "maxLength": 24
                },
                "company": {
                    "type": "string",
                    "description": "Company name for the customer address.",
                    "minLength": 1,
                    "maxLength": 23
                },
                "addressLine1": {
                    "type": "string",
                    "description": "Street address line 1.",
                    "minLength": 1,
                    "maxLength": 40
                },
                "addressLine2": {
                    "type": "string",
                    "description": "Street address line 2.",
                    "minLength": 0,
                    "maxLength": 40
                },
                "addressLine3": {
                    "type": "string",
                    "description": "Street address line 3. Applicable for international address only.",
                    "minLength": 0,
                    "maxLength": 40
                },
                "city": {
                    "type": "string",
                    "description": "City name.",
                    "minLength": 1,
                    "maxLength": 20
                },
                "APO_FPO_DPO": {
                    "type": "string",
                    "description": "Indicates the type of Military address",
                    "enum": [
                        "APO",
                        "FPO",
                        "DPO"
                    ]
                },
                "state": {
                    "type": "string",
                    "description": "State code/abbreviation for US.",
                    "maxLength": 2
                },
                "province": {
                    "type": "string",
                    "description": "Province/Territory/Region. Province code for Canada address.",
                    "maxLength": 10
                },
                "zip": {
                    "type": "string",
                    "description": "zip code.",
                    "maxLength": 8
                },
                "country": {
                    "type": "string",
                    "description": "Country code."
                },
                "phone": {
                    "type": "string",
                    "description": "Unformatted 10 digit phone number",
                    "maxLength": 10
                },
                "secondaryPhoneNumber": {
                    "type": "string",
                    "description": "Unformatted 10 digit phone number. Applicable to international address only."
                }
            },
            "required": [
                "country",
                "firstName",
                "lastName",
                "addressLine1",
                "city",
                "state",
                "zip",
                "phone"
            ]
             },
            "shippingOptions": {
            "type": "array",
            "title": "List of shipping options for the order.",
            "items": {
                "type": "object",
                "title": "shipping option",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of shipping option"
                    },
                    "charge": {
                        "type": "double",
                        "description": "shipping option charge",
                        "default": 0
                    },
                    "duration": {
                        "type": "string",
                        "description": "shipping duration"
                    }
                },
                "required": [
                    "type",
                    "charge",
                    "duration"
                ]
            }
             },
             "paymentMethods": {
            "title": "List of payment methods ",
            "type": "array",
            "items": {
                "type": "object",
                "title": "Payment option",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of card",
                        "enum": [
                            "MASTERCARD",
                            "Visa",
                            "AMEX",
                            "DISCOVER",
                            "JCP"
                        ]
                    },
                    "last4": {
                        "type": "string",
                        "description": "Last 4 characters of a card. In case of JCP cards characters 6-10 of the card number.",
                        "minLength": 4,
                        "maxLength": 4
                    },
                    "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month of the card.",
                        "minimum": 1,
                        "maximum": 12
                    },
                    "expiryYear": {
                        "type": "integer",
                        "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date."
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Indicates whether the card is the default payment method for the customer account.",
                        "default": false
                    },
                    "address": {
                        "title": "Address",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique identifier for the address record in the application."
                            },
                            "firstName": {
                                "type": "string",
                                "description": "First name for the customer address.",
                                "minLength": 1,
                                "maxLength": 17
                            },
                            "middleInitial": {
                                "type": "string",
                                "description": "Middle initial for the customer address.",
                                "minLength": 1,
                                "maxLength": 1
                            },
                            "lastName": {
                                "type": "string",
                                "description": "Last name for the customer address.",
                                "minLength": 1,
                                "maxLength": 24
                            },
                            "company": {
                                "type": "string",
                                "description": "Company name for the customer address.",
                                "minLength": 1,
                                "maxLength": 23
                            },
                            "addressLine1": {
                                "type": "string",
                                "description": "Street address line 1.",
                                "minLength": 1,
                                "maxLength": 40
                            },
                            "addressLine2": {
                                "type": "string",
                                "description": "Street address line 2.",
                                "minLength": 0,
                                "maxLength": 40
                            },
                            "addressLine3": {
                                "type": "string",
                                "description": "Street address line 3. Applicable for international address only.",
                                "minLength": 0,
                                "maxLength": 40
                            },
                            "city": {
                                "type": "string",
                                "description": "City name.",
                                "minLength": 1,
                                "maxLength": 20
                            },
                            "APO_FPO_DPO": {
                                "type": "string",
                                "description": "Indicates the type of Military address",
                                "enum": [
                                    "APO",
                                    "FPO",
                                    "DPO"
                                ]
                            },
                            "state": {
                                "type": "string",
                                "description": "State code/abbreviation for US.",
                                "maxLength": 2
                            },
                            "province": {
                                "type": "string",
                                "description": "Province/Territory/Region. Province code for Canada address.",
                                "maxLength": 10
                            },
                            "zip": {
                                "type": "string",
                                "description": "zip code.",
                                "maxLength": 8
                            },
                            "country": {
                                "type": "string",
                                "description": "Country code."
                            },
                            "phone": {
                                "type": "string",
                                "description": "Unformatted 10 digit phone number",
                                "maxLength": 10
                            },
                            "secondaryPhoneNumber": {
                                "type": "string",
                                "description": "Unformatted 10 digit phone number. Applicable to international address only."
                            }
                        },
                        "required": [
                            "country",
                            "firstName",
                            "lastName",
                            "addressLine1",
                            "city",
                            "state",
                            "zip",
                            "phone"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "last4",
                    "default",
                    "address"
                ]
            }
            },
            "items": {
            "type": "array",
            "title": "list of items in bag",
            "items": {
                "title": "Item",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "unique identifier for the item in the bag."
                    },
                    "productNumber": {
                        "type": "string",
                        "description": "Formatted product number."
                    },
                    "productUrl": {
                        "type": "URL",
                        "description": "URL to the catalog service to retrieve product details."
                    },
                    "productId": {
                        "type": "string",
                        "description": "11-digit SKU id for the item."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the product."
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "URL to the image assigned to the product."
                    },
                    "activePrice": {
                        "type": "double",
                        "description": "active/current price for the product.",
                        "default": 0
                    },
                    "originalPrice": {
                        "type": "double",
                        "description": "original price for the product.",
                        "double": 0
                    },
                    "sale": {
                        "type": "boolean",
                        "description": "Indicates that the product is available on clearance.",
                        "default": false
                    },
                    "savings": {
                        "type": "double",
                        "description": "Savings on the item.",
                        "default": 0
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Number of items added to the bag",
                        "default": 1
                    },
                    "totalWithoutDiscount": {
                        "type": "double",
                        "description": "Item total without discounts or adjustments.",
                        "default": 0
                    },
                    "adjustmentsTotal": {
                        "type": "double",
                        "description": "Adjustments total for the item.",
                        "default": 0
                    },
                    "adjustments": {
                        "type": "array",
                        "title": "List of adjustments for the item",
                        "items": {
                            "type": "object",
                            "title": "adjustment",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "type of adjustment",
                                    "enum": [
                                        "COUPON",
                                        "REWARDS"
                                    ]
                                },
                                "code": {
                                    "type": "string",
                                    "description": "Promotion code/ rewards certificate code"
                                },
                                "amount": {
                                    "type": "double",
                                    "description": "Reward/promo amount adjusted.",
                                    "default": 0
                                },
                                "serialNumber": {
                                    "type": "string",
                                    "description": "Serial number for reward certificate."
                                }
                            },
                            "required": [
                                "type",
                                "code",
                                "amount"
                            ]
                        }
                    },
                    "total": {
                        "type": "double",
                        "description": "item total.",
                        "default": 0
                    },
                    "inventoryStatus": {
                        "type": "string",
                        "description": "Inventory status of the item."
                    },
                    "attributes": {
                        "type": "array",
                        "title": "List of attributes for the item",
                        "items": {
                            "title": "Attribute",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Type of attribute"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "value of the attribute."
                                }
                            },
                            "required": [
                                "type",
                                "value"
                            ]
                        }
                    },
                    "parentId": {
                        "type": "string",
                        "description": "id of the parent item in the bag. Applicable to items with service agreements only."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "activePrice",
                    "originalPrice",
                    "sale",
                    "inventoryStatus",
                    "description",
                    "quantity",
                    "productNumber",
                    "productId",
                    "savings",
                    "totalWithoutDiscount",
                    "adjustmentsTotal",
                    "total"
                ]
            }
            },
             "giftWraps": {
            "type": "array",
            "title": "list of gift wraps for items in bag",
            "items": {
                "title": "gift wrap",
                "type": "object",
                "properties": {
                    "itemIds": {
                        "type": "array",
                        "title": "list of items to be gift wrapped.",
                        "items": {
                            "title": "item id",
                            "type": "string"
                        }
                    },
                    "to": {
                        "type": "string",
                        "description": "gift recipient details."
                    },
                    "from": {
                        "type": "string",
                        "description": "gifter details"
                    },
                    "personalizedMessage": {
                        "type": "string",
                        "description": "personalized message for the gift wrap."
                    },
                    "giftWrapType": {
                        "type": "string",
                        "description": "type of gift wrap."
                    }
                },
                "required": [
                    "itemIds",
                    "giftWrapType"
                ]
            }
              }
             },
             "required": [
             "count",
              "total",
             "roundUp",
             "roundUpAmount",
             "itemSubTotal",
             "giftWrapCharge",
             "adjustmentsTotal",
             "tax",
             "shippingCharges",
            "subTotal",
             "shipping"
             ]
            }



+ Response 401
    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)
    + Body


            {
            "errorCode": "SRV_SESSION_INVALID",
            "errorMessage": "The customer's session is invalid."
            }

    + Schema

             {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                    "type": "string",
                    "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                    "type": "string",
                    "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                "errorCode",
                "errorMessage"
                ]
             }



+ Response 404

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)
    + Body


            {
            "errorCode": "SRV_ORDER_NOTFOUND",
            "errorMessage": "Order not found."
            }



    + Schema



            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "ExceptionMessage",
            "description": "Represents the error in the system.",
            "properties": {
            "errorCode": {
            "type": "string",
            "description": "Error code indicating the type of error."
            },
            "errorMessage": {
            "type": "string",
            "description": "Descriptive message for the error in the system."
            }
            },
            "required": [
             "errorCode",
            "errorMessage"
             ]
            }



+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)
    + Body


            {
            "errorCode": "SRV_GENERIC_ERROR",
            "errorMessage": "There was an error while processing your request. Please try after some time."
            }



    + Schema


            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "ExceptionMessage",
            "description": "Represents the error in the system.",
             "properties": {
             "errorCode": {
            "type": "string",
            "description": "Error code indicating the type of error."
             },
             "errorMessage": {
            "type": "string",
            "description": "Descriptive message for the error in the system."
             }
             },
             "required": [
             "errorCode",
            "errorMessage"
             ]
            }




### Get Order for Guest Customer [POST]
Retrieves order details for a Guest Customer based on validation of phone number provided for billing address on the order and the Order Confirmation number.

+ Parameters
    + orderId (required, string, `2012-0975-8505-9577`) ... Order ID `orderId` of the submitted order to retrieve all its details.

+ Request

    + Body


            [
                {
                "phone": "123-456-7890"
                }
            ]


    + Schema


                {
                "$schema": "http://json-schema.org/draft-04/schema#",
                 "title": "Phone number for validation.",
                "properties": {
                 "phone": {
                  "type": "string",
                 "description": "10 digit formatted phone number provided on the shipping address for the order."
                 }
                }
                }




+ Response 200
    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `Order`)
    + Body


            {
             "orderNumber": "2013-3396-2002-9978",
             "orderDate": "12/05/2013",
             "shippingStatus": "In Process",
             "shippingCarrier": "USPS",
             "shippingMethod": "HOME DELIVERY",
            "itemSubTotal": 41.99,
             "totalSavings": 0,
            "orderSubtotal": 41.99,
            "shippingAndHandling": 8,
            "tax": 4.12,
            "total": 54.11,
            "items": [
            {
            "productNumber": "FC2191238",
            "productName": "BB LS EMB NCK W/CUTO IVORY/BLK 6",
            "inventoryStatus": "INSTOCK",
            "totalWithOutDiscount": 41.99,
            "total": "41.99",
            "messages": [
                {
                    "type": "SHIPPING",
                    "data": "These items will arrive in 4 to 7 business days."
                }
            ]
             }
             ],
            "shipping": {
            "firstName": "Alice",
            "lastName": "Sampleton",
            "addressLine1": "5555 Mulholland Drive",
            "city": "Los Angeles",
            "state": "CA",
            "zip": "90068",
            "country": "US",
            "phone": "8185551234"
            },
            "paymentMethods": [
            {
            "type": "MASTERCARD",
            "last4": "9999",
            "expiryYear": 2014,
            "expiryMonth": 1,
            "address": {
                "firstName": "Alice",
                "lastName": "Sampleton",
                "addressLine1": "5555 Mulholland Drive",
                "city": "Los Angeles",
                "state": "CA",
                "zip": "90068",
                "country": "US",
                "phone": "8185551234"
            }
            }
            ]
            }




    + Schema


            Recommended Products assigned to the specific productId are successfully retrieved.
            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Shopping bag.",
            "type": "object",
            "properties": {
                "email": {
            "type": "string",
            "description": "email address for the bag."
                     },
                 "count": {
                  "type": "integer",
            "description": "count of products/items in the bag",
            "default": 2
              },
              "total": {
            "type": "double",
            "description": "order total",
            "default": 0
             },
             "roundUp": {
            "type": "boolean",
            "description": "Indicates whether the order total is to be rounded up to the nearest dollar for JCP cares charity.",
            "default": "false"
              },
              "roundUpAmount": {
            "type": "double",
            "description": "Amount rounded up for charity from order total.",
            "default": 0
             },
             "itemSubTotal": {
            "type": "double",
            "description": "Item subtotal or merchandise subtotal for the order.",
            "default": 0
             },
            "giftWrapCharge": {
            "type": "double",
            "description": "Amount charged for gift wrapping the items.",
            "default": 0
              },
              "adjustmentsTotal": {
            "type": "double",
            "description": "Sum of adjustments for the order based on promotions/reward certificates applied to the order.",
            "default": 0
             },
            "adjustments": {
            "type": "array",
            "title": "List of adjustments for the item",
            "items": {
                "type": "object",
                "title": "adjustment",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "type of adjustment",
                        "enum": [
                            "COUPON",
                            "REWARDS"
                        ]
                    },
                    "code": {
                        "type": "string",
                        "description": "Promotion code/ rewards certificate code"
                    },
                    "amount": {
                        "type": "double",
                        "description": "Reward/promo amount adjusted.",
                        "default": 0
                    },
                    "serialNumber": {
                        "type": "string",
                        "description": "Serial number for reward certificate."
                    }
                },
                "required": [
                    "type",
                    "code",
                    "amount"
                ]
            }
               },
            "tax": {
            "type": "double",
            "description": "tax on order. Because JCPenney does business in all 50 states, we are required by law to collect all state and local sales taxes, whether the sale was made in on jcp.com, in-store or by phone.",
            "default": 0
              },
             "shippingCharges": {
            "type": "array",
            "title": "list of shipping charges applicable to order.",
            "items": {
                "title": "shipping option",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of shipping charge",
                        "enum": [
                            "SHIP_TO_HOME",
                            "SHIP_TO_STORE",
                            "SHIPPING_AND_HANDLING"
                        ]
                    },
                    "charge": {
                        "type": "double",
                        "description": "Shipping charge for the shipping option.",
                        "default": 0
                    }
                },
                "required": [
                    "type",
                    "charge"
                ]
            }
              },
             "subTotal": {
            "type": "double",
            "description": "order sub-total . i.e., itemSubtotal - adjustmentsTotal",
            "default": 0
              },
              "shipping": {
              "title": "Shipping address on order",
               "type": "object",
               "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the address record in the application."
                },
                "firstName": {
                    "type": "string",
                    "description": "First name for the customer address.",
                    "minLength": 1,
                    "maxLength": 17
                },
                "middleInitial": {
                    "type": "string",
                    "description": "Middle initial for the customer address.",
                    "minLength": 1,
                    "maxLength": 1
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name for the customer address.",
                    "minLength": 1,
                    "maxLength": 24
                },
                "company": {
                    "type": "string",
                    "description": "Company name for the customer address.",
                    "minLength": 1,
                    "maxLength": 23
                },
                "addressLine1": {
                    "type": "string",
                    "description": "Street address line 1.",
                    "minLength": 1,
                    "maxLength": 40
                },
                "addressLine2": {
                    "type": "string",
                    "description": "Street address line 2.",
                    "minLength": 0,
                    "maxLength": 40
                },
                "addressLine3": {
                    "type": "string",
                    "description": "Street address line 3. Applicable for international address only.",
                    "minLength": 0,
                    "maxLength": 40
                },
                "city": {
                    "type": "string",
                    "description": "City name.",
                    "minLength": 1,
                    "maxLength": 20
                },
                "APO_FPO_DPO": {
                    "type": "string",
                    "description": "Indicates the type of Military address",
                    "enum": [
                        "APO",
                        "FPO",
                        "DPO"
                    ]
                },
                "state": {
                    "type": "string",
                    "description": "State code/abbreviation for US.",
                    "maxLength": 2
                },
                "province": {
                    "type": "string",
                    "description": "Province/Territory/Region. Province code for Canada address.",
                    "maxLength": 10
                },
                "zip": {
                    "type": "string",
                    "description": "zip code.",
                    "maxLength": 8
                },
                "country": {
                    "type": "string",
                    "description": "Country code."
                },
                "phone": {
                    "type": "string",
                    "description": "Unformatted 10 digit phone number",
                    "maxLength": 10
                },
                "secondaryPhoneNumber": {
                    "type": "string",
                    "description": "Unformatted 10 digit phone number. Applicable to international address only."
                }
            },
            "required": [
                "country",
                "firstName",
                "lastName",
                "addressLine1",
                "city",
                "state",
                "zip",
                "phone"
            ]
             },
            "shippingOptions": {
            "type": "array",
            "title": "List of shipping options for the order.",
            "items": {
                "type": "object",
                "title": "shipping option",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of shipping option"
                    },
                    "charge": {
                        "type": "double",
                        "description": "shipping option charge",
                        "default": 0
                    },
                    "duration": {
                        "type": "string",
                        "description": "shipping duration"
                    }
                },
                "required": [
                    "type",
                    "charge",
                    "duration"
                ]
            }
             },
             "paymentMethods": {
            "title": "List of payment methods ",
            "type": "array",
            "items": {
                "type": "object",
                "title": "Payment option",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of card",
                        "enum": [
                            "MASTERCARD",
                            "Visa",
                            "AMEX",
                            "DISCOVER",
                            "JCP"
                        ]
                    },
                    "last4": {
                        "type": "string",
                        "description": "Last 4 characters of a card. In case of JCP cards characters 6-10 of the card number.",
                        "minLength": 4,
                        "maxLength": 4
                    },
                    "expiryMonth": {
                        "type": "integer",
                        "description": "Expiry month of the card.",
                        "minimum": 1,
                        "maximum": 12
                    },
                    "expiryYear": {
                        "type": "integer",
                        "description": "Expiry year of the card. Should be greater than the current year. Combination of expiry month and expiry year should be greater than the current date."
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Indicates whether the card is the default payment method for the customer account.",
                        "default": false
                    },
                    "address": {
                        "title": "Address",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique identifier for the address record in the application."
                            },
                            "firstName": {
                                "type": "string",
                                "description": "First name for the customer address.",
                                "minLength": 1,
                                "maxLength": 17
                            },
                            "middleInitial": {
                                "type": "string",
                                "description": "Middle initial for the customer address.",
                                "minLength": 1,
                                "maxLength": 1
                            },
                            "lastName": {
                                "type": "string",
                                "description": "Last name for the customer address.",
                                "minLength": 1,
                                "maxLength": 24
                            },
                            "company": {
                                "type": "string",
                                "description": "Company name for the customer address.",
                                "minLength": 1,
                                "maxLength": 23
                            },
                            "addressLine1": {
                                "type": "string",
                                "description": "Street address line 1.",
                                "minLength": 1,
                                "maxLength": 40
                            },
                            "addressLine2": {
                                "type": "string",
                                "description": "Street address line 2.",
                                "minLength": 0,
                                "maxLength": 40
                            },
                            "addressLine3": {
                                "type": "string",
                                "description": "Street address line 3. Applicable for international address only.",
                                "minLength": 0,
                                "maxLength": 40
                            },
                            "city": {
                                "type": "string",
                                "description": "City name.",
                                "minLength": 1,
                                "maxLength": 20
                            },
                            "APO_FPO_DPO": {
                                "type": "string",
                                "description": "Indicates the type of Military address",
                                "enum": [
                                    "APO",
                                    "FPO",
                                    "DPO"
                                ]
                            },
                            "state": {
                                "type": "string",
                                "description": "State code/abbreviation for US.",
                                "maxLength": 2
                            },
                            "province": {
                                "type": "string",
                                "description": "Province/Territory/Region. Province code for Canada address.",
                                "maxLength": 10
                            },
                            "zip": {
                                "type": "string",
                                "description": "zip code.",
                                "maxLength": 8
                            },
                            "country": {
                                "type": "string",
                                "description": "Country code."
                            },
                            "phone": {
                                "type": "string",
                                "description": "Unformatted 10 digit phone number",
                                "maxLength": 10
                            },
                            "secondaryPhoneNumber": {
                                "type": "string",
                                "description": "Unformatted 10 digit phone number. Applicable to international address only."
                            }
                        },
                        "required": [
                            "country",
                            "firstName",
                            "lastName",
                            "addressLine1",
                            "city",
                            "state",
                            "zip",
                            "phone"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "last4",
                    "default",
                    "address"
                ]
            }
            },
            "items": {
            "type": "array",
            "title": "list of items in bag",
            "items": {
                "title": "Item",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "unique identifier for the item in the bag."
                    },
                    "productNumber": {
                        "type": "string",
                        "description": "Formatted product number."
                    },
                    "productUrl": {
                        "type": "URL",
                        "description": "URL to the catalog service to retrieve product details."
                    },
                    "productId": {
                        "type": "string",
                        "description": "11-digit SKU id for the item."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the product."
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "URL to the image assigned to the product."
                    },
                    "activePrice": {
                        "type": "double",
                        "description": "active/current price for the product.",
                        "default": 0
                    },
                    "originalPrice": {
                        "type": "double",
                        "description": "original price for the product.",
                        "double": 0
                    },
                    "sale": {
                        "type": "boolean",
                        "description": "Indicates that the product is available on clearance.",
                        "default": false
                    },
                    "savings": {
                        "type": "double",
                        "description": "Savings on the item.",
                        "default": 0
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Number of items added to the bag",
                        "default": 1
                    },
                    "totalWithoutDiscount": {
                        "type": "double",
                        "description": "Item total without discounts or adjustments.",
                        "default": 0
                    },
                    "adjustmentsTotal": {
                        "type": "double",
                        "description": "Adjustments total for the item.",
                        "default": 0
                    },
                    "adjustments": {
                        "type": "array",
                        "title": "List of adjustments for the item",
                        "items": {
                            "type": "object",
                            "title": "adjustment",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "type of adjustment",
                                    "enum": [
                                        "COUPON",
                                        "REWARDS"
                                    ]
                                },
                                "code": {
                                    "type": "string",
                                    "description": "Promotion code/ rewards certificate code"
                                },
                                "amount": {
                                    "type": "double",
                                    "description": "Reward/promo amount adjusted.",
                                    "default": 0
                                },
                                "serialNumber": {
                                    "type": "string",
                                    "description": "Serial number for reward certificat."
                                }
                            },
                            "required": [
                                "type",
                                "code",
                                "amount"
                            ]
                        }
                    },
                    "total": {
                        "type": "double",
                        "description": "item total.",
                        "default": 0
                    },
                    "inventoryStatus": {
                        "type": "string",
                        "description": "Inventory status of the item."
                    },
                    "attributes": {
                        "type": "array",
                        "title": "List of attributes for the item",
                        "items": {
                            "title": "Attribute",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Type of attribute"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "value of the attribute."
                                }
                            },
                            "required": [
                                "type",
                                "value"
                            ]
                        }
                    },
                    "parentId": {
                        "type": "string",
                        "description": "id of the parent item in the bag. Applicable to items with service agreements only."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "activePrice",
                    "originalPrice",
                    "sale",
                    "inventoryStatus",
                    "description",
                    "quantity",
                    "productNumber",
                    "productId",
                    "savings",
                    "totalWithoutDiscount",
                    "adjustmentsTotal",
                    "total"
                ]
            }
            },
             "giftWraps": {
            "type": "array",
            "title": "list of gift wraps for items in bag",
            "items": {
                "title": "gift wrap",
                "type": "object",
                "properties": {
                    "itemIds": {
                        "type": "array",
                        "title": "list of items to be gift wrapped.",
                        "items": {
                            "title": "item id",
                            "type": "string"
                        }
                    },
                    "to": {
                        "type": "string",
                        "description": "gift recepient details."
                    },
                    "from": {
                        "type": "string",
                        "description": "gifter details"
                    },
                    "personalizedMessage": {
                        "type": "string",
                        "description": "personalized message for the gift wrap."
                    },
                    "giftWrapType": {
                        "type": "string",
                        "description": "type of gift wrap."
                    }
                },
                "required": [
                    "itemIds",
                    "giftWrapType"
                ]
            }
              }
             },
             "required": [
             "count",
              "total",
             "roundUp",
             "roundUpAmount",
             "itemSubTotal",
             "giftWrapCharge",
             "adjustmentsTotal",
             "tax",
             "shippingCharges",
            "subTotal",
             "shipping"
             ]
            }



+ Response 401
    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)
    + Body


            {
            "errorCode": "SRV_PHONENUMBER_INVALID",
            "errorMessage": "The phone number provided does not match the phone number on the order."
            }



    + Schema


            {
             "$schema": "http://json-schema.org/draft-04/schema#",
             "title": "ExceptionMessage",
            "description": "Represents the error in the system.",
            "properties": {
             "errorCode": {
             "type": "string",
             "description": "Error code indicating the type of error."
            },
            "errorMessage": {
            "type": "string",
            "description": "Descriptive message for the error in the system."
            }
            },
            "required": [
            "errorCode",
            "errorMessage"
            ]
            }


+ Response 404
    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body



            {
            "errorCode": "SRV_ORDER_NOTFOUND",
             "errorMessage": "Order not found."
            }




    + Schema


            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "ExceptionMessage",
            "description": "Represents the error in the system.",
            "properties": {
            "errorCode": {
            "type": "string",
            "description": "Error code indicating the type of error."
            },
            "errorMessage": {
            "type": "string",
            "description": "Descriptive message for the error in the system."
            }
            },
            "required": [
             "errorCode",
            "errorMessage"
             ]
            }




+ Response 500
    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, `ExceptionMessage`)

    + Body


            {
            "errorCode": "SRV_GENERIC_ERROR",
            "errorMessage": "There was an error while processing your request. Please try after some time."
            }



    + Schema


            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "ExceptionMessage",
            "description": "Represents the error in the system.",
             "properties": {
             "errorCode": {
            "type": "string",
            "description": "Error code indicating the type of error."
             },
             "errorMessage": {
            "type": "string",
            "description": "Descriptive message for the error in the system."
             }
             },
             "required": [
             "errorCode",
            "errorMessage"
             ]
            }



# Group Stores
The Stores API provides basic store locator functionality.

## Find Stores [/stores/{storeSearchTerm}{?page,pageSize,searchLimit,storeType}]
### Search for a store [GET]
Search for a store based on the zip code, or city and state, entered by the user.
For example, a typical search by zip code can return all the stores available within 26 miles radius of that zip code.

+ Parameters
    + storeSearchTerm (required, string, `92108`) ... Zip code or StoreNumber or City/State to retrieve all the stores matching the criteria
    + page (optional, Integer, `1`) ... Used for pagination for search result. Default Value set to 1
    + pageSize (optional, string, `5`) ...Min 5 Max 10.  Used to indicate the number of results to be displayed in every call.Default Value set to 5
    + searchLimit (optional, string, `26`) ...  `searchLimit` refers to the radius and is used to fetch the store details with in the radius within which stores are availble. Allowed values - [between 26 and 50]. Default value is 26.
    + storeType (optional, string, `jcpStore`) ... storeType is used to tell the store type example values are 'jcpStore', 'jcpServices' and 'jcpOutlet'.

+ Request

            Example: http://api.jcpenney.com/v2/stores/75034?page=1&pageSize=5
            Example: http://api.jcpenney.com/v2/stores/plano,tx


+ Response 200

  + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, 'Stores`)

  + Body

            {
                "stores": [
                    {
                        "id":"1234",
                        "name": "King Of Prussia Plaz",
                        "number": "1234",
                        "street": "160 N Gulph Rd Ste 5000",
                        "city": "King Of Prussia",
                        "state": "PA",
                        "country": "USA",
                        "zip": "19406",
                        "phone": "(610)992-1096",
                        "distance": 1.1,
                        "latitude": 67,
                        "longitude": 99,
                        "services": [
                            "big and tall",
                            "custom decorating",
                            "furniture"
                        ],
                        "timings": [
                            {
                                "days": "Mon-Sat",
                                "time": "10:00am-9:00pm"
                            },
                            {
                                "days": "Sun",
                                "time": "11:00am-7:00pm"
                            }
                        ]
                    },
                    {
                        "id":"1234",
                        "name": "Montgomery Mall",
                        "number": "1234",
                        "street": "300 Montgomery Mall",
                        "city": "North Wales",
                        "state": "PA",
                        "country": "USA",
                        "zip": "19454",
                        "phone": "(215)362-2100",
                        "distance": 1.1,
                        "latitude": 67,
                        "longitude": 99,
                        "services": [
                            "big and tall",
                            "custom decorating",
                            "furniture"
                        ],
                        "timings": [
                            {
                                "days": "Mon-Sat",
                                "time": "10:00am-9:00pm"
                            },
                            {
                                "days": "Sun",
                                "time": "11:00am-7:00pm"
                            }
                        ]
                    }
                ],
                "pages": [
                    {
                        "url": "http://api.jcpenney.com/v2/stores/19406?page=1&searchLimit=10",
                        "number": 1,
                        "selected": true
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/stores/19406?page=2&searchLimit=10",
                        "number": 2,
                        "selected": false
                    },
                    {
                        "url": "http://api.jcpenney.com/v2/stores/19406?page=3&searchLimit=10",
                        "number": 3,
                        "selected": false
                    }
                ]
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Stores result",
                "description": "Represents the response of store locator search results",
                "properties": {
                    "stores": {
                        "title": "list of stores",
                        "type": "array",
                        "items": {
                            "title": "Store",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier for the JCPenney store."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "JCPenney store name."
                                },
                                "street": {
                                    "type": "string",
                                    "description": "Address line 1 or street address of the JCPenney store."
                                },
                                "city": {
                                    "type": "string",
                                    "description": "city where the JCPenney store is located."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "state code/state abbreviation."
                                },
                                "zip": {
                                    "type": "string",
                                    "description": "zip code of the location where the JCPenney store is located."
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Formatted 10-digit phone number of the JCPenney store."
                                },
                                "distance": {
                                    "type": "double",
                                    "description": "distance of the store from the current location."
                                },
                                "timings": {
                                    "title": "List of timings",
                                    "type": "array",
                                    "items": {
                                        "title": "timing",
                                        "type": "object",
                                        "properties": {
                                            "days": {
                                                "type": "string",
                                                "description": "indicates the days when the store is open."
                                            },
                                            "time": {
                                                "type": "string",
                                                "description": "formatted time during which the store is open."
                                            },
                                            "note": {
                                                "type": "string",
                                                "description": "note assigned to the store."
                                            }
                                        },
                                        "required": [
                                            "days",
                                            "time"
                                        ]
                                    }
                                },
                                "services": {
                                    "title": "List of services provided by the store.",
                                    "type": "array",
                                    "items": {
                                        "title": "service",
                                        "type": "string",
                                        "description": "service provided by the JCPenney store."
                                    }
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "street",
                                "city",
                                "state",
                                "zip",
                                "phone",
                                "distance",
                                "timings",
                                "services"
                            ]
                        }
                    },
                    "pages": {
                        "title": "List of pages",
                        "type": "array",
                        "items": {
                            "title": "Store",
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "URL",
                                    "description": "URL to the store details based on the page."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Represents the page number.",
                                    "default": 1
                                },
                                "selected": {
                                    "type": "boolean",
                                    "description": "Indicates whether the current page is selected.",
                                    "default": false
                                }
                            },
                            "required": [
                                "url",
                                "number",
                                "selected"
                            ]
                        }
                    }
                },
                "required": [
                    "stores",
                    "pages"
                ]
            }

+ Response 400

    + Headers

            Content-Type: application/json
            X-Data-Type: String ... (required, Error`)

    + Body

            Response when the page number is invalid.
            {
                "errorCode": "SRV_PAGE_INVALID",
                "errorMessage": "The page number provided is invalid."
            }

            Response when page size is invalid.
            {
                "errorCode": "SRV_PAGESIZE_INVALID",
                "errorMessage": "The page size is not valid."
            }

            Response when search limit is invalid.
            {
                "errorCode": "SRV_SEARCHLIMIT_INVALID",
                "errorMessage": "The search limit is invalid."
            }

            Response when store type is invalid.
            {
                "errorCode": "SRV_STORETYPE_INVALID",
                "errorMessage": "The value of store type is invalid."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Error",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                    "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": ["errorCode", "errorMessage"]
            }

+ Response 500

    + Headers

            Content-Type: application/json
            X-Data-Type: (required, String, 'ExceptionMessage')

    + Body

            {
                "errorCode": "SRV_GENERIC_ERROR",
                "errorMessage": "There was an error while processing your request. Please try after some time."
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExceptionMessage",
                "description": "Represents the error in the system.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code indicating the type of error."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Descriptive message for the error in the system."
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }




